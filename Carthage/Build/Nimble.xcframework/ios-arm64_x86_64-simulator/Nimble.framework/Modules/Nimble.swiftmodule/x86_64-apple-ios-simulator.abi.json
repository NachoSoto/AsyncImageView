{
  "ABIRoot": {
    "kind": "Root",
    "name": "TopLevel",
    "printedName": "TopLevel",
    "children": [
      {
        "kind": "Import",
        "name": "Darwin",
        "printedName": "Darwin",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "Var",
        "name": "MACH_MSG_TYPE_MAKE_SEND",
        "printedName": "MACH_MSG_TYPE_MAKE_SEND",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "UInt32",
            "printedName": "Swift.UInt32",
            "usr": "s:s6UInt32V"
          }
        ],
        "declKind": "Var",
        "usr": "s:6Nimble23MACH_MSG_TYPE_MAKE_SENDs6UInt32Vvp",
        "mangledName": "$s6Nimble23MACH_MSG_TYPE_MAKE_SENDs6UInt32Vvp",
        "moduleName": "Nimble",
        "declAttributes": [
          "HasInitialValue",
          "HasStorage",
          "AccessControl",
          "RawDocComment"
        ],
        "isLet": true,
        "hasStorage": true,
        "accessors": [
          {
            "kind": "Accessor",
            "name": "Get",
            "printedName": "Get()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "UInt32",
                "printedName": "Swift.UInt32",
                "usr": "s:s6UInt32V"
              }
            ],
            "declKind": "Accessor",
            "usr": "s:6Nimble23MACH_MSG_TYPE_MAKE_SENDs6UInt32Vvg",
            "mangledName": "$s6Nimble23MACH_MSG_TYPE_MAKE_SENDs6UInt32Vvg",
            "moduleName": "Nimble",
            "implicit": true,
            "accessorKind": "get"
          }
        ]
      },
      {
        "kind": "Function",
        "name": "MACH_MSGH_BITS_REMOTE",
        "printedName": "MACH_MSGH_BITS_REMOTE(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "UInt32",
            "printedName": "Swift.UInt32",
            "usr": "s:s6UInt32V"
          },
          {
            "kind": "TypeNominal",
            "name": "UInt32",
            "printedName": "Swift.UInt32",
            "usr": "s:s6UInt32V"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble21MACH_MSGH_BITS_REMOTEys6UInt32VADF",
        "mangledName": "$s6Nimble21MACH_MSGH_BITS_REMOTEys6UInt32VADF",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "MACH_MSGH_BITS",
        "printedName": "MACH_MSGH_BITS(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "UInt32",
            "printedName": "Swift.UInt32",
            "usr": "s:s6UInt32V"
          },
          {
            "kind": "TypeNominal",
            "name": "UInt32",
            "printedName": "Swift.UInt32",
            "usr": "s:s6UInt32V"
          },
          {
            "kind": "TypeNominal",
            "name": "UInt32",
            "printedName": "Swift.UInt32",
            "usr": "s:s6UInt32V"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble14MACH_MSGH_BITSys6UInt32VAD_ADtF",
        "mangledName": "$s6Nimble14MACH_MSGH_BITSys6UInt32VAD_ADtF",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Var",
        "name": "nativeThreadState",
        "printedName": "nativeThreadState",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Int32",
            "printedName": "Swift.Int32",
            "usr": "s:s5Int32V"
          }
        ],
        "declKind": "Var",
        "usr": "s:6Nimble17nativeThreadStates5Int32Vvp",
        "mangledName": "$s6Nimble17nativeThreadStates5Int32Vvp",
        "moduleName": "Nimble",
        "declAttributes": [
          "HasInitialValue",
          "HasStorage",
          "AccessControl",
          "RawDocComment"
        ],
        "isLet": true,
        "hasStorage": true,
        "accessors": [
          {
            "kind": "Accessor",
            "name": "Get",
            "printedName": "Get()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int32",
                "printedName": "Swift.Int32",
                "usr": "s:s5Int32V"
              }
            ],
            "declKind": "Accessor",
            "usr": "s:6Nimble17nativeThreadStates5Int32Vvg",
            "mangledName": "$s6Nimble17nativeThreadStates5Int32Vvg",
            "moduleName": "Nimble",
            "implicit": true,
            "accessorKind": "get"
          }
        ]
      },
      {
        "kind": "Var",
        "name": "nativeThreadStateCount",
        "printedName": "nativeThreadStateCount",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "UInt32",
            "printedName": "Swift.UInt32",
            "usr": "s:s6UInt32V"
          }
        ],
        "declKind": "Var",
        "usr": "s:6Nimble22nativeThreadStateCounts6UInt32Vvp",
        "mangledName": "$s6Nimble22nativeThreadStateCounts6UInt32Vvp",
        "moduleName": "Nimble",
        "declAttributes": [
          "HasInitialValue",
          "HasStorage",
          "AccessControl"
        ],
        "isLet": true,
        "hasStorage": true,
        "accessors": [
          {
            "kind": "Accessor",
            "name": "Get",
            "printedName": "Get()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "UInt32",
                "printedName": "Swift.UInt32",
                "usr": "s:s6UInt32V"
              }
            ],
            "declKind": "Accessor",
            "usr": "s:6Nimble22nativeThreadStateCounts6UInt32Vvg",
            "mangledName": "$s6Nimble22nativeThreadStateCounts6UInt32Vvg",
            "moduleName": "Nimble",
            "implicit": true,
            "accessorKind": "get"
          }
        ]
      },
      {
        "kind": "Var",
        "name": "nativeMachExceptionMask",
        "printedName": "nativeMachExceptionMask",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "UInt32",
            "printedName": "Swift.UInt32",
            "usr": "s:s6UInt32V"
          }
        ],
        "declKind": "Var",
        "usr": "s:6Nimble23nativeMachExceptionMasks6UInt32Vvp",
        "mangledName": "$s6Nimble23nativeMachExceptionMasks6UInt32Vvp",
        "moduleName": "Nimble",
        "declAttributes": [
          "HasInitialValue",
          "HasStorage",
          "AccessControl"
        ],
        "isLet": true,
        "hasStorage": true,
        "accessors": [
          {
            "kind": "Accessor",
            "name": "Get",
            "printedName": "Get()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "UInt32",
                "printedName": "Swift.UInt32",
                "usr": "s:s6UInt32V"
              }
            ],
            "declKind": "Accessor",
            "usr": "s:6Nimble23nativeMachExceptionMasks6UInt32Vvg",
            "mangledName": "$s6Nimble23nativeMachExceptionMasks6UInt32Vvg",
            "moduleName": "Nimble",
            "implicit": true,
            "accessorKind": "get"
          }
        ]
      },
      {
        "kind": "Var",
        "name": "EXC_TYPES_COUNT",
        "printedName": "EXC_TYPES_COUNT",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Int",
            "printedName": "Swift.Int",
            "usr": "s:Si"
          }
        ],
        "declKind": "Var",
        "usr": "s:6Nimble15EXC_TYPES_COUNTSivp",
        "mangledName": "$s6Nimble15EXC_TYPES_COUNTSivp",
        "moduleName": "Nimble",
        "declAttributes": [
          "HasInitialValue",
          "HasStorage",
          "AccessControl"
        ],
        "isLet": true,
        "hasStorage": true,
        "accessors": [
          {
            "kind": "Accessor",
            "name": "Get",
            "printedName": "Get()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Accessor",
            "usr": "s:6Nimble15EXC_TYPES_COUNTSivg",
            "mangledName": "$s6Nimble15EXC_TYPES_COUNTSivg",
            "moduleName": "Nimble",
            "implicit": true,
            "accessorKind": "get"
          }
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "execTypesCountTuple",
        "printedName": "execTypesCountTuple",
        "children": [
          {
            "kind": "Var",
            "name": "value",
            "printedName": "value",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(τ_0_0, τ_0_0, τ_0_0, τ_0_0, τ_0_0, τ_0_0, τ_0_0, τ_0_0, τ_0_0, τ_0_0, τ_0_0, τ_0_0, τ_0_0, τ_0_0)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ]
              }
            ],
            "declKind": "Var",
            "usr": "s:6Nimble19execTypesCountTupleV5valuex_xxxxxxxxxxxxxtvp",
            "mangledName": "$s6Nimble19execTypesCountTupleV5valuex_xxxxxxxxxxxxxtvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl",
              "RawDocComment"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Tuple",
                    "printedName": "(τ_0_0, τ_0_0, τ_0_0, τ_0_0, τ_0_0, τ_0_0, τ_0_0, τ_0_0, τ_0_0, τ_0_0, τ_0_0, τ_0_0, τ_0_0, τ_0_0)",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_0_0"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_0_0"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_0_0"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_0_0"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_0_0"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_0_0"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_0_0"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_0_0"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_0_0"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_0_0"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_0_0"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_0_0"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_0_0"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_0_0"
                      }
                    ]
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble19execTypesCountTupleV5valuex_xxxxxxxxxxxxxtvg",
                "mangledName": "$s6Nimble19execTypesCountTupleV5valuex_xxxxxxxxxxxxxtvg",
                "moduleName": "Nimble",
                "genericSig": "<τ_0_0 where τ_0_0 : Swift.ExpressibleByIntegerLiteral>",
                "sugared_genericSig": "<T where T : Swift.ExpressibleByIntegerLiteral>",
                "implicit": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Tuple",
                    "printedName": "(τ_0_0, τ_0_0, τ_0_0, τ_0_0, τ_0_0, τ_0_0, τ_0_0, τ_0_0, τ_0_0, τ_0_0, τ_0_0, τ_0_0, τ_0_0, τ_0_0)",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_0_0"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_0_0"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_0_0"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_0_0"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_0_0"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_0_0"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_0_0"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_0_0"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_0_0"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_0_0"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_0_0"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_0_0"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_0_0"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_0_0"
                      }
                    ]
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble19execTypesCountTupleV5valuex_xxxxxxxxxxxxxtvs",
                "mangledName": "$s6Nimble19execTypesCountTupleV5valuex_xxxxxxxxxxxxxtvs",
                "moduleName": "Nimble",
                "genericSig": "<τ_0_0 where τ_0_0 : Swift.ExpressibleByIntegerLiteral>",
                "sugared_genericSig": "<T where T : Swift.ExpressibleByIntegerLiteral>",
                "implicit": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble19execTypesCountTupleV5valuex_xxxxxxxxxxxxxtvM",
                "mangledName": "$s6Nimble19execTypesCountTupleV5valuex_xxxxxxxxxxxxxtvM",
                "moduleName": "Nimble",
                "genericSig": "<τ_0_0 where τ_0_0 : Swift.ExpressibleByIntegerLiteral>",
                "sugared_genericSig": "<T where T : Swift.ExpressibleByIntegerLiteral>",
                "implicit": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "execTypesCountTuple",
                "printedName": "Nimble.execTypesCountTuple<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble19execTypesCountTupleV"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:6Nimble19execTypesCountTupleVACyxGycfc",
            "mangledName": "$s6Nimble19execTypesCountTupleVACyxGycfc",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0 where τ_0_0 : Swift.ExpressibleByIntegerLiteral>",
            "sugared_genericSig": "<T where T : Swift.ExpressibleByIntegerLiteral>",
            "declAttributes": [
              "AccessControl"
            ],
            "init_kind": "Designated"
          }
        ],
        "declKind": "Struct",
        "usr": "s:6Nimble19execTypesCountTupleV",
        "mangledName": "$s6Nimble19execTypesCountTupleV",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.ExpressibleByIntegerLiteral>",
        "sugared_genericSig": "<T where T : Swift.ExpressibleByIntegerLiteral>",
        "declAttributes": [
          "AccessControl"
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "Var",
        "name": "DefaultDelta",
        "printedName": "DefaultDelta",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Double",
            "printedName": "Swift.Double",
            "usr": "s:Sd"
          }
        ],
        "declKind": "Var",
        "usr": "s:6Nimble12DefaultDeltaSdvp",
        "mangledName": "$s6Nimble12DefaultDeltaSdvp",
        "moduleName": "Nimble",
        "declAttributes": [
          "HasInitialValue",
          "HasStorage",
          "AccessControl",
          "RawDocComment"
        ],
        "isLet": true,
        "hasStorage": true,
        "accessors": [
          {
            "kind": "Accessor",
            "name": "Get",
            "printedName": "Get()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Double",
                "printedName": "Swift.Double",
                "usr": "s:Sd"
              }
            ],
            "declKind": "Accessor",
            "usr": "s:6Nimble12DefaultDeltaSdvg",
            "mangledName": "$s6Nimble12DefaultDeltaSdvg",
            "moduleName": "Nimble",
            "implicit": true,
            "accessorKind": "get"
          }
        ]
      },
      {
        "kind": "Function",
        "name": "defaultDelta",
        "printedName": "defaultDelta()",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "GenericTypeParam",
            "printedName": "τ_0_0"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble12defaultDeltaxySFRzlF",
        "mangledName": "$s6Nimble12defaultDeltaxySFRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.FloatingPoint>",
        "sugared_genericSig": "<F where F : Swift.FloatingPoint>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "beCloseTo",
        "printedName": "beCloseTo(_:within:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "GenericTypeParam",
            "printedName": "τ_0_0"
          },
          {
            "kind": "TypeNominal",
            "name": "GenericTypeParam",
            "printedName": "τ_0_0",
            "hasDefaultArg": true
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble9beCloseTo_6withinAA9PredicateVyxGx_xtSFRzlF",
        "mangledName": "$s6Nimble9beCloseTo_6withinAA9PredicateVyxGx_xtSFRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.FloatingPoint>",
        "sugared_genericSig": "<Value where Value : Swift.FloatingPoint>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "beCloseTo",
        "printedName": "beCloseTo(_:within:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "GenericTypeParam",
            "printedName": "τ_0_0"
          },
          {
            "kind": "TypeNominal",
            "name": "Double",
            "printedName": "Swift.Double",
            "hasDefaultArg": true,
            "usr": "s:Sd"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble9beCloseTo_6withinAA9PredicateVyxGx_SdtAA20NMBDoubleConvertibleRzlF",
        "mangledName": "$s6Nimble9beCloseTo_6withinAA9PredicateVyxGx_SdtAA20NMBDoubleConvertibleRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Nimble.NMBDoubleConvertible>",
        "sugared_genericSig": "<Value where Value : Nimble.NMBDoubleConvertible>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "TypeDecl",
        "name": "NMBObjCBeCloseToPredicate",
        "printedName": "NMBObjCBeCloseToPredicate",
        "children": [
          {
            "kind": "Var",
            "name": "within",
            "printedName": "within",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Swift.Double) -> Nimble.NMBObjCBeCloseToPredicate",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NMBObjCBeCloseToPredicate",
                    "printedName": "Nimble.NMBObjCBeCloseToPredicate",
                    "usr": "c:@M@Nimble@objc(cs)NMBObjCBeCloseToPredicate"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Double",
                    "printedName": "Swift.Double",
                    "usr": "s:Sd"
                  }
                ]
              }
            ],
            "declKind": "Var",
            "usr": "c:@M@Nimble@objc(cs)NMBObjCBeCloseToPredicate(py)within",
            "mangledName": "$s6Nimble25NMBObjCBeCloseToPredicateC6withinyACSdcvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl",
              "ObjC"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(Swift.Double) -> Nimble.NMBObjCBeCloseToPredicate",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "NMBObjCBeCloseToPredicate",
                        "printedName": "Nimble.NMBObjCBeCloseToPredicate",
                        "usr": "c:@M@Nimble@objc(cs)NMBObjCBeCloseToPredicate"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Double",
                        "printedName": "Swift.Double",
                        "usr": "s:Sd"
                      }
                    ]
                  }
                ],
                "declKind": "Accessor",
                "usr": "c:@M@Nimble@objc(cs)NMBObjCBeCloseToPredicate(im)within",
                "mangledName": "$s6Nimble25NMBObjCBeCloseToPredicateC6withinyACSdcvg",
                "moduleName": "Nimble",
                "declAttributes": [
                  "ObjC"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(predicate:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBObjCBeCloseToPredicate",
                "printedName": "Nimble.NMBObjCBeCloseToPredicate",
                "usr": "c:@M@Nimble@objc(cs)NMBObjCBeCloseToPredicate"
              },
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Nimble.Expression<ObjectiveC.NSObject>) throws -> Nimble.NMBPredicateResult",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NMBPredicateResult",
                    "printedName": "Nimble.NMBPredicateResult",
                    "usr": "c:@M@Nimble@objc(cs)NMBPredicateResult"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Expression",
                    "printedName": "Nimble.Expression<ObjectiveC.NSObject>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "NSObject",
                        "printedName": "ObjectiveC.NSObject",
                        "usr": "c:objc(cs)NSObject"
                      }
                    ],
                    "usr": "s:6Nimble10ExpressionV"
                  }
                ]
              }
            ],
            "declKind": "Constructor",
            "usr": "s:6Nimble25NMBObjCBeCloseToPredicateC9predicateAcA18NMBPredicateResultCAA10ExpressionVySo8NSObjectCGKc_tcfc",
            "mangledName": "$s6Nimble25NMBObjCBeCloseToPredicateC9predicateAcA18NMBPredicateResultCAA10ExpressionVySo8NSObjectCGKc_tcfc",
            "moduleName": "Nimble",
            "overriding": true,
            "implicit": true,
            "declAttributes": [
              "Override"
            ],
            "init_kind": "Designated"
          }
        ],
        "declKind": "Class",
        "usr": "c:@M@Nimble@objc(cs)NMBObjCBeCloseToPredicate",
        "mangledName": "$s6Nimble25NMBObjCBeCloseToPredicateC",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "ObjC"
        ],
        "superclassUsr": "c:@M@Nimble@objc(cs)NMBPredicate",
        "hasMissingDesignatedInitializers": true,
        "superclassNames": [
          "Nimble.NMBPredicate",
          "ObjectiveC.NSObject"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObservingPublishing",
            "printedName": "_KeyValueCodingAndObservingPublishing",
            "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
            "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObserving",
            "printedName": "_KeyValueCodingAndObserving",
            "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
            "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          }
        ]
      },
      {
        "kind": "Function",
        "name": "beCloseTo",
        "printedName": "beCloseTo(_:within:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<τ_0_1>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_1"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "GenericTypeParam",
            "printedName": "τ_0_1"
          },
          {
            "kind": "TypeNominal",
            "name": "GenericTypeParam",
            "printedName": "τ_0_0",
            "hasDefaultArg": true
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble9beCloseTo_6withinAA9PredicateVyq_Gq__xtSFRz7ElementQy_RszSlR_r0_lF",
        "mangledName": "$s6Nimble9beCloseTo_6withinAA9PredicateVyq_Gq__xtSFRz7ElementQy_RszSlR_r0_lF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0, τ_0_1 where τ_0_0 : Swift.FloatingPoint, τ_0_0 == τ_0_1.Element, τ_0_1 : Swift.Collection>",
        "sugared_genericSig": "<Value, Values where Value : Swift.FloatingPoint, Value == Values.Element, Values : Swift.Collection>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "OperatorDecl",
        "name": "≈",
        "printedName": "≈",
        "declKind": "InfixOperator",
        "moduleName": "Nimble",
        "declAttributes": [
          "Infix",
          "RawDocComment"
        ]
      },
      {
        "kind": "Function",
        "name": "≈",
        "printedName": "≈(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "SyncExpectation",
            "printedName": "Nimble.SyncExpectation<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble15SyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "GenericTypeParam",
            "printedName": "τ_0_0"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble003dchoiyyAA15SyncExpectationVyxG_xtSlRzSF7ElementRpzlF",
        "mangledName": "$s6Nimble003dchoiyyAA15SyncExpectationVyxG_xtSlRzSF7ElementRpzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Collection, τ_0_0.Element : Swift.FloatingPoint>",
        "sugared_genericSig": "<Value where Value : Swift.Collection, Value.Element : Swift.FloatingPoint>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "≈",
        "printedName": "≈(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "AsyncExpectation",
            "printedName": "Nimble.AsyncExpectation<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble16AsyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "GenericTypeParam",
            "printedName": "τ_0_0"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble003dchoiyyAA16AsyncExpectationVyxG_xtYaSlRzSF7ElementRpzlF",
        "mangledName": "$s6Nimble003dchoiyyAA16AsyncExpectationVyxG_xtYaSlRzSF7ElementRpzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Collection, τ_0_0.Element : Swift.FloatingPoint>",
        "sugared_genericSig": "<Value where Value : Swift.Collection, Value.Element : Swift.FloatingPoint>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "≈",
        "printedName": "≈(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "SyncExpectation",
            "printedName": "Nimble.SyncExpectation<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble15SyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "GenericTypeParam",
            "printedName": "τ_0_0"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble003dchoiyyAA15SyncExpectationVyxG_xtSFRzlF",
        "mangledName": "$s6Nimble003dchoiyyAA15SyncExpectationVyxG_xtSFRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.FloatingPoint>",
        "sugared_genericSig": "<Value where Value : Swift.FloatingPoint>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "≈",
        "printedName": "≈(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "AsyncExpectation",
            "printedName": "Nimble.AsyncExpectation<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble16AsyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "GenericTypeParam",
            "printedName": "τ_0_0"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble003dchoiyyAA16AsyncExpectationVyxG_xtYaSFRzlF",
        "mangledName": "$s6Nimble003dchoiyyAA16AsyncExpectationVyxG_xtYaSFRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.FloatingPoint>",
        "sugared_genericSig": "<Value where Value : Swift.FloatingPoint>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "≈",
        "printedName": "≈(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "SyncExpectation",
            "printedName": "Nimble.SyncExpectation<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble15SyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Tuple",
            "printedName": "(expected: τ_0_0, delta: τ_0_0)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              },
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ]
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble003dchoiyyAA15SyncExpectationVyxG_x8expected_x5deltattSFRzlF",
        "mangledName": "$s6Nimble003dchoiyyAA15SyncExpectationVyxG_x8expected_x5deltattSFRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.FloatingPoint>",
        "sugared_genericSig": "<Value where Value : Swift.FloatingPoint>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "≈",
        "printedName": "≈(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "AsyncExpectation",
            "printedName": "Nimble.AsyncExpectation<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble16AsyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Tuple",
            "printedName": "(expected: τ_0_0, delta: τ_0_0)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              },
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ]
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble003dchoiyyAA16AsyncExpectationVyxG_x8expected_x5deltattYaSFRzlF",
        "mangledName": "$s6Nimble003dchoiyyAA16AsyncExpectationVyxG_x8expected_x5deltattYaSFRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.FloatingPoint>",
        "sugared_genericSig": "<Value where Value : Swift.FloatingPoint>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "==",
        "printedName": "==(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "SyncExpectation",
            "printedName": "Nimble.SyncExpectation<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble15SyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Tuple",
            "printedName": "(expected: τ_0_0, delta: τ_0_0)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              },
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ]
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2eeoiyyAA15SyncExpectationVyxG_x8expected_x5deltattSFRzlF",
        "mangledName": "$s6Nimble2eeoiyyAA15SyncExpectationVyxG_x8expected_x5deltattSFRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.FloatingPoint>",
        "sugared_genericSig": "<Value where Value : Swift.FloatingPoint>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "==",
        "printedName": "==(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "AsyncExpectation",
            "printedName": "Nimble.AsyncExpectation<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble16AsyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Tuple",
            "printedName": "(expected: τ_0_0, delta: τ_0_0)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              },
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ]
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2eeoiyyAA16AsyncExpectationVyxG_x8expected_x5deltattYaSFRzlF",
        "mangledName": "$s6Nimble2eeoiyyAA16AsyncExpectationVyxG_x8expected_x5deltattYaSFRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.FloatingPoint>",
        "sugared_genericSig": "<Value where Value : Swift.FloatingPoint>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "≈",
        "printedName": "≈(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "SyncExpectation",
            "printedName": "Nimble.SyncExpectation<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble15SyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "GenericTypeParam",
            "printedName": "τ_0_0"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble003dchoiyyAA15SyncExpectationVyxG_xtAA20NMBDoubleConvertibleRzlF",
        "mangledName": "$s6Nimble003dchoiyyAA15SyncExpectationVyxG_xtAA20NMBDoubleConvertibleRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Nimble.NMBDoubleConvertible>",
        "sugared_genericSig": "<Value where Value : Nimble.NMBDoubleConvertible>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "≈",
        "printedName": "≈(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "AsyncExpectation",
            "printedName": "Nimble.AsyncExpectation<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble16AsyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "GenericTypeParam",
            "printedName": "τ_0_0"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble003dchoiyyAA16AsyncExpectationVyxG_xtYaAA20NMBDoubleConvertibleRzlF",
        "mangledName": "$s6Nimble003dchoiyyAA16AsyncExpectationVyxG_xtYaAA20NMBDoubleConvertibleRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Nimble.NMBDoubleConvertible>",
        "sugared_genericSig": "<Value where Value : Nimble.NMBDoubleConvertible>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "≈",
        "printedName": "≈(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "SyncExpectation",
            "printedName": "Nimble.SyncExpectation<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble15SyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Tuple",
            "printedName": "(expected: τ_0_0, delta: Swift.Double)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              },
              {
                "kind": "TypeNominal",
                "name": "Double",
                "printedName": "Swift.Double",
                "usr": "s:Sd"
              }
            ]
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble003dchoiyyAA15SyncExpectationVyxG_x8expected_Sd5deltattAA20NMBDoubleConvertibleRzlF",
        "mangledName": "$s6Nimble003dchoiyyAA15SyncExpectationVyxG_x8expected_Sd5deltattAA20NMBDoubleConvertibleRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Nimble.NMBDoubleConvertible>",
        "sugared_genericSig": "<Value where Value : Nimble.NMBDoubleConvertible>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "≈",
        "printedName": "≈(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "AsyncExpectation",
            "printedName": "Nimble.AsyncExpectation<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble16AsyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Tuple",
            "printedName": "(expected: τ_0_0, delta: Swift.Double)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              },
              {
                "kind": "TypeNominal",
                "name": "Double",
                "printedName": "Swift.Double",
                "usr": "s:Sd"
              }
            ]
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble003dchoiyyAA16AsyncExpectationVyxG_x8expected_Sd5deltattYaAA20NMBDoubleConvertibleRzlF",
        "mangledName": "$s6Nimble003dchoiyyAA16AsyncExpectationVyxG_x8expected_Sd5deltattYaAA20NMBDoubleConvertibleRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Nimble.NMBDoubleConvertible>",
        "sugared_genericSig": "<Value where Value : Nimble.NMBDoubleConvertible>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "==",
        "printedName": "==(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "SyncExpectation",
            "printedName": "Nimble.SyncExpectation<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble15SyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Tuple",
            "printedName": "(expected: τ_0_0, delta: Swift.Double)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              },
              {
                "kind": "TypeNominal",
                "name": "Double",
                "printedName": "Swift.Double",
                "usr": "s:Sd"
              }
            ]
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2eeoiyyAA15SyncExpectationVyxG_x8expected_Sd5deltattAA20NMBDoubleConvertibleRzlF",
        "mangledName": "$s6Nimble2eeoiyyAA15SyncExpectationVyxG_x8expected_Sd5deltattAA20NMBDoubleConvertibleRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Nimble.NMBDoubleConvertible>",
        "sugared_genericSig": "<Value where Value : Nimble.NMBDoubleConvertible>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "==",
        "printedName": "==(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "AsyncExpectation",
            "printedName": "Nimble.AsyncExpectation<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble16AsyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Tuple",
            "printedName": "(expected: τ_0_0, delta: Swift.Double)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              },
              {
                "kind": "TypeNominal",
                "name": "Double",
                "printedName": "Swift.Double",
                "usr": "s:Sd"
              }
            ]
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2eeoiyyAA16AsyncExpectationVyxG_x8expected_Sd5deltattYaAA20NMBDoubleConvertibleRzlF",
        "mangledName": "$s6Nimble2eeoiyyAA16AsyncExpectationVyxG_x8expected_Sd5deltattYaAA20NMBDoubleConvertibleRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Nimble.NMBDoubleConvertible>",
        "sugared_genericSig": "<Value where Value : Nimble.NMBDoubleConvertible>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "OperatorDecl",
        "name": "±",
        "printedName": "±",
        "declKind": "InfixOperator",
        "moduleName": "Nimble",
        "declAttributes": [
          "Infix"
        ]
      },
      {
        "kind": "Function",
        "name": "±",
        "printedName": "±(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Tuple",
            "printedName": "(expected: τ_0_0, delta: τ_0_0)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              },
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ]
          },
          {
            "kind": "TypeNominal",
            "name": "GenericTypeParam",
            "printedName": "τ_0_0"
          },
          {
            "kind": "TypeNominal",
            "name": "GenericTypeParam",
            "printedName": "τ_0_0"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble003obaoiyx8expected_x5deltatx_xtSFRzlF",
        "mangledName": "$s6Nimble003obaoiyx8expected_x5deltatx_xtSFRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.FloatingPoint>",
        "sugared_genericSig": "<Value where Value : Swift.FloatingPoint>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "±",
        "printedName": "±(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Tuple",
            "printedName": "(expected: τ_0_0, delta: Swift.Double)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              },
              {
                "kind": "TypeNominal",
                "name": "Double",
                "printedName": "Swift.Double",
                "usr": "s:Sd"
              }
            ]
          },
          {
            "kind": "TypeNominal",
            "name": "GenericTypeParam",
            "printedName": "τ_0_0"
          },
          {
            "kind": "TypeNominal",
            "name": "Double",
            "printedName": "Swift.Double",
            "usr": "s:Sd"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble003obaoiyx8expected_Sd5deltatx_SdtAA20NMBDoubleConvertibleRzlF",
        "mangledName": "$s6Nimble003obaoiyx8expected_Sd5deltatx_SdtAA20NMBDoubleConvertibleRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Nimble.NMBDoubleConvertible>",
        "sugared_genericSig": "<Value where Value : Nimble.NMBDoubleConvertible>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "Function",
        "name": "beSuccess",
        "printedName": "beSuccess(test:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<Swift.Result<τ_0_0, τ_0_1>>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Result",
                "printedName": "Swift.Result<τ_0_0, τ_0_1>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  }
                ],
                "usr": "s:s6ResultO"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "((τ_0_0) -> ())?",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(τ_0_0) -> ()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ]
              }
            ],
            "hasDefaultArg": true,
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble9beSuccess4testAA9PredicateVys6ResultOyxq_GGyxcSg_ts5ErrorR_r0_lF",
        "mangledName": "$s6Nimble9beSuccess4testAA9PredicateVys6ResultOyxq_GGyxcSg_ts5ErrorR_r0_lF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0, τ_0_1 where τ_0_1 : Swift.Error>",
        "sugared_genericSig": "<Success, Failure where Failure : Swift.Error>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "beFailure",
        "printedName": "beFailure(test:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<Swift.Result<τ_0_0, τ_0_1>>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Result",
                "printedName": "Swift.Result<τ_0_0, τ_0_1>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  }
                ],
                "usr": "s:s6ResultO"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "((τ_0_1) -> ())?",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(τ_0_1) -> ()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  }
                ]
              }
            ],
            "hasDefaultArg": true,
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble9beFailure4testAA9PredicateVys6ResultOyxq_GGyq_cSg_ts5ErrorR_r0_lF",
        "mangledName": "$s6Nimble9beFailure4testAA9PredicateVys6ResultOyxq_GGyq_cSg_ts5ErrorR_r0_lF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0, τ_0_1 where τ_0_1 : Swift.Error>",
        "sugared_genericSig": "<Success, Failure where Failure : Swift.Error>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "TypeDecl",
        "name": "ExpectationStatus",
        "printedName": "ExpectationStatus",
        "children": [
          {
            "kind": "Var",
            "name": "pending",
            "printedName": "pending",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Nimble.ExpectationStatus.Type) -> Nimble.ExpectationStatus",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "ExpectationStatus",
                    "printedName": "Nimble.ExpectationStatus",
                    "usr": "s:6Nimble17ExpectationStatusO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "Nimble.ExpectationStatus.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ExpectationStatus",
                        "printedName": "Nimble.ExpectationStatus",
                        "usr": "s:6Nimble17ExpectationStatusO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:6Nimble17ExpectationStatusO7pendingyA2CmF",
            "mangledName": "$s6Nimble17ExpectationStatusO7pendingyA2CmF",
            "moduleName": "Nimble",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "passed",
            "printedName": "passed",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Nimble.ExpectationStatus.Type) -> Nimble.ExpectationStatus",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "ExpectationStatus",
                    "printedName": "Nimble.ExpectationStatus",
                    "usr": "s:6Nimble17ExpectationStatusO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "Nimble.ExpectationStatus.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ExpectationStatus",
                        "printedName": "Nimble.ExpectationStatus",
                        "usr": "s:6Nimble17ExpectationStatusO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:6Nimble17ExpectationStatusO6passedyA2CmF",
            "mangledName": "$s6Nimble17ExpectationStatusO6passedyA2CmF",
            "moduleName": "Nimble",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "failed",
            "printedName": "failed",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Nimble.ExpectationStatus.Type) -> Nimble.ExpectationStatus",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "ExpectationStatus",
                    "printedName": "Nimble.ExpectationStatus",
                    "usr": "s:6Nimble17ExpectationStatusO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "Nimble.ExpectationStatus.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ExpectationStatus",
                        "printedName": "Nimble.ExpectationStatus",
                        "usr": "s:6Nimble17ExpectationStatusO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:6Nimble17ExpectationStatusO6failedyA2CmF",
            "mangledName": "$s6Nimble17ExpectationStatusO6failedyA2CmF",
            "moduleName": "Nimble",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "mixed",
            "printedName": "mixed",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Nimble.ExpectationStatus.Type) -> Nimble.ExpectationStatus",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "ExpectationStatus",
                    "printedName": "Nimble.ExpectationStatus",
                    "usr": "s:6Nimble17ExpectationStatusO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "Nimble.ExpectationStatus.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ExpectationStatus",
                        "printedName": "Nimble.ExpectationStatus",
                        "usr": "s:6Nimble17ExpectationStatusO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:6Nimble17ExpectationStatusO5mixedyA2CmF",
            "mangledName": "$s6Nimble17ExpectationStatusO5mixedyA2CmF",
            "moduleName": "Nimble",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "hashValue",
            "printedName": "hashValue",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Var",
            "usr": "s:6Nimble17ExpectationStatusO9hashValueSivp",
            "mangledName": "$s6Nimble17ExpectationStatusO9hashValueSivp",
            "moduleName": "Nimble",
            "implicit": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble17ExpectationStatusO9hashValueSivg",
                "mangledName": "$s6Nimble17ExpectationStatusO9hashValueSivg",
                "moduleName": "Nimble",
                "implicit": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Function",
            "name": "hash",
            "printedName": "hash(into:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Hasher",
                "printedName": "Swift.Hasher",
                "paramValueOwnership": "InOut",
                "usr": "s:s6HasherV"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble17ExpectationStatusO4hash4intoys6HasherVz_tF",
            "mangledName": "$s6Nimble17ExpectationStatusO4hash4intoys6HasherVz_tF",
            "moduleName": "Nimble",
            "implicit": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "==",
            "printedName": "==(_:_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              },
              {
                "kind": "TypeNominal",
                "name": "ExpectationStatus",
                "printedName": "Nimble.ExpectationStatus",
                "usr": "s:6Nimble17ExpectationStatusO"
              },
              {
                "kind": "TypeNominal",
                "name": "ExpectationStatus",
                "printedName": "Nimble.ExpectationStatus",
                "usr": "s:6Nimble17ExpectationStatusO"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble17ExpectationStatusO2eeoiySbAC_ACtFZ",
            "mangledName": "$s6Nimble17ExpectationStatusO2eeoiySbAC_ACtFZ",
            "moduleName": "Nimble",
            "static": true,
            "implicit": true,
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Enum",
        "usr": "s:6Nimble17ExpectationStatusO",
        "mangledName": "$s6Nimble17ExpectationStatusO",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          }
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "Expectation",
        "printedName": "Expectation",
        "children": [
          {
            "kind": "Var",
            "name": "location",
            "printedName": "location",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "SourceLocation",
                "printedName": "Nimble.SourceLocation",
                "usr": "c:@M@Nimble@objc(cs)SourceLocation"
              }
            ],
            "declKind": "Var",
            "usr": "s:6Nimble11ExpectationP8locationAA14SourceLocationCvp",
            "mangledName": "$s6Nimble11ExpectationP8locationAA14SourceLocationCvp",
            "moduleName": "Nimble",
            "protocolReq": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SourceLocation",
                    "printedName": "Nimble.SourceLocation",
                    "usr": "c:@M@Nimble@objc(cs)SourceLocation"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble11ExpectationP8locationAA14SourceLocationCvg",
                "mangledName": "$s6Nimble11ExpectationP8locationAA14SourceLocationCvg",
                "moduleName": "Nimble",
                "genericSig": "<τ_0_0 where τ_0_0 : Nimble.Expectation>",
                "sugared_genericSig": "<Self where Self : Nimble.Expectation>",
                "protocolReq": true,
                "reqNewWitnessTableEntry": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "status",
            "printedName": "status",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "ExpectationStatus",
                "printedName": "Nimble.ExpectationStatus",
                "usr": "s:6Nimble17ExpectationStatusO"
              }
            ],
            "declKind": "Var",
            "usr": "s:6Nimble11ExpectationP6statusAA0B6StatusOvp",
            "mangledName": "$s6Nimble11ExpectationP6statusAA0B6StatusOvp",
            "moduleName": "Nimble",
            "protocolReq": true,
            "declAttributes": [
              "RawDocComment"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "ExpectationStatus",
                    "printedName": "Nimble.ExpectationStatus",
                    "usr": "s:6Nimble17ExpectationStatusO"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble11ExpectationP6statusAA0B6StatusOvg",
                "mangledName": "$s6Nimble11ExpectationP6statusAA0B6StatusOvg",
                "moduleName": "Nimble",
                "genericSig": "<τ_0_0 where τ_0_0 : Nimble.Expectation>",
                "sugared_genericSig": "<Self where Self : Nimble.Expectation>",
                "protocolReq": true,
                "reqNewWitnessTableEntry": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Function",
            "name": "verify",
            "printedName": "verify(_:_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              },
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              },
              {
                "kind": "TypeNominal",
                "name": "FailureMessage",
                "printedName": "Nimble.FailureMessage",
                "usr": "c:@M@Nimble@objc(cs)FailureMessage"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble11ExpectationP6verifyyxSb_AA14FailureMessageCtF",
            "mangledName": "$s6Nimble11ExpectationP6verifyyxSb_AA14FailureMessageCtF",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0 where τ_0_0 : Nimble.Expectation>",
            "sugared_genericSig": "<Self where Self : Nimble.Expectation>",
            "protocolReq": true,
            "declAttributes": [
              "DiscardableResult",
              "RawDocComment"
            ],
            "reqNewWitnessTableEntry": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "onFailure",
            "printedName": "onFailure(throw:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Error",
                "printedName": "Swift.Error",
                "usr": "s:s5ErrorP"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble11ExpectationPAAE9onFailure5throwys5Error_p_tKF",
            "mangledName": "$s6Nimble11ExpectationPAAE9onFailure5throwys5Error_p_tKF",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0 where τ_0_0 : Nimble.Expectation>",
            "sugared_genericSig": "<Self where Self : Nimble.Expectation>",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "isFromExtension": true,
            "throwing": true,
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Protocol",
        "usr": "s:6Nimble11ExpectationP",
        "mangledName": "$s6Nimble11ExpectationP",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl"
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "SyncExpectation",
        "printedName": "SyncExpectation",
        "children": [
          {
            "kind": "Var",
            "name": "expression",
            "printedName": "expression",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Expression",
                "printedName": "Nimble.Expression<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble10ExpressionV"
              }
            ],
            "declKind": "Var",
            "usr": "s:6Nimble15SyncExpectationV10expressionAA10ExpressionVyxGvp",
            "mangledName": "$s6Nimble15SyncExpectationV10expressionAA10ExpressionVyxGvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "HasStorage",
              "AccessControl"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Expression",
                    "printedName": "Nimble.Expression<τ_0_0>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_0_0"
                      }
                    ],
                    "usr": "s:6Nimble10ExpressionV"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble15SyncExpectationV10expressionAA10ExpressionVyxGvg",
                "mangledName": "$s6Nimble15SyncExpectationV10expressionAA10ExpressionVyxGvg",
                "moduleName": "Nimble",
                "genericSig": "<τ_0_0>",
                "sugared_genericSig": "<Value>",
                "implicit": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "status",
            "printedName": "status",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "ExpectationStatus",
                "printedName": "Nimble.ExpectationStatus",
                "usr": "s:6Nimble17ExpectationStatusO"
              }
            ],
            "declKind": "Var",
            "usr": "s:6Nimble15SyncExpectationV6statusAA0C6StatusOvp",
            "mangledName": "$s6Nimble15SyncExpectationV6statusAA0C6StatusOvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "HasStorage",
              "AccessControl",
              "RawDocComment"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "ExpectationStatus",
                    "printedName": "Nimble.ExpectationStatus",
                    "usr": "s:6Nimble17ExpectationStatusO"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble15SyncExpectationV6statusAA0C6StatusOvg",
                "mangledName": "$s6Nimble15SyncExpectationV6statusAA0C6StatusOvg",
                "moduleName": "Nimble",
                "genericSig": "<τ_0_0>",
                "sugared_genericSig": "<Value>",
                "implicit": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(expression:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "SyncExpectation",
                "printedName": "Nimble.SyncExpectation<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble15SyncExpectationV"
              },
              {
                "kind": "TypeNominal",
                "name": "Expression",
                "printedName": "Nimble.Expression<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble10ExpressionV"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:6Nimble15SyncExpectationV10expressionACyxGAA10ExpressionVyxG_tcfc",
            "mangledName": "$s6Nimble15SyncExpectationV10expressionACyxGAA10ExpressionVyxG_tcfc",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0>",
            "sugared_genericSig": "<Value>",
            "declAttributes": [
              "AccessControl"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Function",
            "name": "verify",
            "printedName": "verify(_:_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "SyncExpectation",
                "printedName": "Nimble.SyncExpectation<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble15SyncExpectationV"
              },
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              },
              {
                "kind": "TypeNominal",
                "name": "FailureMessage",
                "printedName": "Nimble.FailureMessage",
                "usr": "c:@M@Nimble@objc(cs)FailureMessage"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble15SyncExpectationV6verifyyACyxGSb_AA14FailureMessageCtF",
            "mangledName": "$s6Nimble15SyncExpectationV6verifyyACyxGSb_AA14FailureMessageCtF",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0>",
            "sugared_genericSig": "<Value>",
            "declAttributes": [
              "AccessControl",
              "DiscardableResult",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Var",
            "name": "location",
            "printedName": "location",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "SourceLocation",
                "printedName": "Nimble.SourceLocation",
                "usr": "c:@M@Nimble@objc(cs)SourceLocation"
              }
            ],
            "declKind": "Var",
            "usr": "s:6Nimble15SyncExpectationV8locationAA14SourceLocationCvp",
            "mangledName": "$s6Nimble15SyncExpectationV8locationAA14SourceLocationCvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SourceLocation",
                    "printedName": "Nimble.SourceLocation",
                    "usr": "c:@M@Nimble@objc(cs)SourceLocation"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble15SyncExpectationV8locationAA14SourceLocationCvg",
                "mangledName": "$s6Nimble15SyncExpectationV8locationAA14SourceLocationCvg",
                "moduleName": "Nimble",
                "genericSig": "<τ_0_0>",
                "sugared_genericSig": "<Value>",
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Function",
            "name": "to",
            "printedName": "to(_:description:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "SyncExpectation",
                "printedName": "Nimble.SyncExpectation<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble15SyncExpectationV"
              },
              {
                "kind": "TypeNominal",
                "name": "Predicate",
                "printedName": "Nimble.Predicate<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble9PredicateV"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.String?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "hasDefaultArg": true,
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble15SyncExpectationV2to_11descriptionACyxGAA9PredicateVyxG_SSSgtF",
            "mangledName": "$s6Nimble15SyncExpectationV2to_11descriptionACyxGAA9PredicateVyxG_SSSgtF",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0>",
            "sugared_genericSig": "<Value>",
            "declAttributes": [
              "AccessControl",
              "DiscardableResult",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "toNot",
            "printedName": "toNot(_:description:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "SyncExpectation",
                "printedName": "Nimble.SyncExpectation<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble15SyncExpectationV"
              },
              {
                "kind": "TypeNominal",
                "name": "Predicate",
                "printedName": "Nimble.Predicate<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble9PredicateV"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.String?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "hasDefaultArg": true,
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble15SyncExpectationV5toNot_11descriptionACyxGAA9PredicateVyxG_SSSgtF",
            "mangledName": "$s6Nimble15SyncExpectationV5toNot_11descriptionACyxGAA9PredicateVyxG_SSSgtF",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0>",
            "sugared_genericSig": "<Value>",
            "declAttributes": [
              "AccessControl",
              "DiscardableResult",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "notTo",
            "printedName": "notTo(_:description:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "SyncExpectation",
                "printedName": "Nimble.SyncExpectation<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble15SyncExpectationV"
              },
              {
                "kind": "TypeNominal",
                "name": "Predicate",
                "printedName": "Nimble.Predicate<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble9PredicateV"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.String?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "hasDefaultArg": true,
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble15SyncExpectationV5notTo_11descriptionACyxGAA9PredicateVyxG_SSSgtF",
            "mangledName": "$s6Nimble15SyncExpectationV5notTo_11descriptionACyxGAA9PredicateVyxG_SSSgtF",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0>",
            "sugared_genericSig": "<Value>",
            "declAttributes": [
              "AccessControl",
              "DiscardableResult",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "toEventually",
            "printedName": "toEventually(_:timeout:pollInterval:description:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "SyncExpectation",
                "printedName": "Nimble.SyncExpectation<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble15SyncExpectationV"
              },
              {
                "kind": "TypeNominal",
                "name": "Predicate",
                "printedName": "Nimble.Predicate<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble9PredicateV"
              },
              {
                "kind": "TypeNominal",
                "name": "NimbleTimeInterval",
                "printedName": "Nimble.NimbleTimeInterval",
                "hasDefaultArg": true,
                "usr": "s:6Nimble0A12TimeIntervalO"
              },
              {
                "kind": "TypeNominal",
                "name": "NimbleTimeInterval",
                "printedName": "Nimble.NimbleTimeInterval",
                "hasDefaultArg": true,
                "usr": "s:6Nimble0A12TimeIntervalO"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.String?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "hasDefaultArg": true,
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble15SyncExpectationV12toEventually_7timeout12pollInterval11descriptionACyxGAA9PredicateVyxG_AA0a4TimeH0OAMSSSgtYaF",
            "mangledName": "$s6Nimble15SyncExpectationV12toEventually_7timeout12pollInterval11descriptionACyxGAA9PredicateVyxG_AA0a4TimeH0OAMSSSgtYaF",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0>",
            "sugared_genericSig": "<Value>",
            "declAttributes": [
              "AccessControl",
              "DiscardableResult",
              "RawDocComment"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "toEventuallyNot",
            "printedName": "toEventuallyNot(_:timeout:pollInterval:description:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "SyncExpectation",
                "printedName": "Nimble.SyncExpectation<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble15SyncExpectationV"
              },
              {
                "kind": "TypeNominal",
                "name": "Predicate",
                "printedName": "Nimble.Predicate<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble9PredicateV"
              },
              {
                "kind": "TypeNominal",
                "name": "NimbleTimeInterval",
                "printedName": "Nimble.NimbleTimeInterval",
                "hasDefaultArg": true,
                "usr": "s:6Nimble0A12TimeIntervalO"
              },
              {
                "kind": "TypeNominal",
                "name": "NimbleTimeInterval",
                "printedName": "Nimble.NimbleTimeInterval",
                "hasDefaultArg": true,
                "usr": "s:6Nimble0A12TimeIntervalO"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.String?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "hasDefaultArg": true,
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble15SyncExpectationV15toEventuallyNot_7timeout12pollInterval11descriptionACyxGAA9PredicateVyxG_AA0a4TimeI0OAMSSSgtYaF",
            "mangledName": "$s6Nimble15SyncExpectationV15toEventuallyNot_7timeout12pollInterval11descriptionACyxGAA9PredicateVyxG_AA0a4TimeI0OAMSSSgtYaF",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0>",
            "sugared_genericSig": "<Value>",
            "declAttributes": [
              "AccessControl",
              "DiscardableResult",
              "RawDocComment"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "toNotEventually",
            "printedName": "toNotEventually(_:timeout:pollInterval:description:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "SyncExpectation",
                "printedName": "Nimble.SyncExpectation<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble15SyncExpectationV"
              },
              {
                "kind": "TypeNominal",
                "name": "Predicate",
                "printedName": "Nimble.Predicate<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble9PredicateV"
              },
              {
                "kind": "TypeNominal",
                "name": "NimbleTimeInterval",
                "printedName": "Nimble.NimbleTimeInterval",
                "hasDefaultArg": true,
                "usr": "s:6Nimble0A12TimeIntervalO"
              },
              {
                "kind": "TypeNominal",
                "name": "NimbleTimeInterval",
                "printedName": "Nimble.NimbleTimeInterval",
                "hasDefaultArg": true,
                "usr": "s:6Nimble0A12TimeIntervalO"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.String?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "hasDefaultArg": true,
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble15SyncExpectationV15toNotEventually_7timeout12pollInterval11descriptionACyxGAA9PredicateVyxG_AA0a4TimeI0OAMSSSgtYaF",
            "mangledName": "$s6Nimble15SyncExpectationV15toNotEventually_7timeout12pollInterval11descriptionACyxGAA9PredicateVyxG_AA0a4TimeI0OAMSSSgtYaF",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0>",
            "sugared_genericSig": "<Value>",
            "declAttributes": [
              "AccessControl",
              "DiscardableResult",
              "RawDocComment"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "toNever",
            "printedName": "toNever(_:until:pollInterval:description:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "SyncExpectation",
                "printedName": "Nimble.SyncExpectation<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble15SyncExpectationV"
              },
              {
                "kind": "TypeNominal",
                "name": "Predicate",
                "printedName": "Nimble.Predicate<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble9PredicateV"
              },
              {
                "kind": "TypeNominal",
                "name": "NimbleTimeInterval",
                "printedName": "Nimble.NimbleTimeInterval",
                "hasDefaultArg": true,
                "usr": "s:6Nimble0A12TimeIntervalO"
              },
              {
                "kind": "TypeNominal",
                "name": "NimbleTimeInterval",
                "printedName": "Nimble.NimbleTimeInterval",
                "hasDefaultArg": true,
                "usr": "s:6Nimble0A12TimeIntervalO"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.String?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "hasDefaultArg": true,
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble15SyncExpectationV7toNever_5until12pollInterval11descriptionACyxGAA9PredicateVyxG_AA0a4TimeH0OAMSSSgtYaF",
            "mangledName": "$s6Nimble15SyncExpectationV7toNever_5until12pollInterval11descriptionACyxGAA9PredicateVyxG_AA0a4TimeH0OAMSSSgtYaF",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0>",
            "sugared_genericSig": "<Value>",
            "declAttributes": [
              "AccessControl",
              "DiscardableResult",
              "RawDocComment"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "neverTo",
            "printedName": "neverTo(_:until:pollInterval:description:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "SyncExpectation",
                "printedName": "Nimble.SyncExpectation<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble15SyncExpectationV"
              },
              {
                "kind": "TypeNominal",
                "name": "Predicate",
                "printedName": "Nimble.Predicate<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble9PredicateV"
              },
              {
                "kind": "TypeNominal",
                "name": "NimbleTimeInterval",
                "printedName": "Nimble.NimbleTimeInterval",
                "hasDefaultArg": true,
                "usr": "s:6Nimble0A12TimeIntervalO"
              },
              {
                "kind": "TypeNominal",
                "name": "NimbleTimeInterval",
                "printedName": "Nimble.NimbleTimeInterval",
                "hasDefaultArg": true,
                "usr": "s:6Nimble0A12TimeIntervalO"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.String?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "hasDefaultArg": true,
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble15SyncExpectationV7neverTo_5until12pollInterval11descriptionACyxGAA9PredicateVyxG_AA0a4TimeH0OAMSSSgtYaF",
            "mangledName": "$s6Nimble15SyncExpectationV7neverTo_5until12pollInterval11descriptionACyxGAA9PredicateVyxG_AA0a4TimeH0OAMSSSgtYaF",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0>",
            "sugared_genericSig": "<Value>",
            "declAttributes": [
              "AccessControl",
              "DiscardableResult",
              "RawDocComment"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "toAlways",
            "printedName": "toAlways(_:until:pollInterval:description:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "SyncExpectation",
                "printedName": "Nimble.SyncExpectation<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble15SyncExpectationV"
              },
              {
                "kind": "TypeNominal",
                "name": "Predicate",
                "printedName": "Nimble.Predicate<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble9PredicateV"
              },
              {
                "kind": "TypeNominal",
                "name": "NimbleTimeInterval",
                "printedName": "Nimble.NimbleTimeInterval",
                "hasDefaultArg": true,
                "usr": "s:6Nimble0A12TimeIntervalO"
              },
              {
                "kind": "TypeNominal",
                "name": "NimbleTimeInterval",
                "printedName": "Nimble.NimbleTimeInterval",
                "hasDefaultArg": true,
                "usr": "s:6Nimble0A12TimeIntervalO"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.String?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "hasDefaultArg": true,
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble15SyncExpectationV8toAlways_5until12pollInterval11descriptionACyxGAA9PredicateVyxG_AA0a4TimeH0OAMSSSgtYaF",
            "mangledName": "$s6Nimble15SyncExpectationV8toAlways_5until12pollInterval11descriptionACyxGAA9PredicateVyxG_AA0a4TimeH0OAMSSSgtYaF",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0>",
            "sugared_genericSig": "<Value>",
            "declAttributes": [
              "AccessControl",
              "DiscardableResult",
              "RawDocComment"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "alwaysTo",
            "printedName": "alwaysTo(_:until:pollInterval:description:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "SyncExpectation",
                "printedName": "Nimble.SyncExpectation<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble15SyncExpectationV"
              },
              {
                "kind": "TypeNominal",
                "name": "Predicate",
                "printedName": "Nimble.Predicate<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble9PredicateV"
              },
              {
                "kind": "TypeNominal",
                "name": "NimbleTimeInterval",
                "printedName": "Nimble.NimbleTimeInterval",
                "hasDefaultArg": true,
                "usr": "s:6Nimble0A12TimeIntervalO"
              },
              {
                "kind": "TypeNominal",
                "name": "NimbleTimeInterval",
                "printedName": "Nimble.NimbleTimeInterval",
                "hasDefaultArg": true,
                "usr": "s:6Nimble0A12TimeIntervalO"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.String?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "hasDefaultArg": true,
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble15SyncExpectationV8alwaysTo_5until12pollInterval11descriptionACyxGAA9PredicateVyxG_AA0a4TimeH0OAMSSSgtYaF",
            "mangledName": "$s6Nimble15SyncExpectationV8alwaysTo_5until12pollInterval11descriptionACyxGAA9PredicateVyxG_AA0a4TimeH0OAMSSSgtYaF",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0>",
            "sugared_genericSig": "<Value>",
            "declAttributes": [
              "AccessControl",
              "DiscardableResult",
              "RawDocComment"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "toEventually",
            "printedName": "toEventually(_:timeout:pollInterval:description:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "SyncExpectation",
                "printedName": "Nimble.SyncExpectation<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble15SyncExpectationV"
              },
              {
                "kind": "TypeNominal",
                "name": "Predicate",
                "printedName": "Nimble.Predicate<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble9PredicateV"
              },
              {
                "kind": "TypeNominal",
                "name": "NimbleTimeInterval",
                "printedName": "Nimble.NimbleTimeInterval",
                "hasDefaultArg": true,
                "usr": "s:6Nimble0A12TimeIntervalO"
              },
              {
                "kind": "TypeNominal",
                "name": "NimbleTimeInterval",
                "printedName": "Nimble.NimbleTimeInterval",
                "hasDefaultArg": true,
                "usr": "s:6Nimble0A12TimeIntervalO"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.String?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "hasDefaultArg": true,
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble15SyncExpectationV12toEventually_7timeout12pollInterval11descriptionACyxGAA9PredicateVyxG_AA0a4TimeH0OAMSSSgtF",
            "mangledName": "$s6Nimble15SyncExpectationV12toEventually_7timeout12pollInterval11descriptionACyxGAA9PredicateVyxG_AA0a4TimeH0OAMSSSgtF",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0>",
            "sugared_genericSig": "<Value>",
            "declAttributes": [
              "AccessControl",
              "Available",
              "DiscardableResult",
              "RawDocComment"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "toEventuallyNot",
            "printedName": "toEventuallyNot(_:timeout:pollInterval:description:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "SyncExpectation",
                "printedName": "Nimble.SyncExpectation<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble15SyncExpectationV"
              },
              {
                "kind": "TypeNominal",
                "name": "Predicate",
                "printedName": "Nimble.Predicate<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble9PredicateV"
              },
              {
                "kind": "TypeNominal",
                "name": "NimbleTimeInterval",
                "printedName": "Nimble.NimbleTimeInterval",
                "hasDefaultArg": true,
                "usr": "s:6Nimble0A12TimeIntervalO"
              },
              {
                "kind": "TypeNominal",
                "name": "NimbleTimeInterval",
                "printedName": "Nimble.NimbleTimeInterval",
                "hasDefaultArg": true,
                "usr": "s:6Nimble0A12TimeIntervalO"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.String?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "hasDefaultArg": true,
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble15SyncExpectationV15toEventuallyNot_7timeout12pollInterval11descriptionACyxGAA9PredicateVyxG_AA0a4TimeI0OAMSSSgtF",
            "mangledName": "$s6Nimble15SyncExpectationV15toEventuallyNot_7timeout12pollInterval11descriptionACyxGAA9PredicateVyxG_AA0a4TimeI0OAMSSSgtF",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0>",
            "sugared_genericSig": "<Value>",
            "declAttributes": [
              "AccessControl",
              "Available",
              "DiscardableResult",
              "RawDocComment"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "toNotEventually",
            "printedName": "toNotEventually(_:timeout:pollInterval:description:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "SyncExpectation",
                "printedName": "Nimble.SyncExpectation<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble15SyncExpectationV"
              },
              {
                "kind": "TypeNominal",
                "name": "Predicate",
                "printedName": "Nimble.Predicate<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble9PredicateV"
              },
              {
                "kind": "TypeNominal",
                "name": "NimbleTimeInterval",
                "printedName": "Nimble.NimbleTimeInterval",
                "hasDefaultArg": true,
                "usr": "s:6Nimble0A12TimeIntervalO"
              },
              {
                "kind": "TypeNominal",
                "name": "NimbleTimeInterval",
                "printedName": "Nimble.NimbleTimeInterval",
                "hasDefaultArg": true,
                "usr": "s:6Nimble0A12TimeIntervalO"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.String?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "hasDefaultArg": true,
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble15SyncExpectationV15toNotEventually_7timeout12pollInterval11descriptionACyxGAA9PredicateVyxG_AA0a4TimeI0OAMSSSgtF",
            "mangledName": "$s6Nimble15SyncExpectationV15toNotEventually_7timeout12pollInterval11descriptionACyxGAA9PredicateVyxG_AA0a4TimeI0OAMSSSgtF",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0>",
            "sugared_genericSig": "<Value>",
            "declAttributes": [
              "AccessControl",
              "Available",
              "DiscardableResult",
              "RawDocComment"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "toNever",
            "printedName": "toNever(_:until:pollInterval:description:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "SyncExpectation",
                "printedName": "Nimble.SyncExpectation<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble15SyncExpectationV"
              },
              {
                "kind": "TypeNominal",
                "name": "Predicate",
                "printedName": "Nimble.Predicate<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble9PredicateV"
              },
              {
                "kind": "TypeNominal",
                "name": "NimbleTimeInterval",
                "printedName": "Nimble.NimbleTimeInterval",
                "hasDefaultArg": true,
                "usr": "s:6Nimble0A12TimeIntervalO"
              },
              {
                "kind": "TypeNominal",
                "name": "NimbleTimeInterval",
                "printedName": "Nimble.NimbleTimeInterval",
                "hasDefaultArg": true,
                "usr": "s:6Nimble0A12TimeIntervalO"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.String?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "hasDefaultArg": true,
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble15SyncExpectationV7toNever_5until12pollInterval11descriptionACyxGAA9PredicateVyxG_AA0a4TimeH0OAMSSSgtF",
            "mangledName": "$s6Nimble15SyncExpectationV7toNever_5until12pollInterval11descriptionACyxGAA9PredicateVyxG_AA0a4TimeH0OAMSSSgtF",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0>",
            "sugared_genericSig": "<Value>",
            "declAttributes": [
              "AccessControl",
              "Available",
              "DiscardableResult",
              "RawDocComment"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "neverTo",
            "printedName": "neverTo(_:until:pollInterval:description:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "SyncExpectation",
                "printedName": "Nimble.SyncExpectation<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble15SyncExpectationV"
              },
              {
                "kind": "TypeNominal",
                "name": "Predicate",
                "printedName": "Nimble.Predicate<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble9PredicateV"
              },
              {
                "kind": "TypeNominal",
                "name": "NimbleTimeInterval",
                "printedName": "Nimble.NimbleTimeInterval",
                "hasDefaultArg": true,
                "usr": "s:6Nimble0A12TimeIntervalO"
              },
              {
                "kind": "TypeNominal",
                "name": "NimbleTimeInterval",
                "printedName": "Nimble.NimbleTimeInterval",
                "hasDefaultArg": true,
                "usr": "s:6Nimble0A12TimeIntervalO"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.String?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "hasDefaultArg": true,
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble15SyncExpectationV7neverTo_5until12pollInterval11descriptionACyxGAA9PredicateVyxG_AA0a4TimeH0OAMSSSgtF",
            "mangledName": "$s6Nimble15SyncExpectationV7neverTo_5until12pollInterval11descriptionACyxGAA9PredicateVyxG_AA0a4TimeH0OAMSSSgtF",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0>",
            "sugared_genericSig": "<Value>",
            "declAttributes": [
              "AccessControl",
              "Available",
              "DiscardableResult",
              "RawDocComment"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "toAlways",
            "printedName": "toAlways(_:until:pollInterval:description:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "SyncExpectation",
                "printedName": "Nimble.SyncExpectation<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble15SyncExpectationV"
              },
              {
                "kind": "TypeNominal",
                "name": "Predicate",
                "printedName": "Nimble.Predicate<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble9PredicateV"
              },
              {
                "kind": "TypeNominal",
                "name": "NimbleTimeInterval",
                "printedName": "Nimble.NimbleTimeInterval",
                "hasDefaultArg": true,
                "usr": "s:6Nimble0A12TimeIntervalO"
              },
              {
                "kind": "TypeNominal",
                "name": "NimbleTimeInterval",
                "printedName": "Nimble.NimbleTimeInterval",
                "hasDefaultArg": true,
                "usr": "s:6Nimble0A12TimeIntervalO"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.String?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "hasDefaultArg": true,
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble15SyncExpectationV8toAlways_5until12pollInterval11descriptionACyxGAA9PredicateVyxG_AA0a4TimeH0OAMSSSgtF",
            "mangledName": "$s6Nimble15SyncExpectationV8toAlways_5until12pollInterval11descriptionACyxGAA9PredicateVyxG_AA0a4TimeH0OAMSSSgtF",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0>",
            "sugared_genericSig": "<Value>",
            "declAttributes": [
              "AccessControl",
              "Available",
              "DiscardableResult",
              "RawDocComment"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "alwaysTo",
            "printedName": "alwaysTo(_:until:pollInterval:description:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "SyncExpectation",
                "printedName": "Nimble.SyncExpectation<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble15SyncExpectationV"
              },
              {
                "kind": "TypeNominal",
                "name": "Predicate",
                "printedName": "Nimble.Predicate<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble9PredicateV"
              },
              {
                "kind": "TypeNominal",
                "name": "NimbleTimeInterval",
                "printedName": "Nimble.NimbleTimeInterval",
                "hasDefaultArg": true,
                "usr": "s:6Nimble0A12TimeIntervalO"
              },
              {
                "kind": "TypeNominal",
                "name": "NimbleTimeInterval",
                "printedName": "Nimble.NimbleTimeInterval",
                "hasDefaultArg": true,
                "usr": "s:6Nimble0A12TimeIntervalO"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.String?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "hasDefaultArg": true,
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble15SyncExpectationV8alwaysTo_5until12pollInterval11descriptionACyxGAA9PredicateVyxG_AA0a4TimeH0OAMSSSgtF",
            "mangledName": "$s6Nimble15SyncExpectationV8alwaysTo_5until12pollInterval11descriptionACyxGAA9PredicateVyxG_AA0a4TimeH0OAMSSSgtF",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0>",
            "sugared_genericSig": "<Value>",
            "declAttributes": [
              "AccessControl",
              "Available",
              "DiscardableResult",
              "RawDocComment"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "==",
            "printedName": "==(_:_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "SyncExpectation",
                "printedName": "Nimble.SyncExpectation<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble15SyncExpectationV"
              },
              {
                "kind": "TypeNominal",
                "name": "ExpectationNil",
                "printedName": "Nimble.ExpectationNil",
                "usr": "s:6Nimble14ExpectationNilV"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble15SyncExpectationV2eeoiyyACyxG_AA0C3NilVtFZ",
            "mangledName": "$s6Nimble15SyncExpectationV2eeoiyyACyxG_AA0C3NilVtFZ",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0>",
            "sugared_genericSig": "<Value>",
            "static": true,
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "!=",
            "printedName": "!=(_:_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "SyncExpectation",
                "printedName": "Nimble.SyncExpectation<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble15SyncExpectationV"
              },
              {
                "kind": "TypeNominal",
                "name": "ExpectationNil",
                "printedName": "Nimble.ExpectationNil",
                "usr": "s:6Nimble14ExpectationNilV"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble15SyncExpectationV2neoiyyACyxG_AA0C3NilVtFZ",
            "mangledName": "$s6Nimble15SyncExpectationV2neoiyyACyxG_AA0C3NilVtFZ",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0>",
            "sugared_genericSig": "<Value>",
            "static": true,
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Struct",
        "usr": "s:6Nimble15SyncExpectationV",
        "mangledName": "$s6Nimble15SyncExpectationV",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0>",
        "sugared_genericSig": "<Value>",
        "declAttributes": [
          "AccessControl"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Expectation",
            "printedName": "Expectation",
            "usr": "s:6Nimble11ExpectationP",
            "mangledName": "$s6Nimble11ExpectationP"
          }
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "AsyncExpectation",
        "printedName": "AsyncExpectation",
        "children": [
          {
            "kind": "Var",
            "name": "expression",
            "printedName": "expression",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "AsyncExpression",
                "printedName": "Nimble.AsyncExpression<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble15AsyncExpressionV"
              }
            ],
            "declKind": "Var",
            "usr": "s:6Nimble16AsyncExpectationV10expressionAA0B10ExpressionVyxGvp",
            "mangledName": "$s6Nimble16AsyncExpectationV10expressionAA0B10ExpressionVyxGvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "HasStorage",
              "AccessControl"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "AsyncExpression",
                    "printedName": "Nimble.AsyncExpression<τ_0_0>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_0_0"
                      }
                    ],
                    "usr": "s:6Nimble15AsyncExpressionV"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble16AsyncExpectationV10expressionAA0B10ExpressionVyxGvg",
                "mangledName": "$s6Nimble16AsyncExpectationV10expressionAA0B10ExpressionVyxGvg",
                "moduleName": "Nimble",
                "genericSig": "<τ_0_0>",
                "sugared_genericSig": "<Value>",
                "implicit": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "status",
            "printedName": "status",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "ExpectationStatus",
                "printedName": "Nimble.ExpectationStatus",
                "usr": "s:6Nimble17ExpectationStatusO"
              }
            ],
            "declKind": "Var",
            "usr": "s:6Nimble16AsyncExpectationV6statusAA0C6StatusOvp",
            "mangledName": "$s6Nimble16AsyncExpectationV6statusAA0C6StatusOvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "HasStorage",
              "AccessControl",
              "RawDocComment"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "ExpectationStatus",
                    "printedName": "Nimble.ExpectationStatus",
                    "usr": "s:6Nimble17ExpectationStatusO"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble16AsyncExpectationV6statusAA0C6StatusOvg",
                "mangledName": "$s6Nimble16AsyncExpectationV6statusAA0C6StatusOvg",
                "moduleName": "Nimble",
                "genericSig": "<τ_0_0>",
                "sugared_genericSig": "<Value>",
                "implicit": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(expression:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "AsyncExpectation",
                "printedName": "Nimble.AsyncExpectation<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble16AsyncExpectationV"
              },
              {
                "kind": "TypeNominal",
                "name": "AsyncExpression",
                "printedName": "Nimble.AsyncExpression<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble15AsyncExpressionV"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:6Nimble16AsyncExpectationV10expressionACyxGAA0B10ExpressionVyxG_tcfc",
            "mangledName": "$s6Nimble16AsyncExpectationV10expressionACyxGAA0B10ExpressionVyxG_tcfc",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0>",
            "sugared_genericSig": "<Value>",
            "declAttributes": [
              "AccessControl"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Var",
            "name": "location",
            "printedName": "location",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "SourceLocation",
                "printedName": "Nimble.SourceLocation",
                "usr": "c:@M@Nimble@objc(cs)SourceLocation"
              }
            ],
            "declKind": "Var",
            "usr": "s:6Nimble16AsyncExpectationV8locationAA14SourceLocationCvp",
            "mangledName": "$s6Nimble16AsyncExpectationV8locationAA14SourceLocationCvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SourceLocation",
                    "printedName": "Nimble.SourceLocation",
                    "usr": "c:@M@Nimble@objc(cs)SourceLocation"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble16AsyncExpectationV8locationAA14SourceLocationCvg",
                "mangledName": "$s6Nimble16AsyncExpectationV8locationAA14SourceLocationCvg",
                "moduleName": "Nimble",
                "genericSig": "<τ_0_0>",
                "sugared_genericSig": "<Value>",
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Function",
            "name": "verify",
            "printedName": "verify(_:_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "AsyncExpectation",
                "printedName": "Nimble.AsyncExpectation<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble16AsyncExpectationV"
              },
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              },
              {
                "kind": "TypeNominal",
                "name": "FailureMessage",
                "printedName": "Nimble.FailureMessage",
                "usr": "c:@M@Nimble@objc(cs)FailureMessage"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble16AsyncExpectationV6verifyyACyxGSb_AA14FailureMessageCtF",
            "mangledName": "$s6Nimble16AsyncExpectationV6verifyyACyxGSb_AA14FailureMessageCtF",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0>",
            "sugared_genericSig": "<Value>",
            "declAttributes": [
              "AccessControl",
              "DiscardableResult",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "to",
            "printedName": "to(_:description:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "AsyncExpectation",
                "printedName": "Nimble.AsyncExpectation<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble16AsyncExpectationV"
              },
              {
                "kind": "TypeNominal",
                "name": "Predicate",
                "printedName": "Nimble.Predicate<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble9PredicateV"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.String?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "hasDefaultArg": true,
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble16AsyncExpectationV2to_11descriptionACyxGAA9PredicateVyxG_SSSgtYaF",
            "mangledName": "$s6Nimble16AsyncExpectationV2to_11descriptionACyxGAA9PredicateVyxG_SSSgtYaF",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0>",
            "sugared_genericSig": "<Value>",
            "declAttributes": [
              "AccessControl",
              "DiscardableResult",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "toNot",
            "printedName": "toNot(_:description:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "AsyncExpectation",
                "printedName": "Nimble.AsyncExpectation<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble16AsyncExpectationV"
              },
              {
                "kind": "TypeNominal",
                "name": "Predicate",
                "printedName": "Nimble.Predicate<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble9PredicateV"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.String?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "hasDefaultArg": true,
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble16AsyncExpectationV5toNot_11descriptionACyxGAA9PredicateVyxG_SSSgtYaF",
            "mangledName": "$s6Nimble16AsyncExpectationV5toNot_11descriptionACyxGAA9PredicateVyxG_SSSgtYaF",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0>",
            "sugared_genericSig": "<Value>",
            "declAttributes": [
              "AccessControl",
              "DiscardableResult",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "notTo",
            "printedName": "notTo(_:description:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "AsyncExpectation",
                "printedName": "Nimble.AsyncExpectation<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble16AsyncExpectationV"
              },
              {
                "kind": "TypeNominal",
                "name": "Predicate",
                "printedName": "Nimble.Predicate<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble9PredicateV"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.String?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "hasDefaultArg": true,
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble16AsyncExpectationV5notTo_11descriptionACyxGAA9PredicateVyxG_SSSgtYaF",
            "mangledName": "$s6Nimble16AsyncExpectationV5notTo_11descriptionACyxGAA9PredicateVyxG_SSSgtYaF",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0>",
            "sugared_genericSig": "<Value>",
            "declAttributes": [
              "AccessControl",
              "DiscardableResult",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "toEventually",
            "printedName": "toEventually(_:timeout:pollInterval:description:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "AsyncExpectation",
                "printedName": "Nimble.AsyncExpectation<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble16AsyncExpectationV"
              },
              {
                "kind": "TypeNominal",
                "name": "Predicate",
                "printedName": "Nimble.Predicate<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble9PredicateV"
              },
              {
                "kind": "TypeNominal",
                "name": "NimbleTimeInterval",
                "printedName": "Nimble.NimbleTimeInterval",
                "hasDefaultArg": true,
                "usr": "s:6Nimble0A12TimeIntervalO"
              },
              {
                "kind": "TypeNominal",
                "name": "NimbleTimeInterval",
                "printedName": "Nimble.NimbleTimeInterval",
                "hasDefaultArg": true,
                "usr": "s:6Nimble0A12TimeIntervalO"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.String?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "hasDefaultArg": true,
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble16AsyncExpectationV12toEventually_7timeout12pollInterval11descriptionACyxGAA9PredicateVyxG_AA0a4TimeH0OAMSSSgtYaF",
            "mangledName": "$s6Nimble16AsyncExpectationV12toEventually_7timeout12pollInterval11descriptionACyxGAA9PredicateVyxG_AA0a4TimeH0OAMSSSgtYaF",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0>",
            "sugared_genericSig": "<Value>",
            "declAttributes": [
              "AccessControl",
              "DiscardableResult",
              "RawDocComment"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "toEventuallyNot",
            "printedName": "toEventuallyNot(_:timeout:pollInterval:description:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "AsyncExpectation",
                "printedName": "Nimble.AsyncExpectation<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble16AsyncExpectationV"
              },
              {
                "kind": "TypeNominal",
                "name": "Predicate",
                "printedName": "Nimble.Predicate<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble9PredicateV"
              },
              {
                "kind": "TypeNominal",
                "name": "NimbleTimeInterval",
                "printedName": "Nimble.NimbleTimeInterval",
                "hasDefaultArg": true,
                "usr": "s:6Nimble0A12TimeIntervalO"
              },
              {
                "kind": "TypeNominal",
                "name": "NimbleTimeInterval",
                "printedName": "Nimble.NimbleTimeInterval",
                "hasDefaultArg": true,
                "usr": "s:6Nimble0A12TimeIntervalO"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.String?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "hasDefaultArg": true,
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble16AsyncExpectationV15toEventuallyNot_7timeout12pollInterval11descriptionACyxGAA9PredicateVyxG_AA0a4TimeI0OAMSSSgtYaF",
            "mangledName": "$s6Nimble16AsyncExpectationV15toEventuallyNot_7timeout12pollInterval11descriptionACyxGAA9PredicateVyxG_AA0a4TimeI0OAMSSSgtYaF",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0>",
            "sugared_genericSig": "<Value>",
            "declAttributes": [
              "AccessControl",
              "DiscardableResult",
              "RawDocComment"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "toNotEventually",
            "printedName": "toNotEventually(_:timeout:pollInterval:description:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "AsyncExpectation",
                "printedName": "Nimble.AsyncExpectation<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble16AsyncExpectationV"
              },
              {
                "kind": "TypeNominal",
                "name": "Predicate",
                "printedName": "Nimble.Predicate<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble9PredicateV"
              },
              {
                "kind": "TypeNominal",
                "name": "NimbleTimeInterval",
                "printedName": "Nimble.NimbleTimeInterval",
                "hasDefaultArg": true,
                "usr": "s:6Nimble0A12TimeIntervalO"
              },
              {
                "kind": "TypeNominal",
                "name": "NimbleTimeInterval",
                "printedName": "Nimble.NimbleTimeInterval",
                "hasDefaultArg": true,
                "usr": "s:6Nimble0A12TimeIntervalO"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.String?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "hasDefaultArg": true,
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble16AsyncExpectationV15toNotEventually_7timeout12pollInterval11descriptionACyxGAA9PredicateVyxG_AA0a4TimeI0OAMSSSgtYaF",
            "mangledName": "$s6Nimble16AsyncExpectationV15toNotEventually_7timeout12pollInterval11descriptionACyxGAA9PredicateVyxG_AA0a4TimeI0OAMSSSgtYaF",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0>",
            "sugared_genericSig": "<Value>",
            "declAttributes": [
              "AccessControl",
              "DiscardableResult",
              "RawDocComment"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "toNever",
            "printedName": "toNever(_:until:pollInterval:description:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "AsyncExpectation",
                "printedName": "Nimble.AsyncExpectation<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble16AsyncExpectationV"
              },
              {
                "kind": "TypeNominal",
                "name": "Predicate",
                "printedName": "Nimble.Predicate<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble9PredicateV"
              },
              {
                "kind": "TypeNominal",
                "name": "NimbleTimeInterval",
                "printedName": "Nimble.NimbleTimeInterval",
                "hasDefaultArg": true,
                "usr": "s:6Nimble0A12TimeIntervalO"
              },
              {
                "kind": "TypeNominal",
                "name": "NimbleTimeInterval",
                "printedName": "Nimble.NimbleTimeInterval",
                "hasDefaultArg": true,
                "usr": "s:6Nimble0A12TimeIntervalO"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.String?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "hasDefaultArg": true,
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble16AsyncExpectationV7toNever_5until12pollInterval11descriptionACyxGAA9PredicateVyxG_AA0a4TimeH0OAMSSSgtYaF",
            "mangledName": "$s6Nimble16AsyncExpectationV7toNever_5until12pollInterval11descriptionACyxGAA9PredicateVyxG_AA0a4TimeH0OAMSSSgtYaF",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0>",
            "sugared_genericSig": "<Value>",
            "declAttributes": [
              "AccessControl",
              "DiscardableResult",
              "RawDocComment"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "neverTo",
            "printedName": "neverTo(_:until:pollInterval:description:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "AsyncExpectation",
                "printedName": "Nimble.AsyncExpectation<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble16AsyncExpectationV"
              },
              {
                "kind": "TypeNominal",
                "name": "Predicate",
                "printedName": "Nimble.Predicate<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble9PredicateV"
              },
              {
                "kind": "TypeNominal",
                "name": "NimbleTimeInterval",
                "printedName": "Nimble.NimbleTimeInterval",
                "hasDefaultArg": true,
                "usr": "s:6Nimble0A12TimeIntervalO"
              },
              {
                "kind": "TypeNominal",
                "name": "NimbleTimeInterval",
                "printedName": "Nimble.NimbleTimeInterval",
                "hasDefaultArg": true,
                "usr": "s:6Nimble0A12TimeIntervalO"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.String?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "hasDefaultArg": true,
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble16AsyncExpectationV7neverTo_5until12pollInterval11descriptionACyxGAA9PredicateVyxG_AA0a4TimeH0OAMSSSgtYaF",
            "mangledName": "$s6Nimble16AsyncExpectationV7neverTo_5until12pollInterval11descriptionACyxGAA9PredicateVyxG_AA0a4TimeH0OAMSSSgtYaF",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0>",
            "sugared_genericSig": "<Value>",
            "declAttributes": [
              "AccessControl",
              "DiscardableResult",
              "RawDocComment"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "toAlways",
            "printedName": "toAlways(_:until:pollInterval:description:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "AsyncExpectation",
                "printedName": "Nimble.AsyncExpectation<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble16AsyncExpectationV"
              },
              {
                "kind": "TypeNominal",
                "name": "Predicate",
                "printedName": "Nimble.Predicate<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble9PredicateV"
              },
              {
                "kind": "TypeNominal",
                "name": "NimbleTimeInterval",
                "printedName": "Nimble.NimbleTimeInterval",
                "hasDefaultArg": true,
                "usr": "s:6Nimble0A12TimeIntervalO"
              },
              {
                "kind": "TypeNominal",
                "name": "NimbleTimeInterval",
                "printedName": "Nimble.NimbleTimeInterval",
                "hasDefaultArg": true,
                "usr": "s:6Nimble0A12TimeIntervalO"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.String?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "hasDefaultArg": true,
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble16AsyncExpectationV8toAlways_5until12pollInterval11descriptionACyxGAA9PredicateVyxG_AA0a4TimeH0OAMSSSgtYaF",
            "mangledName": "$s6Nimble16AsyncExpectationV8toAlways_5until12pollInterval11descriptionACyxGAA9PredicateVyxG_AA0a4TimeH0OAMSSSgtYaF",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0>",
            "sugared_genericSig": "<Value>",
            "declAttributes": [
              "AccessControl",
              "DiscardableResult",
              "RawDocComment"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "alwaysTo",
            "printedName": "alwaysTo(_:until:pollInterval:description:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "AsyncExpectation",
                "printedName": "Nimble.AsyncExpectation<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble16AsyncExpectationV"
              },
              {
                "kind": "TypeNominal",
                "name": "Predicate",
                "printedName": "Nimble.Predicate<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble9PredicateV"
              },
              {
                "kind": "TypeNominal",
                "name": "NimbleTimeInterval",
                "printedName": "Nimble.NimbleTimeInterval",
                "hasDefaultArg": true,
                "usr": "s:6Nimble0A12TimeIntervalO"
              },
              {
                "kind": "TypeNominal",
                "name": "NimbleTimeInterval",
                "printedName": "Nimble.NimbleTimeInterval",
                "hasDefaultArg": true,
                "usr": "s:6Nimble0A12TimeIntervalO"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.String?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "hasDefaultArg": true,
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble16AsyncExpectationV8alwaysTo_5until12pollInterval11descriptionACyxGAA9PredicateVyxG_AA0a4TimeH0OAMSSSgtYaF",
            "mangledName": "$s6Nimble16AsyncExpectationV8alwaysTo_5until12pollInterval11descriptionACyxGAA9PredicateVyxG_AA0a4TimeH0OAMSSSgtYaF",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0>",
            "sugared_genericSig": "<Value>",
            "declAttributes": [
              "AccessControl",
              "DiscardableResult",
              "RawDocComment"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "==",
            "printedName": "==(_:_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "AsyncExpectation",
                "printedName": "Nimble.AsyncExpectation<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble16AsyncExpectationV"
              },
              {
                "kind": "TypeNominal",
                "name": "ExpectationNil",
                "printedName": "Nimble.ExpectationNil",
                "usr": "s:6Nimble14ExpectationNilV"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble16AsyncExpectationV2eeoiyyACyxG_AA0C3NilVtYaFZ",
            "mangledName": "$s6Nimble16AsyncExpectationV2eeoiyyACyxG_AA0C3NilVtYaFZ",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0>",
            "sugared_genericSig": "<Value>",
            "static": true,
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "!=",
            "printedName": "!=(_:_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "AsyncExpectation",
                "printedName": "Nimble.AsyncExpectation<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble16AsyncExpectationV"
              },
              {
                "kind": "TypeNominal",
                "name": "ExpectationNil",
                "printedName": "Nimble.ExpectationNil",
                "usr": "s:6Nimble14ExpectationNilV"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble16AsyncExpectationV2neoiyyACyxG_AA0C3NilVtYaFZ",
            "mangledName": "$s6Nimble16AsyncExpectationV2neoiyyACyxG_AA0C3NilVtYaFZ",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0>",
            "sugared_genericSig": "<Value>",
            "static": true,
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Struct",
        "usr": "s:6Nimble16AsyncExpectationV",
        "mangledName": "$s6Nimble16AsyncExpectationV",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0>",
        "sugared_genericSig": "<Value>",
        "declAttributes": [
          "AccessControl"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Expectation",
            "printedName": "Expectation",
            "usr": "s:6Nimble11ExpectationP",
            "mangledName": "$s6Nimble11ExpectationP"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "CoreFoundation",
        "printedName": "CoreFoundation",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "Import",
        "name": "Dispatch",
        "printedName": "Dispatch",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "Import",
        "name": "XCTest",
        "printedName": "XCTest",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "TypeDecl",
        "name": "NimbleXCTestHandler",
        "printedName": "NimbleXCTestHandler",
        "children": [
          {
            "kind": "Function",
            "name": "assert",
            "printedName": "assert(_:message:location:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              },
              {
                "kind": "TypeNominal",
                "name": "FailureMessage",
                "printedName": "Nimble.FailureMessage",
                "usr": "c:@M@Nimble@objc(cs)FailureMessage"
              },
              {
                "kind": "TypeNominal",
                "name": "SourceLocation",
                "printedName": "Nimble.SourceLocation",
                "usr": "c:@M@Nimble@objc(cs)SourceLocation"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble0A13XCTestHandlerC6assert_7message8locationySb_AA14FailureMessageCAA14SourceLocationCtF",
            "mangledName": "$s6Nimble0A13XCTestHandlerC6assert_7message8locationySb_AA14FailureMessageCAA14SourceLocationCtF",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Class",
        "usr": "s:6Nimble0A13XCTestHandlerC",
        "mangledName": "$s6Nimble0A13XCTestHandlerC",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "hasMissingDesignatedInitializers": true,
        "conformances": [
          {
            "kind": "Conformance",
            "name": "AssertionHandler",
            "printedName": "AssertionHandler",
            "usr": "s:6Nimble16AssertionHandlerP",
            "mangledName": "$s6Nimble16AssertionHandlerP"
          }
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "NimbleShortXCTestHandler",
        "printedName": "NimbleShortXCTestHandler",
        "children": [
          {
            "kind": "Function",
            "name": "assert",
            "printedName": "assert(_:message:location:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              },
              {
                "kind": "TypeNominal",
                "name": "FailureMessage",
                "printedName": "Nimble.FailureMessage",
                "usr": "c:@M@Nimble@objc(cs)FailureMessage"
              },
              {
                "kind": "TypeNominal",
                "name": "SourceLocation",
                "printedName": "Nimble.SourceLocation",
                "usr": "c:@M@Nimble@objc(cs)SourceLocation"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble0A18ShortXCTestHandlerC6assert_7message8locationySb_AA14FailureMessageCAA14SourceLocationCtF",
            "mangledName": "$s6Nimble0A18ShortXCTestHandlerC6assert_7message8locationySb_AA14FailureMessageCAA14SourceLocationCtF",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Class",
        "usr": "s:6Nimble0A18ShortXCTestHandlerC",
        "mangledName": "$s6Nimble0A18ShortXCTestHandlerC",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "hasMissingDesignatedInitializers": true,
        "conformances": [
          {
            "kind": "Conformance",
            "name": "AssertionHandler",
            "printedName": "AssertionHandler",
            "usr": "s:6Nimble16AssertionHandlerP",
            "mangledName": "$s6Nimble16AssertionHandlerP"
          }
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "CurrentTestCaseTracker",
        "printedName": "CurrentTestCaseTracker",
        "children": [
          {
            "kind": "Var",
            "name": "sharedInstance",
            "printedName": "sharedInstance",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "CurrentTestCaseTracker",
                "printedName": "Nimble.CurrentTestCaseTracker",
                "usr": "c:@M@Nimble@objc(cs)CurrentTestCaseTracker"
              }
            ],
            "declKind": "Var",
            "usr": "c:@M@Nimble@objc(cs)CurrentTestCaseTracker(cpy)sharedInstance",
            "mangledName": "$s6Nimble22CurrentTestCaseTrackerC14sharedInstanceACvpZ",
            "moduleName": "Nimble",
            "static": true,
            "declAttributes": [
              "HasInitialValue",
              "Final",
              "HasStorage",
              "AccessControl",
              "ObjC"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "CurrentTestCaseTracker",
                    "printedName": "Nimble.CurrentTestCaseTracker",
                    "usr": "c:@M@Nimble@objc(cs)CurrentTestCaseTracker"
                  }
                ],
                "declKind": "Accessor",
                "usr": "c:@M@Nimble@objc(cs)CurrentTestCaseTracker(cm)sharedInstance",
                "mangledName": "$s6Nimble22CurrentTestCaseTrackerC14sharedInstanceACvgZ",
                "moduleName": "Nimble",
                "static": true,
                "implicit": true,
                "declAttributes": [
                  "Final",
                  "ObjC"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Function",
            "name": "testCaseWillStart",
            "printedName": "testCaseWillStart(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "XCTestCase",
                "printedName": "XCTest.XCTestCase",
                "usr": "c:objc(cs)XCTestCase"
              }
            ],
            "declKind": "Func",
            "usr": "c:@M@Nimble@objc(cs)CurrentTestCaseTracker(im)testCaseWillStart:",
            "mangledName": "$s6Nimble22CurrentTestCaseTrackerC04testD9WillStartyySo06XCTestD0CF",
            "moduleName": "Nimble",
            "objc_name": "testCaseWillStart:",
            "declAttributes": [
              "Final",
              "ObjC",
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "testCaseDidFinish",
            "printedName": "testCaseDidFinish(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "XCTestCase",
                "printedName": "XCTest.XCTestCase",
                "usr": "c:objc(cs)XCTestCase"
              }
            ],
            "declKind": "Func",
            "usr": "c:@M@Nimble@objc(cs)CurrentTestCaseTracker(im)testCaseDidFinish:",
            "mangledName": "$s6Nimble22CurrentTestCaseTrackerC04testD9DidFinishyySo06XCTestD0CF",
            "moduleName": "Nimble",
            "objc_name": "testCaseDidFinish:",
            "declAttributes": [
              "Final",
              "ObjC",
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "CurrentTestCaseTracker",
                "printedName": "Nimble.CurrentTestCaseTracker",
                "usr": "c:@M@Nimble@objc(cs)CurrentTestCaseTracker"
              }
            ],
            "declKind": "Constructor",
            "usr": "c:@M@Nimble@objc(cs)CurrentTestCaseTracker(im)init",
            "mangledName": "$s6Nimble22CurrentTestCaseTrackerCACycfc",
            "moduleName": "Nimble",
            "overriding": true,
            "implicit": true,
            "objc_name": "init",
            "declAttributes": [
              "Dynamic",
              "ObjC",
              "Override"
            ],
            "init_kind": "Designated"
          }
        ],
        "declKind": "Class",
        "usr": "c:@M@Nimble@objc(cs)CurrentTestCaseTracker",
        "mangledName": "$s6Nimble22CurrentTestCaseTrackerC",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "Final",
          "ObjC",
          "RawDocComment"
        ],
        "superclassUsr": "c:objc(cs)NSObject",
        "inheritsConvenienceInitializers": true,
        "superclassNames": [
          "ObjectiveC.NSObject"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObservingPublishing",
            "printedName": "_KeyValueCodingAndObservingPublishing",
            "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
            "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObserving",
            "printedName": "_KeyValueCodingAndObserving",
            "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
            "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          }
        ]
      },
      {
        "kind": "Function",
        "name": "recordFailure",
        "printedName": "recordFailure(_:location:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "String",
            "printedName": "Swift.String",
            "usr": "s:SS"
          },
          {
            "kind": "TypeNominal",
            "name": "SourceLocation",
            "printedName": "Nimble.SourceLocation",
            "usr": "c:@M@Nimble@objc(cs)SourceLocation"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble13recordFailure_8locationySS_AA14SourceLocationCtF",
        "mangledName": "$s6Nimble13recordFailure_8locationySS_AA14SourceLocationCtF",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "TypeDecl",
        "name": "TestOutputStringConvertible",
        "printedName": "TestOutputStringConvertible",
        "children": [
          {
            "kind": "Var",
            "name": "testDescription",
            "printedName": "testDescription",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:6Nimble27TestOutputStringConvertibleP15testDescriptionSSvp",
            "mangledName": "$s6Nimble27TestOutputStringConvertibleP15testDescriptionSSvp",
            "moduleName": "Nimble",
            "protocolReq": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble27TestOutputStringConvertibleP15testDescriptionSSvg",
                "mangledName": "$s6Nimble27TestOutputStringConvertibleP15testDescriptionSSvg",
                "moduleName": "Nimble",
                "genericSig": "<τ_0_0 where τ_0_0 : Nimble.TestOutputStringConvertible>",
                "sugared_genericSig": "<Self where Self : Nimble.TestOutputStringConvertible>",
                "protocolReq": true,
                "reqNewWitnessTableEntry": true,
                "accessorKind": "get"
              }
            ]
          }
        ],
        "declKind": "Protocol",
        "usr": "s:6Nimble27TestOutputStringConvertibleP",
        "mangledName": "$s6Nimble27TestOutputStringConvertibleP",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ]
      },
      {
        "kind": "Function",
        "name": "stringify",
        "printedName": "stringify(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "String",
            "printedName": "Swift.String",
            "usr": "s:SS"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "τ_0_0?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble9stringifyySSxSglF",
        "mangledName": "$s6Nimble9stringifyySSxSglF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0>",
        "sugared_genericSig": "<T>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "TypeDecl",
        "name": "NMBStringer",
        "printedName": "NMBStringer",
        "children": [
          {
            "kind": "Function",
            "name": "stringify",
            "printedName": "stringify(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Any?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "ProtocolComposition",
                    "printedName": "Any"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "c:@M@Nimble@objc(cs)NMBStringer(cm)stringify:",
            "mangledName": "$s6Nimble11NMBStringerC9stringifyySSypSgFZ",
            "moduleName": "Nimble",
            "static": true,
            "declAttributes": [
              "AccessControl",
              "ObjC"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBStringer",
                "printedName": "Nimble.NMBStringer",
                "usr": "c:@M@Nimble@objc(cs)NMBStringer"
              }
            ],
            "declKind": "Constructor",
            "usr": "c:@M@Nimble@objc(cs)NMBStringer(im)init",
            "mangledName": "$s6Nimble11NMBStringerCACycfc",
            "moduleName": "Nimble",
            "overriding": true,
            "implicit": true,
            "objc_name": "init",
            "declAttributes": [
              "Dynamic",
              "ObjC",
              "Override"
            ],
            "init_kind": "Designated"
          }
        ],
        "declKind": "Class",
        "usr": "c:@M@Nimble@objc(cs)NMBStringer",
        "mangledName": "$s6Nimble11NMBStringerC",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "ObjC"
        ],
        "superclassUsr": "c:objc(cs)NSObject",
        "inheritsConvenienceInitializers": true,
        "superclassNames": [
          "ObjectiveC.NSObject"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObservingPublishing",
            "printedName": "_KeyValueCodingAndObservingPublishing",
            "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
            "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObserving",
            "printedName": "_KeyValueCodingAndObserving",
            "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
            "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          }
        ]
      },
      {
        "kind": "Function",
        "name": "prettyCollectionType",
        "printedName": "prettyCollectionType(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "String",
            "printedName": "Swift.String",
            "usr": "s:SS"
          },
          {
            "kind": "TypeNominal",
            "name": "GenericTypeParam",
            "printedName": "τ_0_0"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble20prettyCollectionTypeySSxlF",
        "mangledName": "$s6Nimble20prettyCollectionTypeySSxlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0>",
        "sugared_genericSig": "<T>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "prettyCollectionType",
        "printedName": "prettyCollectionType(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "String",
            "printedName": "Swift.String",
            "usr": "s:SS"
          },
          {
            "kind": "TypeNominal",
            "name": "GenericTypeParam",
            "printedName": "τ_0_0"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble20prettyCollectionTypeySSxSlRzlF",
        "mangledName": "$s6Nimble20prettyCollectionTypeySSxSlRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Collection>",
        "sugared_genericSig": "<T where T : Swift.Collection>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "TypeDecl",
        "name": "SourceLocation",
        "printedName": "SourceLocation",
        "children": [
          {
            "kind": "Var",
            "name": "file",
            "printedName": "file",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:6Nimble14SourceLocationC4fileSSvp",
            "mangledName": "$s6Nimble14SourceLocationC4fileSSvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "Final",
              "HasStorage",
              "AccessControl"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble14SourceLocationC4fileSSvg",
                "mangledName": "$s6Nimble14SourceLocationC4fileSSvg",
                "moduleName": "Nimble",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "line",
            "printedName": "line",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "UInt",
                "printedName": "Swift.UInt",
                "usr": "s:Su"
              }
            ],
            "declKind": "Var",
            "usr": "s:6Nimble14SourceLocationC4lineSuvp",
            "mangledName": "$s6Nimble14SourceLocationC4lineSuvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "Final",
              "HasStorage",
              "AccessControl"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt",
                    "printedName": "Swift.UInt",
                    "usr": "s:Su"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble14SourceLocationC4lineSuvg",
                "mangledName": "$s6Nimble14SourceLocationC4lineSuvg",
                "moduleName": "Nimble",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "description",
            "printedName": "description",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "c:@M@Nimble@objc(cs)SourceLocation(py)description",
            "mangledName": "$s6Nimble14SourceLocationC11descriptionSSvp",
            "moduleName": "Nimble",
            "overriding": true,
            "objc_name": "description",
            "declAttributes": [
              "Final",
              "ObjC",
              "AccessControl",
              "Override"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "c:@M@Nimble@objc(cs)SourceLocation(im)description",
                "mangledName": "$s6Nimble14SourceLocationC11descriptionSSvg",
                "moduleName": "Nimble",
                "overriding": true,
                "objc_name": "description",
                "declAttributes": [
                  "Final",
                  "ObjC"
                ],
                "accessorKind": "get"
              }
            ]
          }
        ],
        "declKind": "Class",
        "usr": "c:@M@Nimble@objc(cs)SourceLocation",
        "mangledName": "$s6Nimble14SourceLocationC",
        "moduleName": "Nimble",
        "declAttributes": [
          "Final",
          "AccessControl",
          "ObjC"
        ],
        "superclassUsr": "c:objc(cs)NSObject",
        "hasMissingDesignatedInitializers": true,
        "inheritsConvenienceInitializers": true,
        "superclassNames": [
          "ObjectiveC.NSObject"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObservingPublishing",
            "printedName": "_KeyValueCodingAndObservingPublishing",
            "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
            "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObserving",
            "printedName": "_KeyValueCodingAndObserving",
            "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
            "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          }
        ]
      },
      {
        "kind": "Function",
        "name": "beLessThanOrEqualTo",
        "printedName": "beLessThanOrEqualTo(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "τ_0_0?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble19beLessThanOrEqualToyAA9PredicateVyxGxSgSLRzlF",
        "mangledName": "$s6Nimble19beLessThanOrEqualToyAA9PredicateVyxGxSgSLRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Comparable>",
        "sugared_genericSig": "<T where T : Swift.Comparable>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "<=",
        "printedName": "<=(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "SyncExpectation",
            "printedName": "Nimble.SyncExpectation<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble15SyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "GenericTypeParam",
            "printedName": "τ_0_0"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2leoiyyAA15SyncExpectationVyxG_xtSLRzlF",
        "mangledName": "$s6Nimble2leoiyyAA15SyncExpectationVyxG_xtSLRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Comparable>",
        "sugared_genericSig": "<T where T : Swift.Comparable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "<=",
        "printedName": "<=(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "AsyncExpectation",
            "printedName": "Nimble.AsyncExpectation<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble16AsyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "GenericTypeParam",
            "printedName": "τ_0_0"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2leoiyyAA16AsyncExpectationVyxG_xtYaSLRzlF",
        "mangledName": "$s6Nimble2leoiyyAA16AsyncExpectationVyxG_xtYaSLRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Comparable>",
        "sugared_genericSig": "<T where T : Swift.Comparable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "Function",
        "name": "beLessThanOrEqualTo",
        "printedName": "beLessThanOrEqualTo(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "τ_0_0?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble19beLessThanOrEqualToyAA9PredicateVyxGxSgAA13NMBComparableRzlF",
        "mangledName": "$s6Nimble19beLessThanOrEqualToyAA9PredicateVyxGxSgAA13NMBComparableRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Nimble.NMBComparable>",
        "sugared_genericSig": "<T where T : Nimble.NMBComparable>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "<=",
        "printedName": "<=(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "SyncExpectation",
            "printedName": "Nimble.SyncExpectation<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble15SyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "GenericTypeParam",
            "printedName": "τ_0_0"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2leoiyyAA15SyncExpectationVyxG_xtAA13NMBComparableRzlF",
        "mangledName": "$s6Nimble2leoiyyAA15SyncExpectationVyxG_xtAA13NMBComparableRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Nimble.NMBComparable>",
        "sugared_genericSig": "<T where T : Nimble.NMBComparable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "<=",
        "printedName": "<=(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "AsyncExpectation",
            "printedName": "Nimble.AsyncExpectation<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble16AsyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "GenericTypeParam",
            "printedName": "τ_0_0"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2leoiyyAA16AsyncExpectationVyxG_xtYaAA13NMBComparableRzlF",
        "mangledName": "$s6Nimble2leoiyyAA16AsyncExpectationVyxG_xtYaAA13NMBComparableRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Nimble.NMBComparable>",
        "sugared_genericSig": "<T where T : Nimble.NMBComparable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "TypeDecl",
        "name": "AssertionDispatcher",
        "printedName": "AssertionDispatcher",
        "children": [
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(handlers:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "AssertionDispatcher",
                "printedName": "Nimble.AssertionDispatcher",
                "usr": "s:6Nimble19AssertionDispatcherC"
              },
              {
                "kind": "TypeNominal",
                "name": "Array",
                "printedName": "[Nimble.AssertionHandler]",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "AssertionHandler",
                    "printedName": "Nimble.AssertionHandler",
                    "usr": "s:6Nimble16AssertionHandlerP"
                  }
                ],
                "usr": "s:Sa"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:6Nimble19AssertionDispatcherC8handlersACSayAA0B7Handler_pG_tcfc",
            "mangledName": "$s6Nimble19AssertionDispatcherC8handlersACSayAA0B7Handler_pG_tcfc",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Function",
            "name": "assert",
            "printedName": "assert(_:message:location:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              },
              {
                "kind": "TypeNominal",
                "name": "FailureMessage",
                "printedName": "Nimble.FailureMessage",
                "usr": "c:@M@Nimble@objc(cs)FailureMessage"
              },
              {
                "kind": "TypeNominal",
                "name": "SourceLocation",
                "printedName": "Nimble.SourceLocation",
                "usr": "c:@M@Nimble@objc(cs)SourceLocation"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble19AssertionDispatcherC6assert_7message8locationySb_AA14FailureMessageCAA14SourceLocationCtF",
            "mangledName": "$s6Nimble19AssertionDispatcherC6assert_7message8locationySb_AA14FailureMessageCAA14SourceLocationCtF",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Class",
        "usr": "s:6Nimble19AssertionDispatcherC",
        "mangledName": "$s6Nimble19AssertionDispatcherC",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "AssertionHandler",
            "printedName": "AssertionHandler",
            "usr": "s:6Nimble16AssertionHandlerP",
            "mangledName": "$s6Nimble16AssertionHandlerP"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "Function",
        "name": "beAnInstanceOf",
        "printedName": "beAnInstanceOf(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<Any>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "ProtocolComposition",
                "printedName": "Any"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "Metatype",
            "printedName": "τ_0_0.Type",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ]
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble14beAnInstanceOfyAA9PredicateVyypGxmlF",
        "mangledName": "$s6Nimble14beAnInstanceOfyAA9PredicateVyypGxmlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0>",
        "sugared_genericSig": "<T>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "beAnInstanceOf",
        "printedName": "beAnInstanceOf(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<ObjectiveC.NSObject>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NSObject",
                "printedName": "ObjectiveC.NSObject",
                "usr": "c:objc(cs)NSObject"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "ExistentialMetatype",
            "printedName": "AnyObject.Type",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "ProtocolComposition",
                "printedName": "AnyObject"
              }
            ]
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble14beAnInstanceOfyAA9PredicateVySo8NSObjectCGyXlXpF",
        "mangledName": "$s6Nimble14beAnInstanceOfyAA9PredicateVySo8NSObjectCGyXlXpF",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "TypeDecl",
        "name": "AsyncExpression",
        "printedName": "AsyncExpression",
        "children": [
          {
            "kind": "Var",
            "name": "location",
            "printedName": "location",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "SourceLocation",
                "printedName": "Nimble.SourceLocation",
                "usr": "c:@M@Nimble@objc(cs)SourceLocation"
              }
            ],
            "declKind": "Var",
            "usr": "s:6Nimble15AsyncExpressionV8locationAA14SourceLocationCvp",
            "mangledName": "$s6Nimble15AsyncExpressionV8locationAA14SourceLocationCvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "HasStorage",
              "AccessControl"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SourceLocation",
                    "printedName": "Nimble.SourceLocation",
                    "usr": "c:@M@Nimble@objc(cs)SourceLocation"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble15AsyncExpressionV8locationAA14SourceLocationCvg",
                "mangledName": "$s6Nimble15AsyncExpressionV8locationAA14SourceLocationCvg",
                "moduleName": "Nimble",
                "genericSig": "<τ_0_0>",
                "sugared_genericSig": "<Value>",
                "implicit": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "isClosure",
            "printedName": "isClosure",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              }
            ],
            "declKind": "Var",
            "usr": "s:6Nimble15AsyncExpressionV9isClosureSbvp",
            "mangledName": "$s6Nimble15AsyncExpressionV9isClosureSbvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "HasStorage",
              "AccessControl"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Bool",
                    "printedName": "Swift.Bool",
                    "usr": "s:Sb"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble15AsyncExpressionV9isClosureSbvg",
                "mangledName": "$s6Nimble15AsyncExpressionV9isClosureSbvg",
                "moduleName": "Nimble",
                "genericSig": "<τ_0_0>",
                "sugared_genericSig": "<Value>",
                "implicit": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(expression:location:isClosure:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "AsyncExpression",
                "printedName": "Nimble.AsyncExpression<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble15AsyncExpressionV"
              },
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "() async throws -> τ_0_0?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "τ_0_0?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_0_0"
                      }
                    ],
                    "usr": "s:Sq"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ]
              },
              {
                "kind": "TypeNominal",
                "name": "SourceLocation",
                "printedName": "Nimble.SourceLocation",
                "usr": "c:@M@Nimble@objc(cs)SourceLocation"
              },
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "hasDefaultArg": true,
                "usr": "s:Sb"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:6Nimble15AsyncExpressionV10expression8location9isClosureACyxGxSgyYaKc_AA14SourceLocationCSbtcfc",
            "mangledName": "$s6Nimble15AsyncExpressionV10expression8location9isClosureACyxGxSgyYaKc_AA14SourceLocationCSbtcfc",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0>",
            "sugared_genericSig": "<Value>",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(memoizedExpression:location:withoutCaching:isClosure:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "AsyncExpression",
                "printedName": "Nimble.AsyncExpression<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble15AsyncExpressionV"
              },
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Swift.Bool) async throws -> τ_0_0?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "τ_0_0?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_0_0"
                      }
                    ],
                    "usr": "s:Sq"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Bool",
                    "printedName": "Swift.Bool",
                    "usr": "s:Sb"
                  }
                ]
              },
              {
                "kind": "TypeNominal",
                "name": "SourceLocation",
                "printedName": "Nimble.SourceLocation",
                "usr": "c:@M@Nimble@objc(cs)SourceLocation"
              },
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              },
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "hasDefaultArg": true,
                "usr": "s:Sb"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:6Nimble15AsyncExpressionV08memoizedC08location14withoutCaching9isClosureACyxGxSgSbYaKc_AA14SourceLocationCS2btcfc",
            "mangledName": "$s6Nimble15AsyncExpressionV08memoizedC08location14withoutCaching9isClosureACyxGxSgSbYaKc_AA14SourceLocationCS2btcfc",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0>",
            "sugared_genericSig": "<Value>",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Function",
            "name": "toSynchronousExpression",
            "printedName": "toSynchronousExpression()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Expression",
                "printedName": "Nimble.Expression<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble10ExpressionV"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble15AsyncExpressionV013toSynchronousC0AA0C0VyxGyYaF",
            "mangledName": "$s6Nimble15AsyncExpressionV013toSynchronousC0AA0C0VyxGyYaF",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0>",
            "sugared_genericSig": "<Value>",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "cast",
            "printedName": "cast(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "AsyncExpression",
                "printedName": "Nimble.AsyncExpression<τ_1_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_1_0"
                  }
                ],
                "usr": "s:6Nimble15AsyncExpressionV"
              },
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(τ_0_0?) throws -> τ_1_0?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "τ_1_0?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_1_0"
                      }
                    ],
                    "usr": "s:Sq"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "τ_0_0?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_0_0"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ]
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble15AsyncExpressionV4castyACyqd__Gqd__SgxSgKclF",
            "mangledName": "$s6Nimble15AsyncExpressionV4castyACyqd__Gqd__SgxSgKclF",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0, τ_1_0>",
            "sugared_genericSig": "<Value, U>",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "evaluate",
            "printedName": "evaluate()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "τ_0_0?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble15AsyncExpressionV8evaluatexSgyYaKF",
            "mangledName": "$s6Nimble15AsyncExpressionV8evaluatexSgyYaKF",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0>",
            "sugared_genericSig": "<Value>",
            "declAttributes": [
              "AccessControl"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "withoutCaching",
            "printedName": "withoutCaching()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "AsyncExpression",
                "printedName": "Nimble.AsyncExpression<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble15AsyncExpressionV"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble15AsyncExpressionV14withoutCachingACyxGyF",
            "mangledName": "$s6Nimble15AsyncExpressionV14withoutCachingACyxGyF",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0>",
            "sugared_genericSig": "<Value>",
            "declAttributes": [
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Struct",
        "usr": "s:6Nimble15AsyncExpressionV",
        "mangledName": "$s6Nimble15AsyncExpressionV",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0>",
        "sugared_genericSig": "<Value>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ]
      },
      {
        "kind": "Import",
        "name": "Dispatch",
        "printedName": "Dispatch",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "TypeDecl",
        "name": "NimbleTimeInterval",
        "printedName": "NimbleTimeInterval",
        "children": [
          {
            "kind": "Var",
            "name": "seconds",
            "printedName": "seconds",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Nimble.NimbleTimeInterval.Type) -> (Swift.Int) -> Nimble.NimbleTimeInterval",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(Swift.Int) -> Nimble.NimbleTimeInterval",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "NimbleTimeInterval",
                        "printedName": "Nimble.NimbleTimeInterval",
                        "usr": "s:6Nimble0A12TimeIntervalO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Int",
                        "printedName": "Swift.Int",
                        "usr": "s:Si"
                      }
                    ]
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "Nimble.NimbleTimeInterval.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "NimbleTimeInterval",
                        "printedName": "Nimble.NimbleTimeInterval",
                        "usr": "s:6Nimble0A12TimeIntervalO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:6Nimble0A12TimeIntervalO7secondsyACSicACmF",
            "mangledName": "$s6Nimble0A12TimeIntervalO7secondsyACSicACmF",
            "moduleName": "Nimble"
          },
          {
            "kind": "Var",
            "name": "milliseconds",
            "printedName": "milliseconds",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Nimble.NimbleTimeInterval.Type) -> (Swift.Int) -> Nimble.NimbleTimeInterval",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(Swift.Int) -> Nimble.NimbleTimeInterval",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "NimbleTimeInterval",
                        "printedName": "Nimble.NimbleTimeInterval",
                        "usr": "s:6Nimble0A12TimeIntervalO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Int",
                        "printedName": "Swift.Int",
                        "usr": "s:Si"
                      }
                    ]
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "Nimble.NimbleTimeInterval.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "NimbleTimeInterval",
                        "printedName": "Nimble.NimbleTimeInterval",
                        "usr": "s:6Nimble0A12TimeIntervalO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:6Nimble0A12TimeIntervalO12millisecondsyACSicACmF",
            "mangledName": "$s6Nimble0A12TimeIntervalO12millisecondsyACSicACmF",
            "moduleName": "Nimble"
          },
          {
            "kind": "Var",
            "name": "microseconds",
            "printedName": "microseconds",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Nimble.NimbleTimeInterval.Type) -> (Swift.Int) -> Nimble.NimbleTimeInterval",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(Swift.Int) -> Nimble.NimbleTimeInterval",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "NimbleTimeInterval",
                        "printedName": "Nimble.NimbleTimeInterval",
                        "usr": "s:6Nimble0A12TimeIntervalO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Int",
                        "printedName": "Swift.Int",
                        "usr": "s:Si"
                      }
                    ]
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "Nimble.NimbleTimeInterval.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "NimbleTimeInterval",
                        "printedName": "Nimble.NimbleTimeInterval",
                        "usr": "s:6Nimble0A12TimeIntervalO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:6Nimble0A12TimeIntervalO12microsecondsyACSicACmF",
            "mangledName": "$s6Nimble0A12TimeIntervalO12microsecondsyACSicACmF",
            "moduleName": "Nimble"
          },
          {
            "kind": "Var",
            "name": "nanoseconds",
            "printedName": "nanoseconds",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Nimble.NimbleTimeInterval.Type) -> (Swift.Int) -> Nimble.NimbleTimeInterval",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(Swift.Int) -> Nimble.NimbleTimeInterval",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "NimbleTimeInterval",
                        "printedName": "Nimble.NimbleTimeInterval",
                        "usr": "s:6Nimble0A12TimeIntervalO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Int",
                        "printedName": "Swift.Int",
                        "usr": "s:Si"
                      }
                    ]
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "Nimble.NimbleTimeInterval.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "NimbleTimeInterval",
                        "printedName": "Nimble.NimbleTimeInterval",
                        "usr": "s:6Nimble0A12TimeIntervalO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:6Nimble0A12TimeIntervalO11nanosecondsyACSicACmF",
            "mangledName": "$s6Nimble0A12TimeIntervalO11nanosecondsyACSicACmF",
            "moduleName": "Nimble"
          },
          {
            "kind": "Function",
            "name": "==",
            "printedName": "==(_:_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              },
              {
                "kind": "TypeNominal",
                "name": "NimbleTimeInterval",
                "printedName": "Nimble.NimbleTimeInterval",
                "usr": "s:6Nimble0A12TimeIntervalO"
              },
              {
                "kind": "TypeNominal",
                "name": "NimbleTimeInterval",
                "printedName": "Nimble.NimbleTimeInterval",
                "usr": "s:6Nimble0A12TimeIntervalO"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble0A12TimeIntervalO2eeoiySbAC_ACtFZ",
            "mangledName": "$s6Nimble0A12TimeIntervalO2eeoiySbAC_ACtFZ",
            "moduleName": "Nimble",
            "static": true,
            "implicit": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Var",
            "name": "dispatchTimeInterval",
            "printedName": "dispatchTimeInterval",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "DispatchTimeInterval",
                "printedName": "Dispatch.DispatchTimeInterval",
                "usr": "s:8Dispatch0A12TimeIntervalO"
              }
            ],
            "declKind": "Var",
            "usr": "s:6Nimble0A12TimeIntervalO08dispatchbC08Dispatch0ebC0Ovp",
            "mangledName": "$s6Nimble0A12TimeIntervalO08dispatchbC08Dispatch0ebC0Ovp",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DispatchTimeInterval",
                    "printedName": "Dispatch.DispatchTimeInterval",
                    "usr": "s:8Dispatch0A12TimeIntervalO"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble0A12TimeIntervalO08dispatchbC08Dispatch0ebC0Ovg",
                "mangledName": "$s6Nimble0A12TimeIntervalO08dispatchbC08Dispatch0ebC0Ovg",
                "moduleName": "Nimble",
                "isFromExtension": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "description",
            "printedName": "description",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:6Nimble0A12TimeIntervalO11descriptionSSvp",
            "mangledName": "$s6Nimble0A12TimeIntervalO11descriptionSSvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble0A12TimeIntervalO11descriptionSSvg",
                "mangledName": "$s6Nimble0A12TimeIntervalO11descriptionSSvg",
                "moduleName": "Nimble",
                "isFromExtension": true,
                "accessorKind": "get"
              }
            ]
          }
        ],
        "declKind": "Enum",
        "usr": "s:6Nimble0A12TimeIntervalO",
        "mangledName": "$s6Nimble0A12TimeIntervalO",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Sendable",
            "printedName": "Sendable",
            "usr": "s:s8SendableP",
            "mangledName": "$ss8SendableP"
          },
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "TypeDecl",
        "name": "ToSucceedResult",
        "printedName": "ToSucceedResult",
        "children": [
          {
            "kind": "Var",
            "name": "succeeded",
            "printedName": "succeeded",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Nimble.ToSucceedResult.Type) -> Nimble.ToSucceedResult",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "ToSucceedResult",
                    "printedName": "Nimble.ToSucceedResult",
                    "usr": "s:6Nimble15ToSucceedResultO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "Nimble.ToSucceedResult.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ToSucceedResult",
                        "printedName": "Nimble.ToSucceedResult",
                        "usr": "s:6Nimble15ToSucceedResultO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:6Nimble15ToSucceedResultO9succeededyA2CmF",
            "mangledName": "$s6Nimble15ToSucceedResultO9succeededyA2CmF",
            "moduleName": "Nimble"
          },
          {
            "kind": "Var",
            "name": "failed",
            "printedName": "failed",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Nimble.ToSucceedResult.Type) -> (Swift.String) -> Nimble.ToSucceedResult",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(Swift.String) -> Nimble.ToSucceedResult",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ToSucceedResult",
                        "printedName": "Nimble.ToSucceedResult",
                        "usr": "s:6Nimble15ToSucceedResultO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Tuple",
                        "printedName": "(reason: Swift.String)",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "String",
                            "printedName": "Swift.String",
                            "usr": "s:SS"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "Nimble.ToSucceedResult.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ToSucceedResult",
                        "printedName": "Nimble.ToSucceedResult",
                        "usr": "s:6Nimble15ToSucceedResultO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:6Nimble15ToSucceedResultO6failedyACSS_tcACmF",
            "mangledName": "$s6Nimble15ToSucceedResultO6failedyACSS_tcACmF",
            "moduleName": "Nimble"
          }
        ],
        "declKind": "Enum",
        "usr": "s:6Nimble15ToSucceedResultO",
        "mangledName": "$s6Nimble15ToSucceedResultO",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ]
      },
      {
        "kind": "Function",
        "name": "succeed",
        "printedName": "succeed()",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<Nimble.ToSucceedResult>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "ToSucceedResult",
                "printedName": "Nimble.ToSucceedResult",
                "usr": "s:6Nimble15ToSucceedResultO"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble7succeedAA9PredicateVyAA15ToSucceedResultOGyF",
        "mangledName": "$s6Nimble7succeedAA9PredicateVyAA15ToSucceedResultOGyF",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "Function",
        "name": "beTrue",
        "printedName": "beTrue()",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<Swift.Bool>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble6beTrueAA9PredicateVySbGyF",
        "mangledName": "$s6Nimble6beTrueAA9PredicateVySbGyF",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "beFalse",
        "printedName": "beFalse()",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<Swift.Bool>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble7beFalseAA9PredicateVySbGyF",
        "mangledName": "$s6Nimble7beFalseAA9PredicateVySbGyF",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "beTruthy",
        "printedName": "beTruthy()",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble8beTruthyAA9PredicateVyxGySQRzs27ExpressibleByBooleanLiteralRzlF",
        "mangledName": "$s6Nimble8beTruthyAA9PredicateVyxGySQRzs27ExpressibleByBooleanLiteralRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Equatable, τ_0_0 : Swift.ExpressibleByBooleanLiteral>",
        "sugared_genericSig": "<T where T : Swift.Equatable, T : Swift.ExpressibleByBooleanLiteral>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "beFalsy",
        "printedName": "beFalsy()",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble7beFalsyAA9PredicateVyxGySQRzs27ExpressibleByBooleanLiteralRzlF",
        "mangledName": "$s6Nimble7beFalsyAA9PredicateVyxGySQRzs27ExpressibleByBooleanLiteralRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Equatable, τ_0_0 : Swift.ExpressibleByBooleanLiteral>",
        "sugared_genericSig": "<T where T : Swift.Equatable, T : Swift.ExpressibleByBooleanLiteral>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "TypeDecl",
        "name": "NMBExpectation",
        "printedName": "NMBExpectation",
        "children": [
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(actualBlock:negative:file:line:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBExpectation",
                "printedName": "Nimble.NMBExpectation",
                "usr": "c:@M@Nimble@objc(cs)NMBExpectation"
              },
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "() -> ObjectiveC.NSObject?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "ObjectiveC.NSObject?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "NSObject",
                        "printedName": "ObjectiveC.NSObject",
                        "usr": "c:objc(cs)NSObject"
                      }
                    ],
                    "usr": "s:Sq"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ]
              },
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt",
                "printedName": "Swift.UInt",
                "usr": "s:Su"
              }
            ],
            "declKind": "Constructor",
            "usr": "c:@M@Nimble@objc(cs)NMBExpectation(im)initWithActualBlock:negative:file:line:",
            "mangledName": "$s6Nimble14NMBExpectationC11actualBlock8negative4file4lineACSo8NSObjectCSgyc_SbSSSutcfc",
            "moduleName": "Nimble",
            "objc_name": "initWithActualBlock:negative:file:line:",
            "declAttributes": [
              "AccessControl",
              "ObjC"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Var",
            "name": "withTimeout",
            "printedName": "withTimeout",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Swift.Double) -> Nimble.NMBExpectation",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NMBExpectation",
                    "printedName": "Nimble.NMBExpectation",
                    "usr": "c:@M@Nimble@objc(cs)NMBExpectation"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Double",
                    "printedName": "Swift.Double",
                    "usr": "s:Sd"
                  }
                ]
              }
            ],
            "declKind": "Var",
            "usr": "c:@M@Nimble@objc(cs)NMBExpectation(py)withTimeout",
            "mangledName": "$s6Nimble14NMBExpectationC11withTimeoutyACSdcvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl",
              "ObjC"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(Swift.Double) -> Nimble.NMBExpectation",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "NMBExpectation",
                        "printedName": "Nimble.NMBExpectation",
                        "usr": "c:@M@Nimble@objc(cs)NMBExpectation"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Double",
                        "printedName": "Swift.Double",
                        "usr": "s:Sd"
                      }
                    ]
                  }
                ],
                "declKind": "Accessor",
                "usr": "c:@M@Nimble@objc(cs)NMBExpectation(im)withTimeout",
                "mangledName": "$s6Nimble14NMBExpectationC11withTimeoutyACSdcvg",
                "moduleName": "Nimble",
                "declAttributes": [
                  "ObjC"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "to",
            "printedName": "to",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Nimble.NMBPredicate) -> Nimble.NMBExpectation",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NMBExpectation",
                    "printedName": "Nimble.NMBExpectation",
                    "usr": "c:@M@Nimble@objc(cs)NMBExpectation"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "NMBPredicate",
                    "printedName": "Nimble.NMBPredicate",
                    "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                  }
                ]
              }
            ],
            "declKind": "Var",
            "usr": "c:@M@Nimble@objc(cs)NMBExpectation(py)to",
            "mangledName": "$s6Nimble14NMBExpectationC2toyAcA12NMBPredicateCcvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl",
              "ObjC"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(Nimble.NMBPredicate) -> Nimble.NMBExpectation",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "NMBExpectation",
                        "printedName": "Nimble.NMBExpectation",
                        "usr": "c:@M@Nimble@objc(cs)NMBExpectation"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "NMBPredicate",
                        "printedName": "Nimble.NMBPredicate",
                        "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                      }
                    ]
                  }
                ],
                "declKind": "Accessor",
                "usr": "c:@M@Nimble@objc(cs)NMBExpectation(im)to",
                "mangledName": "$s6Nimble14NMBExpectationC2toyAcA12NMBPredicateCcvg",
                "moduleName": "Nimble",
                "declAttributes": [
                  "ObjC"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "toWithDescription",
            "printedName": "toWithDescription",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Nimble.NMBPredicate, Swift.String) -> Nimble.NMBExpectation",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NMBExpectation",
                    "printedName": "Nimble.NMBExpectation",
                    "usr": "c:@M@Nimble@objc(cs)NMBExpectation"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Tuple",
                    "printedName": "(Nimble.NMBPredicate, Swift.String)",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "NMBPredicate",
                        "printedName": "Nimble.NMBPredicate",
                        "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "String",
                        "printedName": "Swift.String",
                        "usr": "s:SS"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "Var",
            "usr": "c:@M@Nimble@objc(cs)NMBExpectation(py)toWithDescription",
            "mangledName": "$s6Nimble14NMBExpectationC17toWithDescriptionyAcA12NMBPredicateC_SStcvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl",
              "ObjC"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(Nimble.NMBPredicate, Swift.String) -> Nimble.NMBExpectation",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "NMBExpectation",
                        "printedName": "Nimble.NMBExpectation",
                        "usr": "c:@M@Nimble@objc(cs)NMBExpectation"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Tuple",
                        "printedName": "(Nimble.NMBPredicate, Swift.String)",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "NMBPredicate",
                            "printedName": "Nimble.NMBPredicate",
                            "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "String",
                            "printedName": "Swift.String",
                            "usr": "s:SS"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "declKind": "Accessor",
                "usr": "c:@M@Nimble@objc(cs)NMBExpectation(im)toWithDescription",
                "mangledName": "$s6Nimble14NMBExpectationC17toWithDescriptionyAcA12NMBPredicateC_SStcvg",
                "moduleName": "Nimble",
                "declAttributes": [
                  "ObjC"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "toNot",
            "printedName": "toNot",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Nimble.NMBPredicate) -> Nimble.NMBExpectation",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NMBExpectation",
                    "printedName": "Nimble.NMBExpectation",
                    "usr": "c:@M@Nimble@objc(cs)NMBExpectation"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "NMBPredicate",
                    "printedName": "Nimble.NMBPredicate",
                    "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                  }
                ]
              }
            ],
            "declKind": "Var",
            "usr": "c:@M@Nimble@objc(cs)NMBExpectation(py)toNot",
            "mangledName": "$s6Nimble14NMBExpectationC5toNotyAcA12NMBPredicateCcvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl",
              "ObjC"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(Nimble.NMBPredicate) -> Nimble.NMBExpectation",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "NMBExpectation",
                        "printedName": "Nimble.NMBExpectation",
                        "usr": "c:@M@Nimble@objc(cs)NMBExpectation"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "NMBPredicate",
                        "printedName": "Nimble.NMBPredicate",
                        "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                      }
                    ]
                  }
                ],
                "declKind": "Accessor",
                "usr": "c:@M@Nimble@objc(cs)NMBExpectation(im)toNot",
                "mangledName": "$s6Nimble14NMBExpectationC5toNotyAcA12NMBPredicateCcvg",
                "moduleName": "Nimble",
                "declAttributes": [
                  "ObjC"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "toNotWithDescription",
            "printedName": "toNotWithDescription",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Nimble.NMBPredicate, Swift.String) -> Nimble.NMBExpectation",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NMBExpectation",
                    "printedName": "Nimble.NMBExpectation",
                    "usr": "c:@M@Nimble@objc(cs)NMBExpectation"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Tuple",
                    "printedName": "(Nimble.NMBPredicate, Swift.String)",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "NMBPredicate",
                        "printedName": "Nimble.NMBPredicate",
                        "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "String",
                        "printedName": "Swift.String",
                        "usr": "s:SS"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "Var",
            "usr": "c:@M@Nimble@objc(cs)NMBExpectation(py)toNotWithDescription",
            "mangledName": "$s6Nimble14NMBExpectationC20toNotWithDescriptionyAcA12NMBPredicateC_SStcvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl",
              "ObjC"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(Nimble.NMBPredicate, Swift.String) -> Nimble.NMBExpectation",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "NMBExpectation",
                        "printedName": "Nimble.NMBExpectation",
                        "usr": "c:@M@Nimble@objc(cs)NMBExpectation"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Tuple",
                        "printedName": "(Nimble.NMBPredicate, Swift.String)",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "NMBPredicate",
                            "printedName": "Nimble.NMBPredicate",
                            "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "String",
                            "printedName": "Swift.String",
                            "usr": "s:SS"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "declKind": "Accessor",
                "usr": "c:@M@Nimble@objc(cs)NMBExpectation(im)toNotWithDescription",
                "mangledName": "$s6Nimble14NMBExpectationC20toNotWithDescriptionyAcA12NMBPredicateC_SStcvg",
                "moduleName": "Nimble",
                "declAttributes": [
                  "ObjC"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "notTo",
            "printedName": "notTo",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Nimble.NMBPredicate) -> Nimble.NMBExpectation",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NMBExpectation",
                    "printedName": "Nimble.NMBExpectation",
                    "usr": "c:@M@Nimble@objc(cs)NMBExpectation"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "NMBPredicate",
                    "printedName": "Nimble.NMBPredicate",
                    "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                  }
                ]
              }
            ],
            "declKind": "Var",
            "usr": "c:@M@Nimble@objc(cs)NMBExpectation(py)notTo",
            "mangledName": "$s6Nimble14NMBExpectationC5notToyAcA12NMBPredicateCcvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl",
              "ObjC"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(Nimble.NMBPredicate) -> Nimble.NMBExpectation",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "NMBExpectation",
                        "printedName": "Nimble.NMBExpectation",
                        "usr": "c:@M@Nimble@objc(cs)NMBExpectation"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "NMBPredicate",
                        "printedName": "Nimble.NMBPredicate",
                        "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                      }
                    ]
                  }
                ],
                "declKind": "Accessor",
                "usr": "c:@M@Nimble@objc(cs)NMBExpectation(im)notTo",
                "mangledName": "$s6Nimble14NMBExpectationC5notToyAcA12NMBPredicateCcvg",
                "moduleName": "Nimble",
                "declAttributes": [
                  "ObjC"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "notToWithDescription",
            "printedName": "notToWithDescription",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Nimble.NMBPredicate, Swift.String) -> Nimble.NMBExpectation",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NMBExpectation",
                    "printedName": "Nimble.NMBExpectation",
                    "usr": "c:@M@Nimble@objc(cs)NMBExpectation"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Tuple",
                    "printedName": "(Nimble.NMBPredicate, Swift.String)",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "NMBPredicate",
                        "printedName": "Nimble.NMBPredicate",
                        "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "String",
                        "printedName": "Swift.String",
                        "usr": "s:SS"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "Var",
            "usr": "c:@M@Nimble@objc(cs)NMBExpectation(py)notToWithDescription",
            "mangledName": "$s6Nimble14NMBExpectationC20notToWithDescriptionyAcA12NMBPredicateC_SStcvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl",
              "ObjC"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(Nimble.NMBPredicate, Swift.String) -> Nimble.NMBExpectation",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "NMBExpectation",
                        "printedName": "Nimble.NMBExpectation",
                        "usr": "c:@M@Nimble@objc(cs)NMBExpectation"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Tuple",
                        "printedName": "(Nimble.NMBPredicate, Swift.String)",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "NMBPredicate",
                            "printedName": "Nimble.NMBPredicate",
                            "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "String",
                            "printedName": "Swift.String",
                            "usr": "s:SS"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "declKind": "Accessor",
                "usr": "c:@M@Nimble@objc(cs)NMBExpectation(im)notToWithDescription",
                "mangledName": "$s6Nimble14NMBExpectationC20notToWithDescriptionyAcA12NMBPredicateC_SStcvg",
                "moduleName": "Nimble",
                "declAttributes": [
                  "ObjC"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "toEventually",
            "printedName": "toEventually",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Nimble.NMBPredicate) -> ()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "NMBPredicate",
                    "printedName": "Nimble.NMBPredicate",
                    "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                  }
                ]
              }
            ],
            "declKind": "Var",
            "usr": "c:@M@Nimble@objc(cs)NMBExpectation(py)toEventually",
            "mangledName": "$s6Nimble14NMBExpectationC12toEventuallyyyAA12NMBPredicateCcvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl",
              "ObjC"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(Nimble.NMBPredicate) -> ()",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Void",
                        "printedName": "()"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "NMBPredicate",
                        "printedName": "Nimble.NMBPredicate",
                        "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                      }
                    ]
                  }
                ],
                "declKind": "Accessor",
                "usr": "c:@M@Nimble@objc(cs)NMBExpectation(im)toEventually",
                "mangledName": "$s6Nimble14NMBExpectationC12toEventuallyyyAA12NMBPredicateCcvg",
                "moduleName": "Nimble",
                "declAttributes": [
                  "ObjC"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "toEventuallyWithDescription",
            "printedName": "toEventuallyWithDescription",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Nimble.NMBPredicate, Swift.String) -> ()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Tuple",
                    "printedName": "(Nimble.NMBPredicate, Swift.String)",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "NMBPredicate",
                        "printedName": "Nimble.NMBPredicate",
                        "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "String",
                        "printedName": "Swift.String",
                        "usr": "s:SS"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "Var",
            "usr": "c:@M@Nimble@objc(cs)NMBExpectation(py)toEventuallyWithDescription",
            "mangledName": "$s6Nimble14NMBExpectationC27toEventuallyWithDescriptionyyAA12NMBPredicateC_SStcvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl",
              "ObjC"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(Nimble.NMBPredicate, Swift.String) -> ()",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Void",
                        "printedName": "()"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Tuple",
                        "printedName": "(Nimble.NMBPredicate, Swift.String)",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "NMBPredicate",
                            "printedName": "Nimble.NMBPredicate",
                            "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "String",
                            "printedName": "Swift.String",
                            "usr": "s:SS"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "declKind": "Accessor",
                "usr": "c:@M@Nimble@objc(cs)NMBExpectation(im)toEventuallyWithDescription",
                "mangledName": "$s6Nimble14NMBExpectationC27toEventuallyWithDescriptionyyAA12NMBPredicateC_SStcvg",
                "moduleName": "Nimble",
                "declAttributes": [
                  "ObjC"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "toEventuallyNot",
            "printedName": "toEventuallyNot",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Nimble.NMBPredicate) -> ()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "NMBPredicate",
                    "printedName": "Nimble.NMBPredicate",
                    "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                  }
                ]
              }
            ],
            "declKind": "Var",
            "usr": "c:@M@Nimble@objc(cs)NMBExpectation(py)toEventuallyNot",
            "mangledName": "$s6Nimble14NMBExpectationC15toEventuallyNotyyAA12NMBPredicateCcvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl",
              "ObjC"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(Nimble.NMBPredicate) -> ()",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Void",
                        "printedName": "()"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "NMBPredicate",
                        "printedName": "Nimble.NMBPredicate",
                        "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                      }
                    ]
                  }
                ],
                "declKind": "Accessor",
                "usr": "c:@M@Nimble@objc(cs)NMBExpectation(im)toEventuallyNot",
                "mangledName": "$s6Nimble14NMBExpectationC15toEventuallyNotyyAA12NMBPredicateCcvg",
                "moduleName": "Nimble",
                "declAttributes": [
                  "ObjC"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "toEventuallyNotWithDescription",
            "printedName": "toEventuallyNotWithDescription",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Nimble.NMBPredicate, Swift.String) -> ()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Tuple",
                    "printedName": "(Nimble.NMBPredicate, Swift.String)",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "NMBPredicate",
                        "printedName": "Nimble.NMBPredicate",
                        "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "String",
                        "printedName": "Swift.String",
                        "usr": "s:SS"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "Var",
            "usr": "c:@M@Nimble@objc(cs)NMBExpectation(py)toEventuallyNotWithDescription",
            "mangledName": "$s6Nimble14NMBExpectationC30toEventuallyNotWithDescriptionyyAA12NMBPredicateC_SStcvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl",
              "ObjC"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(Nimble.NMBPredicate, Swift.String) -> ()",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Void",
                        "printedName": "()"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Tuple",
                        "printedName": "(Nimble.NMBPredicate, Swift.String)",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "NMBPredicate",
                            "printedName": "Nimble.NMBPredicate",
                            "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "String",
                            "printedName": "Swift.String",
                            "usr": "s:SS"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "declKind": "Accessor",
                "usr": "c:@M@Nimble@objc(cs)NMBExpectation(im)toEventuallyNotWithDescription",
                "mangledName": "$s6Nimble14NMBExpectationC30toEventuallyNotWithDescriptionyyAA12NMBPredicateC_SStcvg",
                "moduleName": "Nimble",
                "declAttributes": [
                  "ObjC"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "toNotEventually",
            "printedName": "toNotEventually",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Nimble.NMBPredicate) -> ()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "NMBPredicate",
                    "printedName": "Nimble.NMBPredicate",
                    "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                  }
                ]
              }
            ],
            "declKind": "Var",
            "usr": "c:@M@Nimble@objc(cs)NMBExpectation(py)toNotEventually",
            "mangledName": "$s6Nimble14NMBExpectationC15toNotEventuallyyyAA12NMBPredicateCcvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl",
              "ObjC"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(Nimble.NMBPredicate) -> ()",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Void",
                        "printedName": "()"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "NMBPredicate",
                        "printedName": "Nimble.NMBPredicate",
                        "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                      }
                    ]
                  }
                ],
                "declKind": "Accessor",
                "usr": "c:@M@Nimble@objc(cs)NMBExpectation(im)toNotEventually",
                "mangledName": "$s6Nimble14NMBExpectationC15toNotEventuallyyyAA12NMBPredicateCcvg",
                "moduleName": "Nimble",
                "declAttributes": [
                  "ObjC"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "toNotEventuallyWithDescription",
            "printedName": "toNotEventuallyWithDescription",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Nimble.NMBPredicate, Swift.String) -> ()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Tuple",
                    "printedName": "(Nimble.NMBPredicate, Swift.String)",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "NMBPredicate",
                        "printedName": "Nimble.NMBPredicate",
                        "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "String",
                        "printedName": "Swift.String",
                        "usr": "s:SS"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "Var",
            "usr": "c:@M@Nimble@objc(cs)NMBExpectation(py)toNotEventuallyWithDescription",
            "mangledName": "$s6Nimble14NMBExpectationC30toNotEventuallyWithDescriptionyyAA12NMBPredicateC_SStcvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl",
              "ObjC"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(Nimble.NMBPredicate, Swift.String) -> ()",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Void",
                        "printedName": "()"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Tuple",
                        "printedName": "(Nimble.NMBPredicate, Swift.String)",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "NMBPredicate",
                            "printedName": "Nimble.NMBPredicate",
                            "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "String",
                            "printedName": "Swift.String",
                            "usr": "s:SS"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "declKind": "Accessor",
                "usr": "c:@M@Nimble@objc(cs)NMBExpectation(im)toNotEventuallyWithDescription",
                "mangledName": "$s6Nimble14NMBExpectationC30toNotEventuallyWithDescriptionyyAA12NMBPredicateC_SStcvg",
                "moduleName": "Nimble",
                "declAttributes": [
                  "ObjC"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "toNever",
            "printedName": "toNever",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Nimble.NMBPredicate) -> ()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "NMBPredicate",
                    "printedName": "Nimble.NMBPredicate",
                    "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                  }
                ]
              }
            ],
            "declKind": "Var",
            "usr": "c:@M@Nimble@objc(cs)NMBExpectation(py)toNever",
            "mangledName": "$s6Nimble14NMBExpectationC7toNeveryyAA12NMBPredicateCcvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl",
              "ObjC"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(Nimble.NMBPredicate) -> ()",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Void",
                        "printedName": "()"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "NMBPredicate",
                        "printedName": "Nimble.NMBPredicate",
                        "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                      }
                    ]
                  }
                ],
                "declKind": "Accessor",
                "usr": "c:@M@Nimble@objc(cs)NMBExpectation(im)toNever",
                "mangledName": "$s6Nimble14NMBExpectationC7toNeveryyAA12NMBPredicateCcvg",
                "moduleName": "Nimble",
                "declAttributes": [
                  "ObjC"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "toNeverWithDescription",
            "printedName": "toNeverWithDescription",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Nimble.NMBPredicate, Swift.String) -> ()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Tuple",
                    "printedName": "(Nimble.NMBPredicate, Swift.String)",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "NMBPredicate",
                        "printedName": "Nimble.NMBPredicate",
                        "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "String",
                        "printedName": "Swift.String",
                        "usr": "s:SS"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "Var",
            "usr": "c:@M@Nimble@objc(cs)NMBExpectation(py)toNeverWithDescription",
            "mangledName": "$s6Nimble14NMBExpectationC22toNeverWithDescriptionyyAA12NMBPredicateC_SStcvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl",
              "ObjC"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(Nimble.NMBPredicate, Swift.String) -> ()",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Void",
                        "printedName": "()"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Tuple",
                        "printedName": "(Nimble.NMBPredicate, Swift.String)",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "NMBPredicate",
                            "printedName": "Nimble.NMBPredicate",
                            "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "String",
                            "printedName": "Swift.String",
                            "usr": "s:SS"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "declKind": "Accessor",
                "usr": "c:@M@Nimble@objc(cs)NMBExpectation(im)toNeverWithDescription",
                "mangledName": "$s6Nimble14NMBExpectationC22toNeverWithDescriptionyyAA12NMBPredicateC_SStcvg",
                "moduleName": "Nimble",
                "declAttributes": [
                  "ObjC"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "neverTo",
            "printedName": "neverTo",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Nimble.NMBPredicate) -> ()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "NMBPredicate",
                    "printedName": "Nimble.NMBPredicate",
                    "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                  }
                ]
              }
            ],
            "declKind": "Var",
            "usr": "c:@M@Nimble@objc(cs)NMBExpectation(py)neverTo",
            "mangledName": "$s6Nimble14NMBExpectationC7neverToyyAA12NMBPredicateCcvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl",
              "ObjC"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(Nimble.NMBPredicate) -> ()",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Void",
                        "printedName": "()"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "NMBPredicate",
                        "printedName": "Nimble.NMBPredicate",
                        "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                      }
                    ]
                  }
                ],
                "declKind": "Accessor",
                "usr": "c:@M@Nimble@objc(cs)NMBExpectation(im)neverTo",
                "mangledName": "$s6Nimble14NMBExpectationC7neverToyyAA12NMBPredicateCcvg",
                "moduleName": "Nimble",
                "declAttributes": [
                  "ObjC"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "neverToWithDescription",
            "printedName": "neverToWithDescription",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Nimble.NMBPredicate, Swift.String) -> ()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Tuple",
                    "printedName": "(Nimble.NMBPredicate, Swift.String)",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "NMBPredicate",
                        "printedName": "Nimble.NMBPredicate",
                        "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "String",
                        "printedName": "Swift.String",
                        "usr": "s:SS"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "Var",
            "usr": "c:@M@Nimble@objc(cs)NMBExpectation(py)neverToWithDescription",
            "mangledName": "$s6Nimble14NMBExpectationC22neverToWithDescriptionyyAA12NMBPredicateC_SStcvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl",
              "ObjC"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(Nimble.NMBPredicate, Swift.String) -> ()",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Void",
                        "printedName": "()"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Tuple",
                        "printedName": "(Nimble.NMBPredicate, Swift.String)",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "NMBPredicate",
                            "printedName": "Nimble.NMBPredicate",
                            "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "String",
                            "printedName": "Swift.String",
                            "usr": "s:SS"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "declKind": "Accessor",
                "usr": "c:@M@Nimble@objc(cs)NMBExpectation(im)neverToWithDescription",
                "mangledName": "$s6Nimble14NMBExpectationC22neverToWithDescriptionyyAA12NMBPredicateC_SStcvg",
                "moduleName": "Nimble",
                "declAttributes": [
                  "ObjC"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "toAlways",
            "printedName": "toAlways",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Nimble.NMBPredicate) -> ()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "NMBPredicate",
                    "printedName": "Nimble.NMBPredicate",
                    "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                  }
                ]
              }
            ],
            "declKind": "Var",
            "usr": "c:@M@Nimble@objc(cs)NMBExpectation(py)toAlways",
            "mangledName": "$s6Nimble14NMBExpectationC8toAlwaysyyAA12NMBPredicateCcvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl",
              "ObjC"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(Nimble.NMBPredicate) -> ()",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Void",
                        "printedName": "()"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "NMBPredicate",
                        "printedName": "Nimble.NMBPredicate",
                        "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                      }
                    ]
                  }
                ],
                "declKind": "Accessor",
                "usr": "c:@M@Nimble@objc(cs)NMBExpectation(im)toAlways",
                "mangledName": "$s6Nimble14NMBExpectationC8toAlwaysyyAA12NMBPredicateCcvg",
                "moduleName": "Nimble",
                "declAttributes": [
                  "ObjC"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "toAlwaysWithDescription",
            "printedName": "toAlwaysWithDescription",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Nimble.NMBPredicate, Swift.String) -> ()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Tuple",
                    "printedName": "(Nimble.NMBPredicate, Swift.String)",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "NMBPredicate",
                        "printedName": "Nimble.NMBPredicate",
                        "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "String",
                        "printedName": "Swift.String",
                        "usr": "s:SS"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "Var",
            "usr": "c:@M@Nimble@objc(cs)NMBExpectation(py)toAlwaysWithDescription",
            "mangledName": "$s6Nimble14NMBExpectationC23toAlwaysWithDescriptionyyAA12NMBPredicateC_SStcvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl",
              "ObjC"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(Nimble.NMBPredicate, Swift.String) -> ()",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Void",
                        "printedName": "()"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Tuple",
                        "printedName": "(Nimble.NMBPredicate, Swift.String)",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "NMBPredicate",
                            "printedName": "Nimble.NMBPredicate",
                            "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "String",
                            "printedName": "Swift.String",
                            "usr": "s:SS"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "declKind": "Accessor",
                "usr": "c:@M@Nimble@objc(cs)NMBExpectation(im)toAlwaysWithDescription",
                "mangledName": "$s6Nimble14NMBExpectationC23toAlwaysWithDescriptionyyAA12NMBPredicateC_SStcvg",
                "moduleName": "Nimble",
                "declAttributes": [
                  "ObjC"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "alwaysTo",
            "printedName": "alwaysTo",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Nimble.NMBPredicate) -> ()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "NMBPredicate",
                    "printedName": "Nimble.NMBPredicate",
                    "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                  }
                ]
              }
            ],
            "declKind": "Var",
            "usr": "c:@M@Nimble@objc(cs)NMBExpectation(py)alwaysTo",
            "mangledName": "$s6Nimble14NMBExpectationC8alwaysToyyAA12NMBPredicateCcvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl",
              "ObjC"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(Nimble.NMBPredicate) -> ()",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Void",
                        "printedName": "()"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "NMBPredicate",
                        "printedName": "Nimble.NMBPredicate",
                        "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                      }
                    ]
                  }
                ],
                "declKind": "Accessor",
                "usr": "c:@M@Nimble@objc(cs)NMBExpectation(im)alwaysTo",
                "mangledName": "$s6Nimble14NMBExpectationC8alwaysToyyAA12NMBPredicateCcvg",
                "moduleName": "Nimble",
                "declAttributes": [
                  "ObjC"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "alwaysToWithDescription",
            "printedName": "alwaysToWithDescription",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Nimble.NMBPredicate, Swift.String) -> ()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Tuple",
                    "printedName": "(Nimble.NMBPredicate, Swift.String)",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "NMBPredicate",
                        "printedName": "Nimble.NMBPredicate",
                        "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "String",
                        "printedName": "Swift.String",
                        "usr": "s:SS"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "Var",
            "usr": "c:@M@Nimble@objc(cs)NMBExpectation(py)alwaysToWithDescription",
            "mangledName": "$s6Nimble14NMBExpectationC23alwaysToWithDescriptionyyAA12NMBPredicateC_SStcvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl",
              "ObjC"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(Nimble.NMBPredicate, Swift.String) -> ()",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Void",
                        "printedName": "()"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Tuple",
                        "printedName": "(Nimble.NMBPredicate, Swift.String)",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "NMBPredicate",
                            "printedName": "Nimble.NMBPredicate",
                            "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "String",
                            "printedName": "Swift.String",
                            "usr": "s:SS"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "declKind": "Accessor",
                "usr": "c:@M@Nimble@objc(cs)NMBExpectation(im)alwaysToWithDescription",
                "mangledName": "$s6Nimble14NMBExpectationC23alwaysToWithDescriptionyyAA12NMBPredicateC_SStcvg",
                "moduleName": "Nimble",
                "declAttributes": [
                  "ObjC"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Function",
            "name": "failWithMessage",
            "printedName": "failWithMessage(_:file:line:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt",
                "printedName": "Swift.UInt",
                "usr": "s:Su"
              }
            ],
            "declKind": "Func",
            "usr": "c:@M@Nimble@objc(cs)NMBExpectation(cm)failWithMessage:file:line:",
            "mangledName": "$s6Nimble14NMBExpectationC15failWithMessage_4file4lineySS_SSSutFZ",
            "moduleName": "Nimble",
            "static": true,
            "declAttributes": [
              "AccessControl",
              "ObjC"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBExpectation",
                "printedName": "Nimble.NMBExpectation",
                "usr": "c:@M@Nimble@objc(cs)NMBExpectation"
              }
            ],
            "declKind": "Constructor",
            "usr": "c:@M@Nimble@objc(cs)NMBExpectation(im)init",
            "mangledName": "$s6Nimble14NMBExpectationCACycfc",
            "moduleName": "Nimble",
            "overriding": true,
            "implicit": true,
            "objc_name": "init",
            "declAttributes": [
              "Dynamic",
              "ObjC",
              "Override"
            ],
            "init_kind": "Designated"
          }
        ],
        "declKind": "Class",
        "usr": "c:@M@Nimble@objc(cs)NMBExpectation",
        "mangledName": "$s6Nimble14NMBExpectationC",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "RawDocComment",
          "ObjC"
        ],
        "superclassUsr": "c:objc(cs)NSObject",
        "superclassNames": [
          "ObjectiveC.NSObject"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObservingPublishing",
            "printedName": "_KeyValueCodingAndObservingPublishing",
            "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
            "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObserving",
            "printedName": "_KeyValueCodingAndObserving",
            "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
            "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "Dispatch",
        "printedName": "Dispatch",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "TypeDecl",
        "name": "NMBWait",
        "printedName": "NMBWait",
        "children": [
          {
            "kind": "Function",
            "name": "until",
            "printedName": "until(timeout:file:line:action:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Double",
                "printedName": "Swift.Double",
                "usr": "s:Sd"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "hasDefaultArg": true,
                "usr": "s:SS"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt",
                "printedName": "Swift.UInt",
                "hasDefaultArg": true,
                "usr": "s:Su"
              },
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(@escaping () -> ()) -> ()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "() -> ()",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Void",
                        "printedName": "()"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Void",
                        "printedName": "()"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "Func",
            "usr": "c:@M@Nimble@objc(cs)NMBWait(cm)untilTimeout:file:line:action:",
            "mangledName": "$s6Nimble7NMBWaitC5until7timeout4file4line6actionySd_SSSuyyycctFZ",
            "moduleName": "Nimble",
            "static": true,
            "objc_name": "untilTimeout:file:line:action:",
            "declAttributes": [
              "AccessControl",
              "ObjC"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "until",
            "printedName": "until(timeout:file:line:action:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "NimbleTimeInterval",
                "printedName": "Nimble.NimbleTimeInterval",
                "usr": "s:6Nimble0A12TimeIntervalO"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "hasDefaultArg": true,
                "usr": "s:SS"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt",
                "printedName": "Swift.UInt",
                "hasDefaultArg": true,
                "usr": "s:Su"
              },
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(@escaping () -> ()) -> ()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "() -> ()",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Void",
                        "printedName": "()"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Void",
                        "printedName": "()"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble7NMBWaitC5until7timeout4file4line6actionyAA0A12TimeIntervalO_SSSuyyycctFZ",
            "mangledName": "$s6Nimble7NMBWaitC5until7timeout4file4line6actionyAA0A12TimeIntervalO_SSSuyyycctFZ",
            "moduleName": "Nimble",
            "static": true,
            "declAttributes": [
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "throwableUntil",
            "printedName": "throwableUntil(timeout:file:line:action:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "NimbleTimeInterval",
                "printedName": "Nimble.NimbleTimeInterval",
                "usr": "s:6Nimble0A12TimeIntervalO"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "hasDefaultArg": true,
                "usr": "s:SS"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt",
                "printedName": "Swift.UInt",
                "hasDefaultArg": true,
                "usr": "s:Su"
              },
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(@escaping () -> ()) throws -> ()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "() -> ()",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Void",
                        "printedName": "()"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Void",
                        "printedName": "()"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble7NMBWaitC14throwableUntil7timeout4file4line6actionyAA0A12TimeIntervalO_SSSuyyycKctFZ",
            "mangledName": "$s6Nimble7NMBWaitC14throwableUntil7timeout4file4line6actionyAA0A12TimeIntervalO_SSSuyyycKctFZ",
            "moduleName": "Nimble",
            "static": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "until",
            "printedName": "until(_:line:action:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "hasDefaultArg": true,
                "usr": "s:SS"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt",
                "printedName": "Swift.UInt",
                "hasDefaultArg": true,
                "usr": "s:Su"
              },
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(@escaping () -> ()) -> ()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "() -> ()",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Void",
                        "printedName": "()"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Void",
                        "printedName": "()"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "Func",
            "usr": "c:@M@Nimble@objc(cs)NMBWait(cm)untilFile:line:action:",
            "mangledName": "$s6Nimble7NMBWaitC5until_4line6actionySS_SuyyycctFZ",
            "moduleName": "Nimble",
            "static": true,
            "objc_name": "untilFile:line:action:",
            "declAttributes": [
              "AccessControl",
              "ObjC"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBWait",
                "printedName": "Nimble.NMBWait",
                "usr": "c:@M@Nimble@objc(cs)NMBWait"
              }
            ],
            "declKind": "Constructor",
            "usr": "c:@M@Nimble@objc(cs)NMBWait(im)init",
            "mangledName": "$s6Nimble7NMBWaitCACycfc",
            "moduleName": "Nimble",
            "overriding": true,
            "implicit": true,
            "objc_name": "init",
            "declAttributes": [
              "Dynamic",
              "ObjC",
              "Override"
            ],
            "init_kind": "Designated"
          }
        ],
        "declKind": "Class",
        "usr": "c:@M@Nimble@objc(cs)NMBWait",
        "mangledName": "$s6Nimble7NMBWaitC",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "RawDocComment",
          "ObjC"
        ],
        "superclassUsr": "c:objc(cs)NSObject",
        "inheritsConvenienceInitializers": true,
        "superclassNames": [
          "ObjectiveC.NSObject"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObservingPublishing",
            "printedName": "_KeyValueCodingAndObservingPublishing",
            "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
            "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObserving",
            "printedName": "_KeyValueCodingAndObserving",
            "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
            "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          }
        ]
      },
      {
        "kind": "Function",
        "name": "waitUntil",
        "printedName": "waitUntil(timeout:file:line:action:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "NimbleTimeInterval",
            "printedName": "Nimble.NimbleTimeInterval",
            "hasDefaultArg": true,
            "usr": "s:6Nimble0A12TimeIntervalO"
          },
          {
            "kind": "TypeNominal",
            "name": "String",
            "printedName": "Swift.String",
            "hasDefaultArg": true,
            "usr": "s:SS"
          },
          {
            "kind": "TypeNominal",
            "name": "UInt",
            "printedName": "Swift.UInt",
            "hasDefaultArg": true,
            "usr": "s:Su"
          },
          {
            "kind": "TypeFunc",
            "name": "Function",
            "printedName": "(@escaping () -> ()) -> ()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "() -> ()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ]
              }
            ]
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble9waitUntil7timeout4file4line6actionyAA0A12TimeIntervalO_SSSuyyycctF",
        "mangledName": "$s6Nimble9waitUntil7timeout4file4line6actionyAA0A12TimeIntervalO_SSSuyyycctF",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "Available",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "allPass",
        "printedName": "allPass(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeFunc",
            "name": "Function",
            "printedName": "(τ_0_0.Element) throws -> Swift.Bool",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              },
              {
                "kind": "TypeNominal",
                "name": "DependentMember",
                "printedName": "τ_0_0.Element"
              }
            ]
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble7allPassyAA9PredicateVyxGSb7ElementQzKcSTRzlF",
        "mangledName": "$s6Nimble7allPassyAA9PredicateVyxGSb7ElementQzKcSTRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Sequence>",
        "sugared_genericSig": "<S where S : Swift.Sequence>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "allPass",
        "printedName": "allPass(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "String",
            "printedName": "Swift.String",
            "usr": "s:SS"
          },
          {
            "kind": "TypeFunc",
            "name": "Function",
            "printedName": "(τ_0_0.Element) throws -> Swift.Bool",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              },
              {
                "kind": "TypeNominal",
                "name": "DependentMember",
                "printedName": "τ_0_0.Element"
              }
            ]
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble7allPassyAA9PredicateVyxGSS_Sb7ElementQzKctSTRzlF",
        "mangledName": "$s6Nimble7allPassyAA9PredicateVyxGSS_Sb7ElementQzKctSTRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Sequence>",
        "sugared_genericSig": "<S where S : Swift.Sequence>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "allPass",
        "printedName": "allPass(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<τ_0_0.Element>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "DependentMember",
                "printedName": "τ_0_0.Element"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble7allPassyAA9PredicateVyxGADy7ElementQzGSTRzlF",
        "mangledName": "$s6Nimble7allPassyAA9PredicateVyxGADy7ElementQzGSTRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Sequence>",
        "sugared_genericSig": "<S where S : Swift.Sequence>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "Function",
        "name": "beAKindOf",
        "printedName": "beAKindOf(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<Any>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "ProtocolComposition",
                "printedName": "Any"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "Metatype",
            "printedName": "τ_0_0.Type",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ]
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble9beAKindOfyAA9PredicateVyypGxmlF",
        "mangledName": "$s6Nimble9beAKindOfyAA9PredicateVyypGxmlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0>",
        "sugared_genericSig": "<T>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "Function",
        "name": "beAKindOf",
        "printedName": "beAKindOf(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<ObjectiveC.NSObject>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NSObject",
                "printedName": "ObjectiveC.NSObject",
                "usr": "c:objc(cs)NSObject"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "ExistentialMetatype",
            "printedName": "AnyObject.Type",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "ProtocolComposition",
                "printedName": "AnyObject"
              }
            ]
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble9beAKindOfyAA9PredicateVySo8NSObjectCGyXlXpF",
        "mangledName": "$s6Nimble9beAKindOfyAA9PredicateVySo8NSObjectCGyXlXpF",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "match",
        "printedName": "match(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<Swift.String>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "Swift.String?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble5matchyAA9PredicateVySSGSSSgF",
        "mangledName": "$s6Nimble5matchyAA9PredicateVySSGSSSgF",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "Function",
        "name": "beVoid",
        "printedName": "beVoid()",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<()>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble6beVoidAA9PredicateVyytGyF",
        "mangledName": "$s6Nimble6beVoidAA9PredicateVyytGyF",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "==",
        "printedName": "==(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "SyncExpectation",
            "printedName": "Nimble.SyncExpectation<()>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "usr": "s:6Nimble15SyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2eeoiyyAA15SyncExpectationVyytG_yttF",
        "mangledName": "$s6Nimble2eeoiyyAA15SyncExpectationVyytG_yttF",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "==",
        "printedName": "==(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "AsyncExpectation",
            "printedName": "Nimble.AsyncExpectation<()>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "usr": "s:6Nimble16AsyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2eeoiyyAA16AsyncExpectationVyytG_yttYaF",
        "mangledName": "$s6Nimble2eeoiyyAA16AsyncExpectationVyytG_yttYaF",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "!=",
        "printedName": "!=(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "SyncExpectation",
            "printedName": "Nimble.SyncExpectation<()>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "usr": "s:6Nimble15SyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2neoiyyAA15SyncExpectationVyytG_yttF",
        "mangledName": "$s6Nimble2neoiyyAA15SyncExpectationVyytG_yttF",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "!=",
        "printedName": "!=(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "AsyncExpectation",
            "printedName": "Nimble.AsyncExpectation<()>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "usr": "s:6Nimble16AsyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2neoiyyAA16AsyncExpectationVyytG_yttYaF",
        "mangledName": "$s6Nimble2neoiyyAA16AsyncExpectationVyytG_yttYaF",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "containElementSatisfying",
        "printedName": "containElementSatisfying(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeFunc",
            "name": "Function",
            "printedName": "(τ_0_0.Element) -> Swift.Bool",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              },
              {
                "kind": "TypeNominal",
                "name": "DependentMember",
                "printedName": "τ_0_0.Element"
              }
            ]
          },
          {
            "kind": "TypeNominal",
            "name": "String",
            "printedName": "Swift.String",
            "hasDefaultArg": true,
            "usr": "s:SS"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble24containElementSatisfyingyAA9PredicateVyxGSb0C0Qzc_SStSTRzlF",
        "mangledName": "$s6Nimble24containElementSatisfyingyAA9PredicateVyxGSb0C0Qzc_SStSTRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Sequence>",
        "sugared_genericSig": "<S where S : Swift.Sequence>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "Function",
        "name": "elementsEqual",
        "printedName": "elementsEqual(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "τ_0_1?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_1"
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble13elementsEqualyAA9PredicateVyxGq_SgSTRzSTR_SQ7ElementRpzAGQy_AHRSr0_lF",
        "mangledName": "$s6Nimble13elementsEqualyAA9PredicateVyxGq_SgSTRzSTR_SQ7ElementRpzAGQy_AHRSr0_lF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0, τ_0_1 where τ_0_0 : Swift.Sequence, τ_0_1 : Swift.Sequence, τ_0_0.Element : Swift.Equatable, τ_0_0.Element == τ_0_1.Element>",
        "sugared_genericSig": "<Seq1, Seq2 where Seq1 : Swift.Sequence, Seq2 : Swift.Sequence, Seq1.Element : Swift.Equatable, Seq1.Element == Seq2.Element>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "elementsEqual",
        "printedName": "elementsEqual(_:by:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "τ_0_1?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_1"
              }
            ],
            "usr": "s:Sq"
          },
          {
            "kind": "TypeFunc",
            "name": "Function",
            "printedName": "(τ_0_0.Element, τ_0_1.Element) -> Swift.Bool",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              },
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(τ_0_0.Element, τ_0_1.Element)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DependentMember",
                    "printedName": "τ_0_0.Element"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "DependentMember",
                    "printedName": "τ_0_1.Element"
                  }
                ]
              }
            ]
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble13elementsEqual_2byAA9PredicateVyxGq_Sg_Sb7ElementQz_AHQy_tctSTRzSTR_r0_lF",
        "mangledName": "$s6Nimble13elementsEqual_2byAA9PredicateVyxGq_Sg_Sb7ElementQz_AHQy_tctSTRzSTR_r0_lF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0, τ_0_1 where τ_0_0 : Swift.Sequence, τ_0_1 : Swift.Sequence>",
        "sugared_genericSig": "<Seq1, Seq2 where Seq1 : Swift.Sequence, Seq2 : Swift.Sequence>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "Function",
        "name": "postNotifications",
        "printedName": "postNotifications(_:from:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<[Foundation.Notification]>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Array",
                "printedName": "[Foundation.Notification]",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Notification",
                    "printedName": "Foundation.Notification",
                    "usr": "s:10Foundation12NotificationV"
                  }
                ],
                "usr": "s:Sa"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "NotificationCenter",
            "printedName": "Foundation.NotificationCenter",
            "hasDefaultArg": true,
            "usr": "c:objc(cs)NSNotificationCenter"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble17postNotifications_4fromAA9PredicateVyxGAEySay10Foundation12NotificationVGG_So20NSNotificationCenterCtlF",
        "mangledName": "$s6Nimble17postNotifications_4fromAA9PredicateVyxGAEySay10Foundation12NotificationVGG_So20NSNotificationCenterCtlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0>",
        "sugared_genericSig": "<Out>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "TypeDecl",
        "name": "AssertionRecord",
        "printedName": "AssertionRecord",
        "children": [
          {
            "kind": "Var",
            "name": "success",
            "printedName": "success",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              }
            ],
            "declKind": "Var",
            "usr": "s:6Nimble15AssertionRecordV7successSbvp",
            "mangledName": "$s6Nimble15AssertionRecordV7successSbvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "HasStorage",
              "AccessControl",
              "RawDocComment"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Bool",
                    "printedName": "Swift.Bool",
                    "usr": "s:Sb"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble15AssertionRecordV7successSbvg",
                "mangledName": "$s6Nimble15AssertionRecordV7successSbvg",
                "moduleName": "Nimble",
                "implicit": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "message",
            "printedName": "message",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "FailureMessage",
                "printedName": "Nimble.FailureMessage",
                "usr": "c:@M@Nimble@objc(cs)FailureMessage"
              }
            ],
            "declKind": "Var",
            "usr": "s:6Nimble15AssertionRecordV7messageAA14FailureMessageCvp",
            "mangledName": "$s6Nimble15AssertionRecordV7messageAA14FailureMessageCvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "HasStorage",
              "AccessControl",
              "RawDocComment"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "FailureMessage",
                    "printedName": "Nimble.FailureMessage",
                    "usr": "c:@M@Nimble@objc(cs)FailureMessage"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble15AssertionRecordV7messageAA14FailureMessageCvg",
                "mangledName": "$s6Nimble15AssertionRecordV7messageAA14FailureMessageCvg",
                "moduleName": "Nimble",
                "implicit": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "location",
            "printedName": "location",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "SourceLocation",
                "printedName": "Nimble.SourceLocation",
                "usr": "c:@M@Nimble@objc(cs)SourceLocation"
              }
            ],
            "declKind": "Var",
            "usr": "s:6Nimble15AssertionRecordV8locationAA14SourceLocationCvp",
            "mangledName": "$s6Nimble15AssertionRecordV8locationAA14SourceLocationCvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "HasStorage",
              "AccessControl",
              "RawDocComment"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SourceLocation",
                    "printedName": "Nimble.SourceLocation",
                    "usr": "c:@M@Nimble@objc(cs)SourceLocation"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble15AssertionRecordV8locationAA14SourceLocationCvg",
                "mangledName": "$s6Nimble15AssertionRecordV8locationAA14SourceLocationCvg",
                "moduleName": "Nimble",
                "implicit": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "description",
            "printedName": "description",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:6Nimble15AssertionRecordV11descriptionSSvp",
            "mangledName": "$s6Nimble15AssertionRecordV11descriptionSSvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble15AssertionRecordV11descriptionSSvg",
                "mangledName": "$s6Nimble15AssertionRecordV11descriptionSSvg",
                "moduleName": "Nimble",
                "accessorKind": "get"
              }
            ]
          }
        ],
        "declKind": "Struct",
        "usr": "s:6Nimble15AssertionRecordV",
        "mangledName": "$s6Nimble15AssertionRecordV",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          }
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "AssertionRecorder",
        "printedName": "AssertionRecorder",
        "children": [
          {
            "kind": "Var",
            "name": "assertions",
            "printedName": "assertions",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Array",
                "printedName": "[Nimble.AssertionRecord]",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "AssertionRecord",
                    "printedName": "Nimble.AssertionRecord",
                    "usr": "s:6Nimble15AssertionRecordV"
                  }
                ],
                "usr": "s:Sa"
              }
            ],
            "declKind": "Var",
            "usr": "s:6Nimble17AssertionRecorderC10assertionsSayAA0B6RecordVGvp",
            "mangledName": "$s6Nimble17AssertionRecorderC10assertionsSayAA0B6RecordVGvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl",
              "RawDocComment"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Array",
                    "printedName": "[Nimble.AssertionRecord]",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "AssertionRecord",
                        "printedName": "Nimble.AssertionRecord",
                        "usr": "s:6Nimble15AssertionRecordV"
                      }
                    ],
                    "usr": "s:Sa"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble17AssertionRecorderC10assertionsSayAA0B6RecordVGvg",
                "mangledName": "$s6Nimble17AssertionRecorderC10assertionsSayAA0B6RecordVGvg",
                "moduleName": "Nimble",
                "implicit": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Array",
                    "printedName": "[Nimble.AssertionRecord]",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "AssertionRecord",
                        "printedName": "Nimble.AssertionRecord",
                        "usr": "s:6Nimble15AssertionRecordV"
                      }
                    ],
                    "usr": "s:Sa"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble17AssertionRecorderC10assertionsSayAA0B6RecordVGvs",
                "mangledName": "$s6Nimble17AssertionRecorderC10assertionsSayAA0B6RecordVGvs",
                "moduleName": "Nimble",
                "implicit": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble17AssertionRecorderC10assertionsSayAA0B6RecordVGvM",
                "mangledName": "$s6Nimble17AssertionRecorderC10assertionsSayAA0B6RecordVGvM",
                "moduleName": "Nimble",
                "implicit": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "AssertionRecorder",
                "printedName": "Nimble.AssertionRecorder",
                "usr": "s:6Nimble17AssertionRecorderC"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:6Nimble17AssertionRecorderCACycfc",
            "mangledName": "$s6Nimble17AssertionRecorderCACycfc",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Function",
            "name": "assert",
            "printedName": "assert(_:message:location:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              },
              {
                "kind": "TypeNominal",
                "name": "FailureMessage",
                "printedName": "Nimble.FailureMessage",
                "usr": "c:@M@Nimble@objc(cs)FailureMessage"
              },
              {
                "kind": "TypeNominal",
                "name": "SourceLocation",
                "printedName": "Nimble.SourceLocation",
                "usr": "c:@M@Nimble@objc(cs)SourceLocation"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble17AssertionRecorderC6assert_7message8locationySb_AA14FailureMessageCAA14SourceLocationCtF",
            "mangledName": "$s6Nimble17AssertionRecorderC6assert_7message8locationySb_AA14FailureMessageCAA14SourceLocationCtF",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Class",
        "usr": "s:6Nimble17AssertionRecorderC",
        "mangledName": "$s6Nimble17AssertionRecorderC",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "AssertionHandler",
            "printedName": "AssertionHandler",
            "usr": "s:6Nimble16AssertionHandlerP",
            "mangledName": "$s6Nimble16AssertionHandlerP"
          }
        ]
      },
      {
        "kind": "Function",
        "name": "withAssertionHandler",
        "printedName": "withAssertionHandler(_:file:line:closure:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "AssertionHandler",
            "printedName": "Nimble.AssertionHandler",
            "usr": "s:6Nimble16AssertionHandlerP"
          },
          {
            "kind": "TypeNominal",
            "name": "String",
            "printedName": "Swift.String",
            "hasDefaultArg": true,
            "usr": "s:SS"
          },
          {
            "kind": "TypeNominal",
            "name": "UInt",
            "printedName": "Swift.UInt",
            "hasDefaultArg": true,
            "usr": "s:Su"
          },
          {
            "kind": "TypeFunc",
            "name": "Function",
            "printedName": "() throws -> ()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "typeAttributes": [
              "noescape"
            ]
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble20withAssertionHandler_4file4line7closureyAA0cD0_p_SSSuyyKXEtF",
        "mangledName": "$s6Nimble20withAssertionHandler_4file4line7closureyAA0cD0_p_SSSuyyKXEtF",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "gatherExpectations",
        "printedName": "gatherExpectations(silently:closure:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Array",
            "printedName": "[Nimble.AssertionRecord]",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "AssertionRecord",
                "printedName": "Nimble.AssertionRecord",
                "usr": "s:6Nimble15AssertionRecordV"
              }
            ],
            "usr": "s:Sa"
          },
          {
            "kind": "TypeNominal",
            "name": "Bool",
            "printedName": "Swift.Bool",
            "hasDefaultArg": true,
            "usr": "s:Sb"
          },
          {
            "kind": "TypeFunc",
            "name": "Function",
            "printedName": "() -> ()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "typeAttributes": [
              "noescape"
            ]
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble18gatherExpectations8silently7closureSayAA15AssertionRecordVGSb_yyXEtF",
        "mangledName": "$s6Nimble18gatherExpectations8silently7closureSayAA15AssertionRecordVGSb_yyXEtF",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "gatherFailingExpectations",
        "printedName": "gatherFailingExpectations(silently:closure:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Array",
            "printedName": "[Nimble.AssertionRecord]",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "AssertionRecord",
                "printedName": "Nimble.AssertionRecord",
                "usr": "s:6Nimble15AssertionRecordV"
              }
            ],
            "usr": "s:Sa"
          },
          {
            "kind": "TypeNominal",
            "name": "Bool",
            "printedName": "Swift.Bool",
            "hasDefaultArg": true,
            "usr": "s:Sb"
          },
          {
            "kind": "TypeFunc",
            "name": "Function",
            "printedName": "() -> ()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "typeAttributes": [
              "noescape"
            ]
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble25gatherFailingExpectations8silently7closureSayAA15AssertionRecordVGSb_yyXEtF",
        "mangledName": "$s6Nimble25gatherFailingExpectations8silently7closureSayAA15AssertionRecordVGSb_yyXEtF",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "throwError",
        "printedName": "throwError()",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble10throwErrorAA9PredicateVyxGylF",
        "mangledName": "$s6Nimble10throwErrorAA9PredicateVyxGylF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0>",
        "sugared_genericSig": "<Out>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "throwError",
        "printedName": "throwError(_:closure:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<τ_0_1>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_1"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "GenericTypeParam",
            "printedName": "τ_0_0"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "((Swift.Error) -> ())?",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Swift.Error) -> ()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Error",
                    "printedName": "Swift.Error",
                    "usr": "s:s5ErrorP"
                  }
                ]
              }
            ],
            "hasDefaultArg": true,
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble10throwError_7closureAA9PredicateVyq_Gx_ys0C0_pcSgtsAGRzr0_lF",
        "mangledName": "$s6Nimble10throwError_7closureAA9PredicateVyq_Gx_ys0C0_pcSgtsAGRzr0_lF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0, τ_0_1 where τ_0_0 : Swift.Error>",
        "sugared_genericSig": "<T, Out where T : Swift.Error>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "throwError",
        "printedName": "throwError(_:closure:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<τ_0_1>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_1"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "GenericTypeParam",
            "printedName": "τ_0_0"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "((τ_0_0) -> ())?",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(τ_0_0) -> ()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ]
              }
            ],
            "hasDefaultArg": true,
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble10throwError_7closureAA9PredicateVyq_Gx_yxcSgtSQRzs0C0Rzr0_lF",
        "mangledName": "$s6Nimble10throwError_7closureAA9PredicateVyq_Gx_yxcSgtSQRzs0C0Rzr0_lF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0, τ_0_1 where τ_0_0 : Swift.Equatable, τ_0_0 : Swift.Error>",
        "sugared_genericSig": "<T, Out where T : Swift.Equatable, T : Swift.Error>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "throwError",
        "printedName": "throwError(errorType:closure:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<τ_0_1>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_1"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "Metatype",
            "printedName": "τ_0_0.Type",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ]
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "((τ_0_0) -> ())?",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(τ_0_0) -> ()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ]
              }
            ],
            "hasDefaultArg": true,
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble10throwError9errorType7closureAA9PredicateVyq_Gxm_yxcSgts0C0Rzr0_lF",
        "mangledName": "$s6Nimble10throwError9errorType7closureAA9PredicateVyq_Gxm_yxcSgts0C0Rzr0_lF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0, τ_0_1 where τ_0_0 : Swift.Error>",
        "sugared_genericSig": "<T, Out where T : Swift.Error>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "throwError",
        "printedName": "throwError(closure:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeFunc",
            "name": "Function",
            "printedName": "(Swift.Error) -> ()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Error",
                "printedName": "Swift.Error",
                "usr": "s:s5ErrorP"
              }
            ]
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble10throwError7closureAA9PredicateVyxGys0C0_pc_tlF",
        "mangledName": "$s6Nimble10throwError7closureAA9PredicateVyxGys0C0_pc_tlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0>",
        "sugared_genericSig": "<Out>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "throwError",
        "printedName": "throwError(closure:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<τ_0_1>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_1"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeFunc",
            "name": "Function",
            "printedName": "(τ_0_0) -> ()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ]
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble10throwError7closureAA9PredicateVyq_Gyxc_ts0C0Rzr0_lF",
        "mangledName": "$s6Nimble10throwError7closureAA9PredicateVyq_Gyxc_ts0C0Rzr0_lF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0, τ_0_1 where τ_0_0 : Swift.Error>",
        "sugared_genericSig": "<T, Out where T : Swift.Error>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "beginWith",
        "printedName": "beginWith(prefix:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "τ_0_1?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_1"
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble9beginWith6prefixAA9PredicateVyxGq_Sg_tSTRzSTR_SQ7ElementRpzAHQy_AIRSr0_lF",
        "mangledName": "$s6Nimble9beginWith6prefixAA9PredicateVyxGq_Sg_tSTRzSTR_SQ7ElementRpzAHQy_AIRSr0_lF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0, τ_0_1 where τ_0_0 : Swift.Sequence, τ_0_1 : Swift.Sequence, τ_0_0.Element : Swift.Equatable, τ_0_0.Element == τ_0_1.Element>",
        "sugared_genericSig": "<Seq1, Seq2 where Seq1 : Swift.Sequence, Seq2 : Swift.Sequence, Seq1.Element : Swift.Equatable, Seq1.Element == Seq2.Element>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "beginWith",
        "printedName": "beginWith(prefix:by:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "τ_0_1?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_1"
              }
            ],
            "usr": "s:Sq"
          },
          {
            "kind": "TypeFunc",
            "name": "Function",
            "printedName": "(τ_0_0.Element, τ_0_1.Element) -> Swift.Bool",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              },
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(τ_0_0.Element, τ_0_1.Element)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DependentMember",
                    "printedName": "τ_0_0.Element"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "DependentMember",
                    "printedName": "τ_0_1.Element"
                  }
                ]
              }
            ]
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble9beginWith6prefix2byAA9PredicateVyxGq_Sg_Sb7ElementQz_AIQy_tctSTRzSTR_r0_lF",
        "mangledName": "$s6Nimble9beginWith6prefix2byAA9PredicateVyxGq_Sg_Sb7ElementQz_AIQy_tctSTRzSTR_r0_lF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0, τ_0_1 where τ_0_0 : Swift.Sequence, τ_0_1 : Swift.Sequence>",
        "sugared_genericSig": "<Seq1, Seq2 where Seq1 : Swift.Sequence, Seq2 : Swift.Sequence>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "equal",
        "printedName": "equal(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "GenericTypeParam",
            "printedName": "τ_0_0"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble5equalyAA9PredicateVyxGxSQRzlF",
        "mangledName": "$s6Nimble5equalyAA9PredicateVyxGxSQRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Equatable>",
        "sugared_genericSig": "<T where T : Swift.Equatable>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "equal",
        "printedName": "equal(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<[τ_0_0?]>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Array",
                "printedName": "[τ_0_0?]",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "τ_0_0?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_0_0"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "usr": "s:Sa"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "Array",
            "printedName": "[τ_0_0?]",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "τ_0_0?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "usr": "s:Sa"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble5equalyAA9PredicateVySayxSgGGAFSQRzlF",
        "mangledName": "$s6Nimble5equalyAA9PredicateVySayxSgGGAFSQRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Equatable>",
        "sugared_genericSig": "<T where T : Swift.Equatable>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "equal",
        "printedName": "equal(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "τ_0_0?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble5equalyAA9PredicateVyxGxSgSQRzlF",
        "mangledName": "$s6Nimble5equalyAA9PredicateVyxGxSgSQRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Equatable>",
        "sugared_genericSig": "<T where T : Swift.Equatable>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "equal",
        "printedName": "equal(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<Swift.Set<τ_0_0>>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Set",
                "printedName": "Swift.Set<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:Sh"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "Set",
            "printedName": "Swift.Set<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:Sh"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble5equalyAA9PredicateVyShyxGGAESHRzlF",
        "mangledName": "$s6Nimble5equalyAA9PredicateVyShyxGGAESHRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Hashable>",
        "sugared_genericSig": "<T where T : Swift.Hashable>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "equal",
        "printedName": "equal(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<Swift.Set<τ_0_0>>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Set",
                "printedName": "Swift.Set<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:Sh"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "Swift.Set<τ_0_0>?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Set",
                "printedName": "Swift.Set<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:Sh"
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble5equalyAA9PredicateVyShyxGGAESgSHRzlF",
        "mangledName": "$s6Nimble5equalyAA9PredicateVyShyxGGAESgSHRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Hashable>",
        "sugared_genericSig": "<T where T : Swift.Hashable>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "equal",
        "printedName": "equal(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<Swift.Set<τ_0_0>>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Set",
                "printedName": "Swift.Set<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:Sh"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "Set",
            "printedName": "Swift.Set<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:Sh"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble5equalyAA9PredicateVyShyxGGAESLRzSHRzlF",
        "mangledName": "$s6Nimble5equalyAA9PredicateVyShyxGGAESLRzSHRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Comparable, τ_0_0 : Swift.Hashable>",
        "sugared_genericSig": "<T where T : Swift.Comparable, T : Swift.Hashable>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "equal",
        "printedName": "equal(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<Swift.Set<τ_0_0>>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Set",
                "printedName": "Swift.Set<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:Sh"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "Swift.Set<τ_0_0>?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Set",
                "printedName": "Swift.Set<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:Sh"
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble5equalyAA9PredicateVyShyxGGAESgSLRzSHRzlF",
        "mangledName": "$s6Nimble5equalyAA9PredicateVyShyxGGAESgSLRzSHRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Comparable, τ_0_0 : Swift.Hashable>",
        "sugared_genericSig": "<T where T : Swift.Comparable, T : Swift.Hashable>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "equal",
        "printedName": "equal(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<[τ_0_0 : τ_0_1]>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Dictionary",
                "printedName": "[τ_0_0 : τ_0_1]",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  }
                ],
                "usr": "s:SD"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "Dictionary",
            "printedName": "[τ_0_0 : τ_0_1?]",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "τ_0_1?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "usr": "s:SD"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble5equalyAA9PredicateVySDyxq_GGSDyxq_SgGSHRzSQR_r0_lF",
        "mangledName": "$s6Nimble5equalyAA9PredicateVySDyxq_GGSDyxq_SgGSHRzSQR_r0_lF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0, τ_0_1 where τ_0_0 : Swift.Hashable, τ_0_1 : Swift.Equatable>",
        "sugared_genericSig": "<K, V where K : Swift.Hashable, V : Swift.Equatable>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "==",
        "printedName": "==(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "SyncExpectation",
            "printedName": "Nimble.SyncExpectation<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble15SyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "GenericTypeParam",
            "printedName": "τ_0_0"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2eeoiyyAA15SyncExpectationVyxG_xtSQRzlF",
        "mangledName": "$s6Nimble2eeoiyyAA15SyncExpectationVyxG_xtSQRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Equatable>",
        "sugared_genericSig": "<T where T : Swift.Equatable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "==",
        "printedName": "==(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "SyncExpectation",
            "printedName": "Nimble.SyncExpectation<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble15SyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "τ_0_0?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2eeoiyyAA15SyncExpectationVyxG_xSgtSQRzlF",
        "mangledName": "$s6Nimble2eeoiyyAA15SyncExpectationVyxG_xSgtSQRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Equatable>",
        "sugared_genericSig": "<T where T : Swift.Equatable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "!=",
        "printedName": "!=(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "SyncExpectation",
            "printedName": "Nimble.SyncExpectation<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble15SyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "GenericTypeParam",
            "printedName": "τ_0_0"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2neoiyyAA15SyncExpectationVyxG_xtSQRzlF",
        "mangledName": "$s6Nimble2neoiyyAA15SyncExpectationVyxG_xtSQRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Equatable>",
        "sugared_genericSig": "<T where T : Swift.Equatable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "!=",
        "printedName": "!=(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "SyncExpectation",
            "printedName": "Nimble.SyncExpectation<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble15SyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "τ_0_0?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2neoiyyAA15SyncExpectationVyxG_xSgtSQRzlF",
        "mangledName": "$s6Nimble2neoiyyAA15SyncExpectationVyxG_xSgtSQRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Equatable>",
        "sugared_genericSig": "<T where T : Swift.Equatable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "==",
        "printedName": "==(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "SyncExpectation",
            "printedName": "Nimble.SyncExpectation<[τ_0_0]>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Array",
                "printedName": "[τ_0_0]",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:Sa"
              }
            ],
            "usr": "s:6Nimble15SyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "[τ_0_0]?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Array",
                "printedName": "[τ_0_0]",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:Sa"
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2eeoiyyAA15SyncExpectationVySayxGG_AESgtSQRzlF",
        "mangledName": "$s6Nimble2eeoiyyAA15SyncExpectationVySayxGG_AESgtSQRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Equatable>",
        "sugared_genericSig": "<T where T : Swift.Equatable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "!=",
        "printedName": "!=(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "SyncExpectation",
            "printedName": "Nimble.SyncExpectation<[τ_0_0]>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Array",
                "printedName": "[τ_0_0]",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:Sa"
              }
            ],
            "usr": "s:6Nimble15SyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "[τ_0_0]?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Array",
                "printedName": "[τ_0_0]",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:Sa"
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2neoiyyAA15SyncExpectationVySayxGG_AESgtSQRzlF",
        "mangledName": "$s6Nimble2neoiyyAA15SyncExpectationVySayxGG_AESgtSQRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Equatable>",
        "sugared_genericSig": "<T where T : Swift.Equatable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "==",
        "printedName": "==(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "SyncExpectation",
            "printedName": "Nimble.SyncExpectation<Swift.Set<τ_0_0>>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Set",
                "printedName": "Swift.Set<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:Sh"
              }
            ],
            "usr": "s:6Nimble15SyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Set",
            "printedName": "Swift.Set<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:Sh"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2eeoiyyAA15SyncExpectationVyShyxGG_AEtSHRzlF",
        "mangledName": "$s6Nimble2eeoiyyAA15SyncExpectationVyShyxGG_AEtSHRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Hashable>",
        "sugared_genericSig": "<T where T : Swift.Hashable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "==",
        "printedName": "==(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "SyncExpectation",
            "printedName": "Nimble.SyncExpectation<Swift.Set<τ_0_0>>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Set",
                "printedName": "Swift.Set<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:Sh"
              }
            ],
            "usr": "s:6Nimble15SyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "Swift.Set<τ_0_0>?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Set",
                "printedName": "Swift.Set<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:Sh"
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2eeoiyyAA15SyncExpectationVyShyxGG_AESgtSHRzlF",
        "mangledName": "$s6Nimble2eeoiyyAA15SyncExpectationVyShyxGG_AESgtSHRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Hashable>",
        "sugared_genericSig": "<T where T : Swift.Hashable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "!=",
        "printedName": "!=(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "SyncExpectation",
            "printedName": "Nimble.SyncExpectation<Swift.Set<τ_0_0>>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Set",
                "printedName": "Swift.Set<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:Sh"
              }
            ],
            "usr": "s:6Nimble15SyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Set",
            "printedName": "Swift.Set<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:Sh"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2neoiyyAA15SyncExpectationVyShyxGG_AEtSHRzlF",
        "mangledName": "$s6Nimble2neoiyyAA15SyncExpectationVyShyxGG_AEtSHRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Hashable>",
        "sugared_genericSig": "<T where T : Swift.Hashable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "!=",
        "printedName": "!=(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "SyncExpectation",
            "printedName": "Nimble.SyncExpectation<Swift.Set<τ_0_0>>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Set",
                "printedName": "Swift.Set<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:Sh"
              }
            ],
            "usr": "s:6Nimble15SyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "Swift.Set<τ_0_0>?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Set",
                "printedName": "Swift.Set<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:Sh"
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2neoiyyAA15SyncExpectationVyShyxGG_AESgtSHRzlF",
        "mangledName": "$s6Nimble2neoiyyAA15SyncExpectationVyShyxGG_AESgtSHRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Hashable>",
        "sugared_genericSig": "<T where T : Swift.Hashable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "==",
        "printedName": "==(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "SyncExpectation",
            "printedName": "Nimble.SyncExpectation<Swift.Set<τ_0_0>>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Set",
                "printedName": "Swift.Set<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:Sh"
              }
            ],
            "usr": "s:6Nimble15SyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Set",
            "printedName": "Swift.Set<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:Sh"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2eeoiyyAA15SyncExpectationVyShyxGG_AEtSLRzSHRzlF",
        "mangledName": "$s6Nimble2eeoiyyAA15SyncExpectationVyShyxGG_AEtSLRzSHRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Comparable, τ_0_0 : Swift.Hashable>",
        "sugared_genericSig": "<T where T : Swift.Comparable, T : Swift.Hashable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "==",
        "printedName": "==(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "SyncExpectation",
            "printedName": "Nimble.SyncExpectation<Swift.Set<τ_0_0>>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Set",
                "printedName": "Swift.Set<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:Sh"
              }
            ],
            "usr": "s:6Nimble15SyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "Swift.Set<τ_0_0>?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Set",
                "printedName": "Swift.Set<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:Sh"
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2eeoiyyAA15SyncExpectationVyShyxGG_AESgtSLRzSHRzlF",
        "mangledName": "$s6Nimble2eeoiyyAA15SyncExpectationVyShyxGG_AESgtSLRzSHRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Comparable, τ_0_0 : Swift.Hashable>",
        "sugared_genericSig": "<T where T : Swift.Comparable, T : Swift.Hashable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "!=",
        "printedName": "!=(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "SyncExpectation",
            "printedName": "Nimble.SyncExpectation<Swift.Set<τ_0_0>>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Set",
                "printedName": "Swift.Set<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:Sh"
              }
            ],
            "usr": "s:6Nimble15SyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Set",
            "printedName": "Swift.Set<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:Sh"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2neoiyyAA15SyncExpectationVyShyxGG_AEtSLRzSHRzlF",
        "mangledName": "$s6Nimble2neoiyyAA15SyncExpectationVyShyxGG_AEtSLRzSHRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Comparable, τ_0_0 : Swift.Hashable>",
        "sugared_genericSig": "<T where T : Swift.Comparable, T : Swift.Hashable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "!=",
        "printedName": "!=(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "SyncExpectation",
            "printedName": "Nimble.SyncExpectation<Swift.Set<τ_0_0>>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Set",
                "printedName": "Swift.Set<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:Sh"
              }
            ],
            "usr": "s:6Nimble15SyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "Swift.Set<τ_0_0>?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Set",
                "printedName": "Swift.Set<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:Sh"
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2neoiyyAA15SyncExpectationVyShyxGG_AESgtSLRzSHRzlF",
        "mangledName": "$s6Nimble2neoiyyAA15SyncExpectationVyShyxGG_AESgtSLRzSHRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Comparable, τ_0_0 : Swift.Hashable>",
        "sugared_genericSig": "<T where T : Swift.Comparable, T : Swift.Hashable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "==",
        "printedName": "==(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "SyncExpectation",
            "printedName": "Nimble.SyncExpectation<[τ_0_0 : τ_0_1]>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Dictionary",
                "printedName": "[τ_0_0 : τ_0_1]",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  }
                ],
                "usr": "s:SD"
              }
            ],
            "usr": "s:6Nimble15SyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "[τ_0_0 : τ_0_1]?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Dictionary",
                "printedName": "[τ_0_0 : τ_0_1]",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  }
                ],
                "usr": "s:SD"
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2eeoiyyAA15SyncExpectationVySDyxq_GG_AESgtSHRzSQR_r0_lF",
        "mangledName": "$s6Nimble2eeoiyyAA15SyncExpectationVySDyxq_GG_AESgtSHRzSQR_r0_lF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0, τ_0_1 where τ_0_0 : Swift.Hashable, τ_0_1 : Swift.Equatable>",
        "sugared_genericSig": "<T, C where T : Swift.Hashable, C : Swift.Equatable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "!=",
        "printedName": "!=(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "SyncExpectation",
            "printedName": "Nimble.SyncExpectation<[τ_0_0 : τ_0_1]>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Dictionary",
                "printedName": "[τ_0_0 : τ_0_1]",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  }
                ],
                "usr": "s:SD"
              }
            ],
            "usr": "s:6Nimble15SyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "[τ_0_0 : τ_0_1]?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Dictionary",
                "printedName": "[τ_0_0 : τ_0_1]",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  }
                ],
                "usr": "s:SD"
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2neoiyyAA15SyncExpectationVySDyxq_GG_AESgtSHRzSQR_r0_lF",
        "mangledName": "$s6Nimble2neoiyyAA15SyncExpectationVySDyxq_GG_AESgtSHRzSQR_r0_lF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0, τ_0_1 where τ_0_0 : Swift.Hashable, τ_0_1 : Swift.Equatable>",
        "sugared_genericSig": "<T, C where T : Swift.Hashable, C : Swift.Equatable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "==",
        "printedName": "==(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "AsyncExpectation",
            "printedName": "Nimble.AsyncExpectation<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble16AsyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "GenericTypeParam",
            "printedName": "τ_0_0"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2eeoiyyAA16AsyncExpectationVyxG_xtYaSQRzlF",
        "mangledName": "$s6Nimble2eeoiyyAA16AsyncExpectationVyxG_xtYaSQRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Equatable>",
        "sugared_genericSig": "<T where T : Swift.Equatable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "==",
        "printedName": "==(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "AsyncExpectation",
            "printedName": "Nimble.AsyncExpectation<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble16AsyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "τ_0_0?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2eeoiyyAA16AsyncExpectationVyxG_xSgtYaSQRzlF",
        "mangledName": "$s6Nimble2eeoiyyAA16AsyncExpectationVyxG_xSgtYaSQRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Equatable>",
        "sugared_genericSig": "<T where T : Swift.Equatable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "!=",
        "printedName": "!=(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "AsyncExpectation",
            "printedName": "Nimble.AsyncExpectation<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble16AsyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "GenericTypeParam",
            "printedName": "τ_0_0"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2neoiyyAA16AsyncExpectationVyxG_xtYaSQRzlF",
        "mangledName": "$s6Nimble2neoiyyAA16AsyncExpectationVyxG_xtYaSQRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Equatable>",
        "sugared_genericSig": "<T where T : Swift.Equatable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "!=",
        "printedName": "!=(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "AsyncExpectation",
            "printedName": "Nimble.AsyncExpectation<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble16AsyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "τ_0_0?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2neoiyyAA16AsyncExpectationVyxG_xSgtYaSQRzlF",
        "mangledName": "$s6Nimble2neoiyyAA16AsyncExpectationVyxG_xSgtYaSQRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Equatable>",
        "sugared_genericSig": "<T where T : Swift.Equatable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "==",
        "printedName": "==(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "AsyncExpectation",
            "printedName": "Nimble.AsyncExpectation<[τ_0_0]>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Array",
                "printedName": "[τ_0_0]",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:Sa"
              }
            ],
            "usr": "s:6Nimble16AsyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "[τ_0_0]?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Array",
                "printedName": "[τ_0_0]",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:Sa"
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2eeoiyyAA16AsyncExpectationVySayxGG_AESgtYaSQRzlF",
        "mangledName": "$s6Nimble2eeoiyyAA16AsyncExpectationVySayxGG_AESgtYaSQRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Equatable>",
        "sugared_genericSig": "<T where T : Swift.Equatable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "!=",
        "printedName": "!=(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "AsyncExpectation",
            "printedName": "Nimble.AsyncExpectation<[τ_0_0]>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Array",
                "printedName": "[τ_0_0]",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:Sa"
              }
            ],
            "usr": "s:6Nimble16AsyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "[τ_0_0]?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Array",
                "printedName": "[τ_0_0]",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:Sa"
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2neoiyyAA16AsyncExpectationVySayxGG_AESgtYaSQRzlF",
        "mangledName": "$s6Nimble2neoiyyAA16AsyncExpectationVySayxGG_AESgtYaSQRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Equatable>",
        "sugared_genericSig": "<T where T : Swift.Equatable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "==",
        "printedName": "==(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "AsyncExpectation",
            "printedName": "Nimble.AsyncExpectation<Swift.Set<τ_0_0>>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Set",
                "printedName": "Swift.Set<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:Sh"
              }
            ],
            "usr": "s:6Nimble16AsyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Set",
            "printedName": "Swift.Set<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:Sh"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2eeoiyyAA16AsyncExpectationVyShyxGG_AEtYaSHRzlF",
        "mangledName": "$s6Nimble2eeoiyyAA16AsyncExpectationVyShyxGG_AEtYaSHRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Hashable>",
        "sugared_genericSig": "<T where T : Swift.Hashable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "==",
        "printedName": "==(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "AsyncExpectation",
            "printedName": "Nimble.AsyncExpectation<Swift.Set<τ_0_0>>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Set",
                "printedName": "Swift.Set<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:Sh"
              }
            ],
            "usr": "s:6Nimble16AsyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "Swift.Set<τ_0_0>?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Set",
                "printedName": "Swift.Set<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:Sh"
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2eeoiyyAA16AsyncExpectationVyShyxGG_AESgtYaSHRzlF",
        "mangledName": "$s6Nimble2eeoiyyAA16AsyncExpectationVyShyxGG_AESgtYaSHRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Hashable>",
        "sugared_genericSig": "<T where T : Swift.Hashable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "!=",
        "printedName": "!=(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "AsyncExpectation",
            "printedName": "Nimble.AsyncExpectation<Swift.Set<τ_0_0>>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Set",
                "printedName": "Swift.Set<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:Sh"
              }
            ],
            "usr": "s:6Nimble16AsyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Set",
            "printedName": "Swift.Set<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:Sh"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2neoiyyAA16AsyncExpectationVyShyxGG_AEtYaSHRzlF",
        "mangledName": "$s6Nimble2neoiyyAA16AsyncExpectationVyShyxGG_AEtYaSHRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Hashable>",
        "sugared_genericSig": "<T where T : Swift.Hashable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "!=",
        "printedName": "!=(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "AsyncExpectation",
            "printedName": "Nimble.AsyncExpectation<Swift.Set<τ_0_0>>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Set",
                "printedName": "Swift.Set<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:Sh"
              }
            ],
            "usr": "s:6Nimble16AsyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "Swift.Set<τ_0_0>?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Set",
                "printedName": "Swift.Set<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:Sh"
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2neoiyyAA16AsyncExpectationVyShyxGG_AESgtYaSHRzlF",
        "mangledName": "$s6Nimble2neoiyyAA16AsyncExpectationVyShyxGG_AESgtYaSHRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Hashable>",
        "sugared_genericSig": "<T where T : Swift.Hashable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "==",
        "printedName": "==(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "AsyncExpectation",
            "printedName": "Nimble.AsyncExpectation<Swift.Set<τ_0_0>>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Set",
                "printedName": "Swift.Set<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:Sh"
              }
            ],
            "usr": "s:6Nimble16AsyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Set",
            "printedName": "Swift.Set<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:Sh"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2eeoiyyAA16AsyncExpectationVyShyxGG_AEtYaSLRzSHRzlF",
        "mangledName": "$s6Nimble2eeoiyyAA16AsyncExpectationVyShyxGG_AEtYaSLRzSHRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Comparable, τ_0_0 : Swift.Hashable>",
        "sugared_genericSig": "<T where T : Swift.Comparable, T : Swift.Hashable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "==",
        "printedName": "==(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "AsyncExpectation",
            "printedName": "Nimble.AsyncExpectation<Swift.Set<τ_0_0>>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Set",
                "printedName": "Swift.Set<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:Sh"
              }
            ],
            "usr": "s:6Nimble16AsyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "Swift.Set<τ_0_0>?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Set",
                "printedName": "Swift.Set<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:Sh"
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2eeoiyyAA16AsyncExpectationVyShyxGG_AESgtYaSLRzSHRzlF",
        "mangledName": "$s6Nimble2eeoiyyAA16AsyncExpectationVyShyxGG_AESgtYaSLRzSHRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Comparable, τ_0_0 : Swift.Hashable>",
        "sugared_genericSig": "<T where T : Swift.Comparable, T : Swift.Hashable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "!=",
        "printedName": "!=(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "AsyncExpectation",
            "printedName": "Nimble.AsyncExpectation<Swift.Set<τ_0_0>>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Set",
                "printedName": "Swift.Set<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:Sh"
              }
            ],
            "usr": "s:6Nimble16AsyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Set",
            "printedName": "Swift.Set<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:Sh"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2neoiyyAA16AsyncExpectationVyShyxGG_AEtYaSLRzSHRzlF",
        "mangledName": "$s6Nimble2neoiyyAA16AsyncExpectationVyShyxGG_AEtYaSLRzSHRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Comparable, τ_0_0 : Swift.Hashable>",
        "sugared_genericSig": "<T where T : Swift.Comparable, T : Swift.Hashable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "!=",
        "printedName": "!=(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "AsyncExpectation",
            "printedName": "Nimble.AsyncExpectation<Swift.Set<τ_0_0>>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Set",
                "printedName": "Swift.Set<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:Sh"
              }
            ],
            "usr": "s:6Nimble16AsyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "Swift.Set<τ_0_0>?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Set",
                "printedName": "Swift.Set<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:Sh"
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2neoiyyAA16AsyncExpectationVyShyxGG_AESgtYaSLRzSHRzlF",
        "mangledName": "$s6Nimble2neoiyyAA16AsyncExpectationVyShyxGG_AESgtYaSLRzSHRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Comparable, τ_0_0 : Swift.Hashable>",
        "sugared_genericSig": "<T where T : Swift.Comparable, T : Swift.Hashable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "==",
        "printedName": "==(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "AsyncExpectation",
            "printedName": "Nimble.AsyncExpectation<[τ_0_0 : τ_0_1]>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Dictionary",
                "printedName": "[τ_0_0 : τ_0_1]",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  }
                ],
                "usr": "s:SD"
              }
            ],
            "usr": "s:6Nimble16AsyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "[τ_0_0 : τ_0_1]?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Dictionary",
                "printedName": "[τ_0_0 : τ_0_1]",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  }
                ],
                "usr": "s:SD"
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2eeoiyyAA16AsyncExpectationVySDyxq_GG_AESgtYaSHRzSQR_r0_lF",
        "mangledName": "$s6Nimble2eeoiyyAA16AsyncExpectationVySDyxq_GG_AESgtYaSHRzSQR_r0_lF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0, τ_0_1 where τ_0_0 : Swift.Hashable, τ_0_1 : Swift.Equatable>",
        "sugared_genericSig": "<T, C where T : Swift.Hashable, C : Swift.Equatable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "!=",
        "printedName": "!=(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "AsyncExpectation",
            "printedName": "Nimble.AsyncExpectation<[τ_0_0 : τ_0_1]>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Dictionary",
                "printedName": "[τ_0_0 : τ_0_1]",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  }
                ],
                "usr": "s:SD"
              }
            ],
            "usr": "s:6Nimble16AsyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "[τ_0_0 : τ_0_1]?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Dictionary",
                "printedName": "[τ_0_0 : τ_0_1]",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  }
                ],
                "usr": "s:SD"
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2neoiyyAA16AsyncExpectationVySDyxq_GG_AESgtYaSHRzSQR_r0_lF",
        "mangledName": "$s6Nimble2neoiyyAA16AsyncExpectationVySDyxq_GG_AESgtYaSHRzSQR_r0_lF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0, τ_0_1 where τ_0_0 : Swift.Hashable, τ_0_1 : Swift.Equatable>",
        "sugared_genericSig": "<T, C where T : Swift.Hashable, C : Swift.Equatable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "Function",
        "name": "equal",
        "printedName": "equal(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<(τ_0_0, τ_0_1)>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(τ_0_0, τ_0_1)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  }
                ]
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "(τ_0_0, τ_0_1)?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(τ_0_0, τ_0_1)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  }
                ]
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble5equalyAA9PredicateVyx_q_tGx_q_tSgSQRzSQR_r0_lF",
        "mangledName": "$s6Nimble5equalyAA9PredicateVyx_q_tGx_q_tSgSQRzSQR_r0_lF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0, τ_0_1 where τ_0_0 : Swift.Equatable, τ_0_1 : Swift.Equatable>",
        "sugared_genericSig": "<T1, T2 where T1 : Swift.Equatable, T2 : Swift.Equatable>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "==",
        "printedName": "==(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "SyncExpectation",
            "printedName": "Nimble.SyncExpectation<(τ_0_0, τ_0_1)>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(τ_0_0, τ_0_1)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  }
                ]
              }
            ],
            "usr": "s:6Nimble15SyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "(τ_0_0, τ_0_1)?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(τ_0_0, τ_0_1)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  }
                ]
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2eeoiyyAA15SyncExpectationVyx_q_tG_x_q_tSgtSQRzSQR_r0_lF",
        "mangledName": "$s6Nimble2eeoiyyAA15SyncExpectationVyx_q_tG_x_q_tSgtSQRzSQR_r0_lF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0, τ_0_1 where τ_0_0 : Swift.Equatable, τ_0_1 : Swift.Equatable>",
        "sugared_genericSig": "<T1, T2 where T1 : Swift.Equatable, T2 : Swift.Equatable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "==",
        "printedName": "==(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "AsyncExpectation",
            "printedName": "Nimble.AsyncExpectation<(τ_0_0, τ_0_1)>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(τ_0_0, τ_0_1)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  }
                ]
              }
            ],
            "usr": "s:6Nimble16AsyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "(τ_0_0, τ_0_1)?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(τ_0_0, τ_0_1)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  }
                ]
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2eeoiyyAA16AsyncExpectationVyx_q_tG_x_q_tSgtYaSQRzSQR_r0_lF",
        "mangledName": "$s6Nimble2eeoiyyAA16AsyncExpectationVyx_q_tG_x_q_tSgtYaSQRzSQR_r0_lF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0, τ_0_1 where τ_0_0 : Swift.Equatable, τ_0_1 : Swift.Equatable>",
        "sugared_genericSig": "<T1, T2 where T1 : Swift.Equatable, T2 : Swift.Equatable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "!=",
        "printedName": "!=(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "SyncExpectation",
            "printedName": "Nimble.SyncExpectation<(τ_0_0, τ_0_1)>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(τ_0_0, τ_0_1)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  }
                ]
              }
            ],
            "usr": "s:6Nimble15SyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "(τ_0_0, τ_0_1)?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(τ_0_0, τ_0_1)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  }
                ]
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2neoiyyAA15SyncExpectationVyx_q_tG_x_q_tSgtSQRzSQR_r0_lF",
        "mangledName": "$s6Nimble2neoiyyAA15SyncExpectationVyx_q_tG_x_q_tSgtSQRzSQR_r0_lF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0, τ_0_1 where τ_0_0 : Swift.Equatable, τ_0_1 : Swift.Equatable>",
        "sugared_genericSig": "<T1, T2 where T1 : Swift.Equatable, T2 : Swift.Equatable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "!=",
        "printedName": "!=(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "AsyncExpectation",
            "printedName": "Nimble.AsyncExpectation<(τ_0_0, τ_0_1)>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(τ_0_0, τ_0_1)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  }
                ]
              }
            ],
            "usr": "s:6Nimble16AsyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "(τ_0_0, τ_0_1)?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(τ_0_0, τ_0_1)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  }
                ]
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2neoiyyAA16AsyncExpectationVyx_q_tG_x_q_tSgtYaSQRzSQR_r0_lF",
        "mangledName": "$s6Nimble2neoiyyAA16AsyncExpectationVyx_q_tG_x_q_tSgtYaSQRzSQR_r0_lF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0, τ_0_1 where τ_0_0 : Swift.Equatable, τ_0_1 : Swift.Equatable>",
        "sugared_genericSig": "<T1, T2 where T1 : Swift.Equatable, T2 : Swift.Equatable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "equal",
        "printedName": "equal(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<(τ_0_0, τ_0_1, τ_0_2)>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(τ_0_0, τ_0_1, τ_0_2)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_2"
                  }
                ]
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "(τ_0_0, τ_0_1, τ_0_2)?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(τ_0_0, τ_0_1, τ_0_2)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_2"
                  }
                ]
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble5equalyAA9PredicateVyx_q_q0_tGx_q_q0_tSgSQRzSQR_SQR0_r1_lF",
        "mangledName": "$s6Nimble5equalyAA9PredicateVyx_q_q0_tGx_q_q0_tSgSQRzSQR_SQR0_r1_lF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0, τ_0_1, τ_0_2 where τ_0_0 : Swift.Equatable, τ_0_1 : Swift.Equatable, τ_0_2 : Swift.Equatable>",
        "sugared_genericSig": "<T1, T2, T3 where T1 : Swift.Equatable, T2 : Swift.Equatable, T3 : Swift.Equatable>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "==",
        "printedName": "==(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "SyncExpectation",
            "printedName": "Nimble.SyncExpectation<(τ_0_0, τ_0_1, τ_0_2)>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(τ_0_0, τ_0_1, τ_0_2)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_2"
                  }
                ]
              }
            ],
            "usr": "s:6Nimble15SyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "(τ_0_0, τ_0_1, τ_0_2)?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(τ_0_0, τ_0_1, τ_0_2)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_2"
                  }
                ]
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2eeoiyyAA15SyncExpectationVyx_q_q0_tG_x_q_q0_tSgtSQRzSQR_SQR0_r1_lF",
        "mangledName": "$s6Nimble2eeoiyyAA15SyncExpectationVyx_q_q0_tG_x_q_q0_tSgtSQRzSQR_SQR0_r1_lF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0, τ_0_1, τ_0_2 where τ_0_0 : Swift.Equatable, τ_0_1 : Swift.Equatable, τ_0_2 : Swift.Equatable>",
        "sugared_genericSig": "<T1, T2, T3 where T1 : Swift.Equatable, T2 : Swift.Equatable, T3 : Swift.Equatable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "==",
        "printedName": "==(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "AsyncExpectation",
            "printedName": "Nimble.AsyncExpectation<(τ_0_0, τ_0_1, τ_0_2)>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(τ_0_0, τ_0_1, τ_0_2)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_2"
                  }
                ]
              }
            ],
            "usr": "s:6Nimble16AsyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "(τ_0_0, τ_0_1, τ_0_2)?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(τ_0_0, τ_0_1, τ_0_2)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_2"
                  }
                ]
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2eeoiyyAA16AsyncExpectationVyx_q_q0_tG_x_q_q0_tSgtYaSQRzSQR_SQR0_r1_lF",
        "mangledName": "$s6Nimble2eeoiyyAA16AsyncExpectationVyx_q_q0_tG_x_q_q0_tSgtYaSQRzSQR_SQR0_r1_lF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0, τ_0_1, τ_0_2 where τ_0_0 : Swift.Equatable, τ_0_1 : Swift.Equatable, τ_0_2 : Swift.Equatable>",
        "sugared_genericSig": "<T1, T2, T3 where T1 : Swift.Equatable, T2 : Swift.Equatable, T3 : Swift.Equatable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "!=",
        "printedName": "!=(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "SyncExpectation",
            "printedName": "Nimble.SyncExpectation<(τ_0_0, τ_0_1, τ_0_2)>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(τ_0_0, τ_0_1, τ_0_2)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_2"
                  }
                ]
              }
            ],
            "usr": "s:6Nimble15SyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "(τ_0_0, τ_0_1, τ_0_2)?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(τ_0_0, τ_0_1, τ_0_2)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_2"
                  }
                ]
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2neoiyyAA15SyncExpectationVyx_q_q0_tG_x_q_q0_tSgtSQRzSQR_SQR0_r1_lF",
        "mangledName": "$s6Nimble2neoiyyAA15SyncExpectationVyx_q_q0_tG_x_q_q0_tSgtSQRzSQR_SQR0_r1_lF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0, τ_0_1, τ_0_2 where τ_0_0 : Swift.Equatable, τ_0_1 : Swift.Equatable, τ_0_2 : Swift.Equatable>",
        "sugared_genericSig": "<T1, T2, T3 where T1 : Swift.Equatable, T2 : Swift.Equatable, T3 : Swift.Equatable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "!=",
        "printedName": "!=(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "AsyncExpectation",
            "printedName": "Nimble.AsyncExpectation<(τ_0_0, τ_0_1, τ_0_2)>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(τ_0_0, τ_0_1, τ_0_2)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_2"
                  }
                ]
              }
            ],
            "usr": "s:6Nimble16AsyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "(τ_0_0, τ_0_1, τ_0_2)?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(τ_0_0, τ_0_1, τ_0_2)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_2"
                  }
                ]
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2neoiyyAA16AsyncExpectationVyx_q_q0_tG_x_q_q0_tSgtYaSQRzSQR_SQR0_r1_lF",
        "mangledName": "$s6Nimble2neoiyyAA16AsyncExpectationVyx_q_q0_tG_x_q_q0_tSgtYaSQRzSQR_SQR0_r1_lF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0, τ_0_1, τ_0_2 where τ_0_0 : Swift.Equatable, τ_0_1 : Swift.Equatable, τ_0_2 : Swift.Equatable>",
        "sugared_genericSig": "<T1, T2, T3 where T1 : Swift.Equatable, T2 : Swift.Equatable, T3 : Swift.Equatable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "equal",
        "printedName": "equal(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<(τ_0_0, τ_0_1, τ_0_2, τ_0_3)>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_2"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_3"
                  }
                ]
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3)?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_2"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_3"
                  }
                ]
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble5equalyAA9PredicateVyx_q_q0_q1_tGx_q_q0_q1_tSgSQRzSQR_SQR0_SQR1_r2_lF",
        "mangledName": "$s6Nimble5equalyAA9PredicateVyx_q_q0_q1_tGx_q_q0_q1_tSgSQRzSQR_SQR0_SQR1_r2_lF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0, τ_0_1, τ_0_2, τ_0_3 where τ_0_0 : Swift.Equatable, τ_0_1 : Swift.Equatable, τ_0_2 : Swift.Equatable, τ_0_3 : Swift.Equatable>",
        "sugared_genericSig": "<T1, T2, T3, T4 where T1 : Swift.Equatable, T2 : Swift.Equatable, T3 : Swift.Equatable, T4 : Swift.Equatable>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "==",
        "printedName": "==(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "SyncExpectation",
            "printedName": "Nimble.SyncExpectation<(τ_0_0, τ_0_1, τ_0_2, τ_0_3)>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_2"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_3"
                  }
                ]
              }
            ],
            "usr": "s:6Nimble15SyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3)?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_2"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_3"
                  }
                ]
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2eeoiyyAA15SyncExpectationVyx_q_q0_q1_tG_x_q_q0_q1_tSgtSQRzSQR_SQR0_SQR1_r2_lF",
        "mangledName": "$s6Nimble2eeoiyyAA15SyncExpectationVyx_q_q0_q1_tG_x_q_q0_q1_tSgtSQRzSQR_SQR0_SQR1_r2_lF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0, τ_0_1, τ_0_2, τ_0_3 where τ_0_0 : Swift.Equatable, τ_0_1 : Swift.Equatable, τ_0_2 : Swift.Equatable, τ_0_3 : Swift.Equatable>",
        "sugared_genericSig": "<T1, T2, T3, T4 where T1 : Swift.Equatable, T2 : Swift.Equatable, T3 : Swift.Equatable, T4 : Swift.Equatable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "==",
        "printedName": "==(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "AsyncExpectation",
            "printedName": "Nimble.AsyncExpectation<(τ_0_0, τ_0_1, τ_0_2, τ_0_3)>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_2"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_3"
                  }
                ]
              }
            ],
            "usr": "s:6Nimble16AsyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3)?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_2"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_3"
                  }
                ]
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2eeoiyyAA16AsyncExpectationVyx_q_q0_q1_tG_x_q_q0_q1_tSgtYaSQRzSQR_SQR0_SQR1_r2_lF",
        "mangledName": "$s6Nimble2eeoiyyAA16AsyncExpectationVyx_q_q0_q1_tG_x_q_q0_q1_tSgtYaSQRzSQR_SQR0_SQR1_r2_lF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0, τ_0_1, τ_0_2, τ_0_3 where τ_0_0 : Swift.Equatable, τ_0_1 : Swift.Equatable, τ_0_2 : Swift.Equatable, τ_0_3 : Swift.Equatable>",
        "sugared_genericSig": "<T1, T2, T3, T4 where T1 : Swift.Equatable, T2 : Swift.Equatable, T3 : Swift.Equatable, T4 : Swift.Equatable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "!=",
        "printedName": "!=(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "SyncExpectation",
            "printedName": "Nimble.SyncExpectation<(τ_0_0, τ_0_1, τ_0_2, τ_0_3)>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_2"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_3"
                  }
                ]
              }
            ],
            "usr": "s:6Nimble15SyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3)?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_2"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_3"
                  }
                ]
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2neoiyyAA15SyncExpectationVyx_q_q0_q1_tG_x_q_q0_q1_tSgtSQRzSQR_SQR0_SQR1_r2_lF",
        "mangledName": "$s6Nimble2neoiyyAA15SyncExpectationVyx_q_q0_q1_tG_x_q_q0_q1_tSgtSQRzSQR_SQR0_SQR1_r2_lF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0, τ_0_1, τ_0_2, τ_0_3 where τ_0_0 : Swift.Equatable, τ_0_1 : Swift.Equatable, τ_0_2 : Swift.Equatable, τ_0_3 : Swift.Equatable>",
        "sugared_genericSig": "<T1, T2, T3, T4 where T1 : Swift.Equatable, T2 : Swift.Equatable, T3 : Swift.Equatable, T4 : Swift.Equatable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "!=",
        "printedName": "!=(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "AsyncExpectation",
            "printedName": "Nimble.AsyncExpectation<(τ_0_0, τ_0_1, τ_0_2, τ_0_3)>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_2"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_3"
                  }
                ]
              }
            ],
            "usr": "s:6Nimble16AsyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3)?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_2"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_3"
                  }
                ]
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2neoiyyAA16AsyncExpectationVyx_q_q0_q1_tG_x_q_q0_q1_tSgtYaSQRzSQR_SQR0_SQR1_r2_lF",
        "mangledName": "$s6Nimble2neoiyyAA16AsyncExpectationVyx_q_q0_q1_tG_x_q_q0_q1_tSgtYaSQRzSQR_SQR0_SQR1_r2_lF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0, τ_0_1, τ_0_2, τ_0_3 where τ_0_0 : Swift.Equatable, τ_0_1 : Swift.Equatable, τ_0_2 : Swift.Equatable, τ_0_3 : Swift.Equatable>",
        "sugared_genericSig": "<T1, T2, T3, T4 where T1 : Swift.Equatable, T2 : Swift.Equatable, T3 : Swift.Equatable, T4 : Swift.Equatable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "equal",
        "printedName": "equal(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4)>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_2"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_3"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_4"
                  }
                ]
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4)?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_2"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_3"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_4"
                  }
                ]
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble5equalyAA9PredicateVyx_q_q0_q1_q2_tGx_q_q0_q1_q2_tSgSQRzSQR_SQR0_SQR1_SQR2_r3_lF",
        "mangledName": "$s6Nimble5equalyAA9PredicateVyx_q_q0_q1_q2_tGx_q_q0_q1_q2_tSgSQRzSQR_SQR0_SQR1_SQR2_r3_lF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4 where τ_0_0 : Swift.Equatable, τ_0_1 : Swift.Equatable, τ_0_2 : Swift.Equatable, τ_0_3 : Swift.Equatable, τ_0_4 : Swift.Equatable>",
        "sugared_genericSig": "<T1, T2, T3, T4, T5 where T1 : Swift.Equatable, T2 : Swift.Equatable, T3 : Swift.Equatable, T4 : Swift.Equatable, T5 : Swift.Equatable>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "==",
        "printedName": "==(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "SyncExpectation",
            "printedName": "Nimble.SyncExpectation<(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4)>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_2"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_3"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_4"
                  }
                ]
              }
            ],
            "usr": "s:6Nimble15SyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4)?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_2"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_3"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_4"
                  }
                ]
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2eeoiyyAA15SyncExpectationVyx_q_q0_q1_q2_tG_x_q_q0_q1_q2_tSgtSQRzSQR_SQR0_SQR1_SQR2_r3_lF",
        "mangledName": "$s6Nimble2eeoiyyAA15SyncExpectationVyx_q_q0_q1_q2_tG_x_q_q0_q1_q2_tSgtSQRzSQR_SQR0_SQR1_SQR2_r3_lF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4 where τ_0_0 : Swift.Equatable, τ_0_1 : Swift.Equatable, τ_0_2 : Swift.Equatable, τ_0_3 : Swift.Equatable, τ_0_4 : Swift.Equatable>",
        "sugared_genericSig": "<T1, T2, T3, T4, T5 where T1 : Swift.Equatable, T2 : Swift.Equatable, T3 : Swift.Equatable, T4 : Swift.Equatable, T5 : Swift.Equatable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "==",
        "printedName": "==(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "AsyncExpectation",
            "printedName": "Nimble.AsyncExpectation<(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4)>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_2"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_3"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_4"
                  }
                ]
              }
            ],
            "usr": "s:6Nimble16AsyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4)?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_2"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_3"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_4"
                  }
                ]
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2eeoiyyAA16AsyncExpectationVyx_q_q0_q1_q2_tG_x_q_q0_q1_q2_tSgtYaSQRzSQR_SQR0_SQR1_SQR2_r3_lF",
        "mangledName": "$s6Nimble2eeoiyyAA16AsyncExpectationVyx_q_q0_q1_q2_tG_x_q_q0_q1_q2_tSgtYaSQRzSQR_SQR0_SQR1_SQR2_r3_lF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4 where τ_0_0 : Swift.Equatable, τ_0_1 : Swift.Equatable, τ_0_2 : Swift.Equatable, τ_0_3 : Swift.Equatable, τ_0_4 : Swift.Equatable>",
        "sugared_genericSig": "<T1, T2, T3, T4, T5 where T1 : Swift.Equatable, T2 : Swift.Equatable, T3 : Swift.Equatable, T4 : Swift.Equatable, T5 : Swift.Equatable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "!=",
        "printedName": "!=(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "SyncExpectation",
            "printedName": "Nimble.SyncExpectation<(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4)>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_2"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_3"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_4"
                  }
                ]
              }
            ],
            "usr": "s:6Nimble15SyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4)?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_2"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_3"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_4"
                  }
                ]
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2neoiyyAA15SyncExpectationVyx_q_q0_q1_q2_tG_x_q_q0_q1_q2_tSgtSQRzSQR_SQR0_SQR1_SQR2_r3_lF",
        "mangledName": "$s6Nimble2neoiyyAA15SyncExpectationVyx_q_q0_q1_q2_tG_x_q_q0_q1_q2_tSgtSQRzSQR_SQR0_SQR1_SQR2_r3_lF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4 where τ_0_0 : Swift.Equatable, τ_0_1 : Swift.Equatable, τ_0_2 : Swift.Equatable, τ_0_3 : Swift.Equatable, τ_0_4 : Swift.Equatable>",
        "sugared_genericSig": "<T1, T2, T3, T4, T5 where T1 : Swift.Equatable, T2 : Swift.Equatable, T3 : Swift.Equatable, T4 : Swift.Equatable, T5 : Swift.Equatable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "!=",
        "printedName": "!=(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "AsyncExpectation",
            "printedName": "Nimble.AsyncExpectation<(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4)>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_2"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_3"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_4"
                  }
                ]
              }
            ],
            "usr": "s:6Nimble16AsyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4)?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_2"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_3"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_4"
                  }
                ]
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2neoiyyAA16AsyncExpectationVyx_q_q0_q1_q2_tG_x_q_q0_q1_q2_tSgtYaSQRzSQR_SQR0_SQR1_SQR2_r3_lF",
        "mangledName": "$s6Nimble2neoiyyAA16AsyncExpectationVyx_q_q0_q1_q2_tG_x_q_q0_q1_q2_tSgtYaSQRzSQR_SQR0_SQR1_SQR2_r3_lF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4 where τ_0_0 : Swift.Equatable, τ_0_1 : Swift.Equatable, τ_0_2 : Swift.Equatable, τ_0_3 : Swift.Equatable, τ_0_4 : Swift.Equatable>",
        "sugared_genericSig": "<T1, T2, T3, T4, T5 where T1 : Swift.Equatable, T2 : Swift.Equatable, T3 : Swift.Equatable, T4 : Swift.Equatable, T5 : Swift.Equatable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "equal",
        "printedName": "equal(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4, τ_0_5)>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4, τ_0_5)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_2"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_3"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_4"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_5"
                  }
                ]
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4, τ_0_5)?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4, τ_0_5)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_2"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_3"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_4"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_5"
                  }
                ]
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble5equalyAA9PredicateVyx_q_q0_q1_q2_q3_tGx_q_q0_q1_q2_q3_tSgSQRzSQR_SQR0_SQR1_SQR2_SQR3_r4_lF",
        "mangledName": "$s6Nimble5equalyAA9PredicateVyx_q_q0_q1_q2_q3_tGx_q_q0_q1_q2_q3_tSgSQRzSQR_SQR0_SQR1_SQR2_SQR3_r4_lF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4, τ_0_5 where τ_0_0 : Swift.Equatable, τ_0_1 : Swift.Equatable, τ_0_2 : Swift.Equatable, τ_0_3 : Swift.Equatable, τ_0_4 : Swift.Equatable, τ_0_5 : Swift.Equatable>",
        "sugared_genericSig": "<T1, T2, T3, T4, T5, T6 where T1 : Swift.Equatable, T2 : Swift.Equatable, T3 : Swift.Equatable, T4 : Swift.Equatable, T5 : Swift.Equatable, T6 : Swift.Equatable>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "==",
        "printedName": "==(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "SyncExpectation",
            "printedName": "Nimble.SyncExpectation<(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4, τ_0_5)>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4, τ_0_5)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_2"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_3"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_4"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_5"
                  }
                ]
              }
            ],
            "usr": "s:6Nimble15SyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4, τ_0_5)?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4, τ_0_5)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_2"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_3"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_4"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_5"
                  }
                ]
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2eeoiyyAA15SyncExpectationVyx_q_q0_q1_q2_q3_tG_x_q_q0_q1_q2_q3_tSgtSQRzSQR_SQR0_SQR1_SQR2_SQR3_r4_lF",
        "mangledName": "$s6Nimble2eeoiyyAA15SyncExpectationVyx_q_q0_q1_q2_q3_tG_x_q_q0_q1_q2_q3_tSgtSQRzSQR_SQR0_SQR1_SQR2_SQR3_r4_lF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4, τ_0_5 where τ_0_0 : Swift.Equatable, τ_0_1 : Swift.Equatable, τ_0_2 : Swift.Equatable, τ_0_3 : Swift.Equatable, τ_0_4 : Swift.Equatable, τ_0_5 : Swift.Equatable>",
        "sugared_genericSig": "<T1, T2, T3, T4, T5, T6 where T1 : Swift.Equatable, T2 : Swift.Equatable, T3 : Swift.Equatable, T4 : Swift.Equatable, T5 : Swift.Equatable, T6 : Swift.Equatable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "==",
        "printedName": "==(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "AsyncExpectation",
            "printedName": "Nimble.AsyncExpectation<(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4, τ_0_5)>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4, τ_0_5)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_2"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_3"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_4"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_5"
                  }
                ]
              }
            ],
            "usr": "s:6Nimble16AsyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4, τ_0_5)?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4, τ_0_5)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_2"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_3"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_4"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_5"
                  }
                ]
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2eeoiyyAA16AsyncExpectationVyx_q_q0_q1_q2_q3_tG_x_q_q0_q1_q2_q3_tSgtYaSQRzSQR_SQR0_SQR1_SQR2_SQR3_r4_lF",
        "mangledName": "$s6Nimble2eeoiyyAA16AsyncExpectationVyx_q_q0_q1_q2_q3_tG_x_q_q0_q1_q2_q3_tSgtYaSQRzSQR_SQR0_SQR1_SQR2_SQR3_r4_lF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4, τ_0_5 where τ_0_0 : Swift.Equatable, τ_0_1 : Swift.Equatable, τ_0_2 : Swift.Equatable, τ_0_3 : Swift.Equatable, τ_0_4 : Swift.Equatable, τ_0_5 : Swift.Equatable>",
        "sugared_genericSig": "<T1, T2, T3, T4, T5, T6 where T1 : Swift.Equatable, T2 : Swift.Equatable, T3 : Swift.Equatable, T4 : Swift.Equatable, T5 : Swift.Equatable, T6 : Swift.Equatable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "!=",
        "printedName": "!=(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "SyncExpectation",
            "printedName": "Nimble.SyncExpectation<(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4, τ_0_5)>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4, τ_0_5)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_2"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_3"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_4"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_5"
                  }
                ]
              }
            ],
            "usr": "s:6Nimble15SyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4, τ_0_5)?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4, τ_0_5)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_2"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_3"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_4"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_5"
                  }
                ]
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2neoiyyAA15SyncExpectationVyx_q_q0_q1_q2_q3_tG_x_q_q0_q1_q2_q3_tSgtSQRzSQR_SQR0_SQR1_SQR2_SQR3_r4_lF",
        "mangledName": "$s6Nimble2neoiyyAA15SyncExpectationVyx_q_q0_q1_q2_q3_tG_x_q_q0_q1_q2_q3_tSgtSQRzSQR_SQR0_SQR1_SQR2_SQR3_r4_lF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4, τ_0_5 where τ_0_0 : Swift.Equatable, τ_0_1 : Swift.Equatable, τ_0_2 : Swift.Equatable, τ_0_3 : Swift.Equatable, τ_0_4 : Swift.Equatable, τ_0_5 : Swift.Equatable>",
        "sugared_genericSig": "<T1, T2, T3, T4, T5, T6 where T1 : Swift.Equatable, T2 : Swift.Equatable, T3 : Swift.Equatable, T4 : Swift.Equatable, T5 : Swift.Equatable, T6 : Swift.Equatable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "!=",
        "printedName": "!=(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "AsyncExpectation",
            "printedName": "Nimble.AsyncExpectation<(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4, τ_0_5)>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4, τ_0_5)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_2"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_3"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_4"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_5"
                  }
                ]
              }
            ],
            "usr": "s:6Nimble16AsyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4, τ_0_5)?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4, τ_0_5)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_1"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_2"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_3"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_4"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_5"
                  }
                ]
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2neoiyyAA16AsyncExpectationVyx_q_q0_q1_q2_q3_tG_x_q_q0_q1_q2_q3_tSgtYaSQRzSQR_SQR0_SQR1_SQR2_SQR3_r4_lF",
        "mangledName": "$s6Nimble2neoiyyAA16AsyncExpectationVyx_q_q0_q1_q2_q3_tG_x_q_q0_q1_q2_q3_tSgtYaSQRzSQR_SQR0_SQR1_SQR2_SQR3_r4_lF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0, τ_0_1, τ_0_2, τ_0_3, τ_0_4, τ_0_5 where τ_0_0 : Swift.Equatable, τ_0_1 : Swift.Equatable, τ_0_2 : Swift.Equatable, τ_0_3 : Swift.Equatable, τ_0_4 : Swift.Equatable, τ_0_5 : Swift.Equatable>",
        "sugared_genericSig": "<T1, T2, T3, T4, T5, T6 where T1 : Swift.Equatable, T2 : Swift.Equatable, T3 : Swift.Equatable, T4 : Swift.Equatable, T5 : Swift.Equatable, T6 : Swift.Equatable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "beWithin",
        "printedName": "beWithin(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "Range",
            "printedName": "Swift.Range<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:Sn"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble8beWithinyAA9PredicateVyxGSnyxGSLRzlF",
        "mangledName": "$s6Nimble8beWithinyAA9PredicateVyxGSnyxGSLRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Comparable>",
        "sugared_genericSig": "<T where T : Swift.Comparable>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "beWithin",
        "printedName": "beWithin(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "ClosedRange",
            "printedName": "Swift.ClosedRange<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:SN"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble8beWithinyAA9PredicateVyxGSNyxGSLRzlF",
        "mangledName": "$s6Nimble8beWithinyAA9PredicateVyxGSNyxGSLRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Comparable>",
        "sugared_genericSig": "<T where T : Swift.Comparable>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "beLessThan",
        "printedName": "beLessThan(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "τ_0_0?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble10beLessThanyAA9PredicateVyxGxSgSLRzlF",
        "mangledName": "$s6Nimble10beLessThanyAA9PredicateVyxGxSgSLRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Comparable>",
        "sugared_genericSig": "<T where T : Swift.Comparable>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "<",
        "printedName": "<(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "SyncExpectation",
            "printedName": "Nimble.SyncExpectation<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble15SyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "GenericTypeParam",
            "printedName": "τ_0_0"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble1loiyyAA15SyncExpectationVyxG_xtSLRzlF",
        "mangledName": "$s6Nimble1loiyyAA15SyncExpectationVyxG_xtSLRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Comparable>",
        "sugared_genericSig": "<V where V : Swift.Comparable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "<",
        "printedName": "<(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "AsyncExpectation",
            "printedName": "Nimble.AsyncExpectation<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble16AsyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "GenericTypeParam",
            "printedName": "τ_0_0"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble1loiyyAA16AsyncExpectationVyxG_xtYaSLRzlF",
        "mangledName": "$s6Nimble1loiyyAA16AsyncExpectationVyxG_xtYaSLRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Comparable>",
        "sugared_genericSig": "<V where V : Swift.Comparable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "Function",
        "name": "beLessThan",
        "printedName": "beLessThan(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "τ_0_0?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble10beLessThanyAA9PredicateVyxGxSgAA13NMBComparableRzlF",
        "mangledName": "$s6Nimble10beLessThanyAA9PredicateVyxGxSgAA13NMBComparableRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Nimble.NMBComparable>",
        "sugared_genericSig": "<T where T : Nimble.NMBComparable>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "<",
        "printedName": "<(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "SyncExpectation",
            "printedName": "Nimble.SyncExpectation<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble15SyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "τ_0_0?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble1loiyyAA15SyncExpectationVyxG_xSgtAA13NMBComparableRzlF",
        "mangledName": "$s6Nimble1loiyyAA15SyncExpectationVyxG_xSgtAA13NMBComparableRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Nimble.NMBComparable>",
        "sugared_genericSig": "<V where V : Nimble.NMBComparable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "<",
        "printedName": "<(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "AsyncExpectation",
            "printedName": "Nimble.AsyncExpectation<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble16AsyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "τ_0_0?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble1loiyyAA16AsyncExpectationVyxG_xSgtYaAA13NMBComparableRzlF",
        "mangledName": "$s6Nimble1loiyyAA16AsyncExpectationVyxG_xSgtYaAA13NMBComparableRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Nimble.NMBComparable>",
        "sugared_genericSig": "<V where V : Nimble.NMBComparable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "beGreaterThan",
        "printedName": "beGreaterThan(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "τ_0_0?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble13beGreaterThanyAA9PredicateVyxGxSgSLRzlF",
        "mangledName": "$s6Nimble13beGreaterThanyAA9PredicateVyxGxSgSLRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Comparable>",
        "sugared_genericSig": "<T where T : Swift.Comparable>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": ">",
        "printedName": ">(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "SyncExpectation",
            "printedName": "Nimble.SyncExpectation<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble15SyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "GenericTypeParam",
            "printedName": "τ_0_0"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble1goiyyAA15SyncExpectationVyxG_xtSLRzlF",
        "mangledName": "$s6Nimble1goiyyAA15SyncExpectationVyxG_xtSLRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Comparable>",
        "sugared_genericSig": "<T where T : Swift.Comparable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": ">",
        "printedName": ">(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "AsyncExpectation",
            "printedName": "Nimble.AsyncExpectation<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble16AsyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "GenericTypeParam",
            "printedName": "τ_0_0"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble1goiyyAA16AsyncExpectationVyxG_xtYaSLRzlF",
        "mangledName": "$s6Nimble1goiyyAA16AsyncExpectationVyxG_xtYaSLRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Comparable>",
        "sugared_genericSig": "<T where T : Swift.Comparable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "Function",
        "name": "beGreaterThan",
        "printedName": "beGreaterThan(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "τ_0_0?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble13beGreaterThanyAA9PredicateVyxGxSgAA13NMBComparableRzlF",
        "mangledName": "$s6Nimble13beGreaterThanyAA9PredicateVyxGxSgAA13NMBComparableRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Nimble.NMBComparable>",
        "sugared_genericSig": "<T where T : Nimble.NMBComparable>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": ">",
        "printedName": ">(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "SyncExpectation",
            "printedName": "Nimble.SyncExpectation<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble15SyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "τ_0_0?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble1goiyyAA15SyncExpectationVyxG_xSgtAA13NMBComparableRzlF",
        "mangledName": "$s6Nimble1goiyyAA15SyncExpectationVyxG_xSgtAA13NMBComparableRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Nimble.NMBComparable>",
        "sugared_genericSig": "<T where T : Nimble.NMBComparable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": ">",
        "printedName": ">(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "AsyncExpectation",
            "printedName": "Nimble.AsyncExpectation<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble16AsyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "τ_0_0?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble1goiyyAA16AsyncExpectationVyxG_xSgtYaAA13NMBComparableRzlF",
        "mangledName": "$s6Nimble1goiyyAA16AsyncExpectationVyxG_xSgtYaAA13NMBComparableRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Nimble.NMBComparable>",
        "sugared_genericSig": "<T where T : Nimble.NMBComparable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "withAssertionHandler",
        "printedName": "withAssertionHandler(_:file:line:closure:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "AssertionHandler",
            "printedName": "Nimble.AssertionHandler",
            "usr": "s:6Nimble16AssertionHandlerP"
          },
          {
            "kind": "TypeNominal",
            "name": "String",
            "printedName": "Swift.String",
            "hasDefaultArg": true,
            "usr": "s:SS"
          },
          {
            "kind": "TypeNominal",
            "name": "UInt",
            "printedName": "Swift.UInt",
            "hasDefaultArg": true,
            "usr": "s:Su"
          },
          {
            "kind": "TypeFunc",
            "name": "Function",
            "printedName": "() async throws -> ()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "typeAttributes": [
              "noescape"
            ]
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble20withAssertionHandler_4file4line7closureyAA0cD0_p_SSSuyyYaKXEtYaF",
        "mangledName": "$s6Nimble20withAssertionHandler_4file4line7closureyAA0cD0_p_SSSuyyYaKXEtYaF",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "gatherExpectations",
        "printedName": "gatherExpectations(silently:closure:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Array",
            "printedName": "[Nimble.AssertionRecord]",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "AssertionRecord",
                "printedName": "Nimble.AssertionRecord",
                "usr": "s:6Nimble15AssertionRecordV"
              }
            ],
            "usr": "s:Sa"
          },
          {
            "kind": "TypeNominal",
            "name": "Bool",
            "printedName": "Swift.Bool",
            "hasDefaultArg": true,
            "usr": "s:Sb"
          },
          {
            "kind": "TypeFunc",
            "name": "Function",
            "printedName": "() async -> ()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "typeAttributes": [
              "noescape"
            ]
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble18gatherExpectations8silently7closureSayAA15AssertionRecordVGSb_yyYaXEtYaF",
        "mangledName": "$s6Nimble18gatherExpectations8silently7closureSayAA15AssertionRecordVGSb_yyYaXEtYaF",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "gatherFailingExpectations",
        "printedName": "gatherFailingExpectations(silently:closure:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Array",
            "printedName": "[Nimble.AssertionRecord]",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "AssertionRecord",
                "printedName": "Nimble.AssertionRecord",
                "usr": "s:6Nimble15AssertionRecordV"
              }
            ],
            "usr": "s:Sa"
          },
          {
            "kind": "TypeNominal",
            "name": "Bool",
            "printedName": "Swift.Bool",
            "hasDefaultArg": true,
            "usr": "s:Sb"
          },
          {
            "kind": "TypeFunc",
            "name": "Function",
            "printedName": "() async -> ()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "typeAttributes": [
              "noescape"
            ]
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble25gatherFailingExpectations8silently7closureSayAA15AssertionRecordVGSb_yyYaXEtYaF",
        "mangledName": "$s6Nimble25gatherFailingExpectations8silently7closureSayAA15AssertionRecordVGSb_yyYaXEtYaF",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "TypeDecl",
        "name": "AssertionHandler",
        "printedName": "AssertionHandler",
        "children": [
          {
            "kind": "Function",
            "name": "assert",
            "printedName": "assert(_:message:location:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              },
              {
                "kind": "TypeNominal",
                "name": "FailureMessage",
                "printedName": "Nimble.FailureMessage",
                "usr": "c:@M@Nimble@objc(cs)FailureMessage"
              },
              {
                "kind": "TypeNominal",
                "name": "SourceLocation",
                "printedName": "Nimble.SourceLocation",
                "usr": "c:@M@Nimble@objc(cs)SourceLocation"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble16AssertionHandlerP6assert_7message8locationySb_AA14FailureMessageCAA14SourceLocationCtF",
            "mangledName": "$s6Nimble16AssertionHandlerP6assert_7message8locationySb_AA14FailureMessageCAA14SourceLocationCtF",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0 where τ_0_0 : Nimble.AssertionHandler>",
            "sugared_genericSig": "<Self where Self : Nimble.AssertionHandler>",
            "protocolReq": true,
            "reqNewWitnessTableEntry": true,
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Protocol",
        "usr": "s:6Nimble16AssertionHandlerP",
        "mangledName": "$s6Nimble16AssertionHandlerP",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ]
      },
      {
        "kind": "Var",
        "name": "NimbleAssertionHandler",
        "printedName": "NimbleAssertionHandler",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "AssertionHandler",
            "printedName": "Nimble.AssertionHandler",
            "usr": "s:6Nimble16AssertionHandlerP"
          }
        ],
        "declKind": "Var",
        "usr": "s:6Nimble0A16AssertionHandlerAA0bC0_pvp",
        "mangledName": "$s6Nimble0A16AssertionHandlerAA0bC0_pvp",
        "moduleName": "Nimble",
        "declAttributes": [
          "HasInitialValue",
          "HasStorage",
          "AccessControl",
          "RawDocComment"
        ],
        "hasStorage": true,
        "accessors": [
          {
            "kind": "Accessor",
            "name": "Get",
            "printedName": "Get()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "AssertionHandler",
                "printedName": "Nimble.AssertionHandler",
                "usr": "s:6Nimble16AssertionHandlerP"
              }
            ],
            "declKind": "Accessor",
            "usr": "s:6Nimble0A16AssertionHandlerAA0bC0_pvg",
            "mangledName": "$s6Nimble0A16AssertionHandlerAA0bC0_pvg",
            "moduleName": "Nimble",
            "implicit": true,
            "accessorKind": "get"
          },
          {
            "kind": "Accessor",
            "name": "Set",
            "printedName": "Set()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "AssertionHandler",
                "printedName": "Nimble.AssertionHandler",
                "usr": "s:6Nimble16AssertionHandlerP"
              }
            ],
            "declKind": "Accessor",
            "usr": "s:6Nimble0A16AssertionHandlerAA0bC0_pvs",
            "mangledName": "$s6Nimble0A16AssertionHandlerAA0bC0_pvs",
            "moduleName": "Nimble",
            "implicit": true,
            "accessorKind": "set"
          },
          {
            "kind": "Accessor",
            "name": "Modify",
            "printedName": "Modify()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "declKind": "Accessor",
            "usr": "s:6Nimble0A16AssertionHandlerAA0bC0_pvM",
            "mangledName": "$s6Nimble0A16AssertionHandlerAA0bC0_pvM",
            "moduleName": "Nimble",
            "implicit": true,
            "accessorKind": "_modify"
          }
        ]
      },
      {
        "kind": "Function",
        "name": "matchError",
        "printedName": "matchError(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<Swift.Error>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Error",
                "printedName": "Swift.Error",
                "usr": "s:s5ErrorP"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "GenericTypeParam",
            "printedName": "τ_0_0"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble10matchErroryAA9PredicateVys0C0_pGxsAERzlF",
        "mangledName": "$s6Nimble10matchErroryAA9PredicateVys0C0_pGxsAERzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Error>",
        "sugared_genericSig": "<T where T : Swift.Error>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "matchError",
        "printedName": "matchError(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<Swift.Error>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Error",
                "printedName": "Swift.Error",
                "usr": "s:s5ErrorP"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "GenericTypeParam",
            "printedName": "τ_0_0"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble10matchErroryAA9PredicateVys0C0_pGxSQRzsAERzlF",
        "mangledName": "$s6Nimble10matchErroryAA9PredicateVys0C0_pGxSQRzsAERzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Equatable, τ_0_0 : Swift.Error>",
        "sugared_genericSig": "<T where T : Swift.Equatable, T : Swift.Error>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "matchError",
        "printedName": "matchError(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<Swift.Error>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Error",
                "printedName": "Swift.Error",
                "usr": "s:s5ErrorP"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "Metatype",
            "printedName": "τ_0_0.Type",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ]
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble10matchErroryAA9PredicateVys0C0_pGxmsAERzlF",
        "mangledName": "$s6Nimble10matchErroryAA9PredicateVys0C0_pGxmsAERzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Error>",
        "sugared_genericSig": "<T where T : Swift.Error>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Import",
        "name": "Dispatch",
        "printedName": "Dispatch",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "Import",
        "name": "CoreGraphics",
        "printedName": "CoreGraphics",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "TypeDecl",
        "name": "NMBContainer",
        "printedName": "NMBContainer",
        "children": [
          {
            "kind": "Function",
            "name": "contains",
            "printedName": "contains(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              },
              {
                "kind": "TypeNominal",
                "name": "ProtocolComposition",
                "printedName": "Any"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble12NMBContainerP8containsySbypF",
            "mangledName": "$s6Nimble12NMBContainerP8containsySbypF",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0 where τ_0_0 : Nimble.NMBContainer>",
            "sugared_genericSig": "<Self where Self : Nimble.NMBContainer>",
            "protocolReq": true,
            "reqNewWitnessTableEntry": true,
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Protocol",
        "usr": "s:6Nimble12NMBContainerP",
        "mangledName": "$s6Nimble12NMBContainerP",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "NMBCollection",
        "printedName": "NMBCollection",
        "children": [
          {
            "kind": "Var",
            "name": "count",
            "printedName": "count",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Var",
            "usr": "s:6Nimble13NMBCollectionP5countSivp",
            "mangledName": "$s6Nimble13NMBCollectionP5countSivp",
            "moduleName": "Nimble",
            "protocolReq": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble13NMBCollectionP5countSivg",
                "mangledName": "$s6Nimble13NMBCollectionP5countSivg",
                "moduleName": "Nimble",
                "genericSig": "<τ_0_0 where τ_0_0 : Nimble.NMBCollection>",
                "sugared_genericSig": "<Self where Self : Nimble.NMBCollection>",
                "protocolReq": true,
                "reqNewWitnessTableEntry": true,
                "accessorKind": "get"
              }
            ]
          }
        ],
        "declKind": "Protocol",
        "usr": "s:6Nimble13NMBCollectionP",
        "mangledName": "$s6Nimble13NMBCollectionP",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "NMBOrderedCollection",
        "printedName": "NMBOrderedCollection",
        "children": [
          {
            "kind": "Function",
            "name": "object",
            "printedName": "object(at:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "ProtocolComposition",
                "printedName": "Any"
              },
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble20NMBOrderedCollectionP6object2atypSi_tF",
            "mangledName": "$s6Nimble20NMBOrderedCollectionP6object2atypSi_tF",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0 where τ_0_0 : Nimble.NMBOrderedCollection>",
            "sugared_genericSig": "<Self where Self : Nimble.NMBOrderedCollection>",
            "protocolReq": true,
            "reqNewWitnessTableEntry": true,
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Protocol",
        "usr": "s:6Nimble20NMBOrderedCollectionP",
        "mangledName": "$s6Nimble20NMBOrderedCollectionP",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 : Nimble.NMBCollection>",
        "sugared_genericSig": "<Self : Nimble.NMBCollection>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "NMBCollection",
            "printedName": "NMBCollection",
            "usr": "s:6Nimble13NMBCollectionP",
            "mangledName": "$s6Nimble13NMBCollectionP"
          }
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "NMBDoubleConvertible",
        "printedName": "NMBDoubleConvertible",
        "children": [
          {
            "kind": "Var",
            "name": "doubleValue",
            "printedName": "doubleValue",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Double",
                "printedName": "Swift.Double",
                "usr": "s:Sd"
              }
            ],
            "declKind": "Var",
            "usr": "s:6Nimble20NMBDoubleConvertibleP11doubleValueSdvp",
            "mangledName": "$s6Nimble20NMBDoubleConvertibleP11doubleValueSdvp",
            "moduleName": "Nimble",
            "protocolReq": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Double",
                    "printedName": "Swift.Double",
                    "usr": "s:Sd"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble20NMBDoubleConvertibleP11doubleValueSdvg",
                "mangledName": "$s6Nimble20NMBDoubleConvertibleP11doubleValueSdvg",
                "moduleName": "Nimble",
                "genericSig": "<τ_0_0 where τ_0_0 : Nimble.NMBDoubleConvertible>",
                "sugared_genericSig": "<Self where Self : Nimble.NMBDoubleConvertible>",
                "protocolReq": true,
                "reqNewWitnessTableEntry": true,
                "accessorKind": "get"
              }
            ]
          }
        ],
        "declKind": "Protocol",
        "usr": "s:6Nimble20NMBDoubleConvertibleP",
        "mangledName": "$s6Nimble20NMBDoubleConvertibleP",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl"
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "NMBComparable",
        "printedName": "NMBComparable",
        "children": [
          {
            "kind": "Function",
            "name": "NMB_compare",
            "printedName": "NMB_compare(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "ComparisonResult",
                "printedName": "Foundation.ComparisonResult",
                "usr": "c:@E@NSComparisonResult"
              },
              {
                "kind": "TypeNominal",
                "name": "ImplicitlyUnwrappedOptional",
                "printedName": "Nimble.NMBComparable?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NMBComparable",
                    "printedName": "Nimble.NMBComparable",
                    "usr": "c:@M@Nimble@objc(pl)NMBComparable"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "c:@M@Nimble@objc(pl)NMBComparable(im)NMB_compare:",
            "mangledName": "$s6Nimble13NMBComparableP11NMB_compareySo18NSComparisonResultVAaB_pSgF",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0 where τ_0_0 : Nimble.NMBComparable>",
            "sugared_genericSig": "<Self where Self : Nimble.NMBComparable>",
            "protocolReq": true,
            "declAttributes": [
              "ObjC"
            ],
            "reqNewWitnessTableEntry": true,
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Protocol",
        "usr": "c:@M@Nimble@objc(pl)NMBComparable",
        "mangledName": "$s6Nimble13NMBComparableP",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 : AnyObject>",
        "sugared_genericSig": "<Self : AnyObject>",
        "declAttributes": [
          "AccessControl",
          "ObjC",
          "RawDocComment"
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "Function",
        "name": "raiseException",
        "printedName": "raiseException(named:reason:userInfo:closure:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "Foundation.NSExceptionName?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NSExceptionName",
                "printedName": "Foundation.NSExceptionName",
                "usr": "c:@T@NSExceptionName"
              }
            ],
            "hasDefaultArg": true,
            "usr": "s:Sq"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "Swift.String?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "hasDefaultArg": true,
            "usr": "s:Sq"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "Foundation.NSDictionary?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NSDictionary",
                "printedName": "Foundation.NSDictionary",
                "usr": "c:objc(cs)NSDictionary"
              }
            ],
            "hasDefaultArg": true,
            "usr": "s:Sq"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "((Foundation.NSException) -> ())?",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Foundation.NSException) -> ()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "NSException",
                    "printedName": "Foundation.NSException",
                    "usr": "c:objc(cs)NSException"
                  }
                ]
              }
            ],
            "hasDefaultArg": true,
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble14raiseException5named6reason8userInfo7closureAA9PredicateVyxGSo15NSExceptionNameaSg_SSSgSo12NSDictionaryCSgySo0J0CcSgtlF",
        "mangledName": "$s6Nimble14raiseException5named6reason8userInfo7closureAA9PredicateVyxGSo15NSExceptionNameaSg_SSSgSo12NSDictionaryCSgySo0J0CcSgtlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0>",
        "sugared_genericSig": "<Out>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "raiseException",
        "printedName": "raiseException(named:reason:userInfo:closure:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "Swift.String?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "usr": "s:Sq"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "Swift.String?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "hasDefaultArg": true,
            "usr": "s:Sq"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "Foundation.NSDictionary?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NSDictionary",
                "printedName": "Foundation.NSDictionary",
                "usr": "c:objc(cs)NSDictionary"
              }
            ],
            "hasDefaultArg": true,
            "usr": "s:Sq"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "((Foundation.NSException) -> ())?",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Foundation.NSException) -> ()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "NSException",
                    "printedName": "Foundation.NSException",
                    "usr": "c:objc(cs)NSException"
                  }
                ]
              }
            ],
            "hasDefaultArg": true,
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble14raiseException5named6reason8userInfo7closureAA9PredicateVyxGSSSg_AJSo12NSDictionaryCSgySo11NSExceptionCcSgtlF",
        "mangledName": "$s6Nimble14raiseException5named6reason8userInfo7closureAA9PredicateVyxGSSSg_AJSo12NSDictionaryCSgySo11NSExceptionCcSgtlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0>",
        "sugared_genericSig": "<Out>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "TypeDecl",
        "name": "NMBObjCRaiseExceptionPredicate",
        "printedName": "NMBObjCRaiseExceptionPredicate",
        "children": [
          {
            "kind": "Var",
            "name": "named",
            "printedName": "named",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Swift.String) -> Nimble.NMBObjCRaiseExceptionPredicate",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NMBObjCRaiseExceptionPredicate",
                    "printedName": "Nimble.NMBObjCRaiseExceptionPredicate",
                    "usr": "c:@M@Nimble@objc(cs)NMBObjCRaiseExceptionPredicate"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ]
              }
            ],
            "declKind": "Var",
            "usr": "c:@M@Nimble@objc(cs)NMBObjCRaiseExceptionPredicate(py)named",
            "mangledName": "$s6Nimble30NMBObjCRaiseExceptionPredicateC5namedyACSScvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl",
              "ObjC"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(Swift.String) -> Nimble.NMBObjCRaiseExceptionPredicate",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "NMBObjCRaiseExceptionPredicate",
                        "printedName": "Nimble.NMBObjCRaiseExceptionPredicate",
                        "usr": "c:@M@Nimble@objc(cs)NMBObjCRaiseExceptionPredicate"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "String",
                        "printedName": "Swift.String",
                        "usr": "s:SS"
                      }
                    ]
                  }
                ],
                "declKind": "Accessor",
                "usr": "c:@M@Nimble@objc(cs)NMBObjCRaiseExceptionPredicate(im)named",
                "mangledName": "$s6Nimble30NMBObjCRaiseExceptionPredicateC5namedyACSScvg",
                "moduleName": "Nimble",
                "declAttributes": [
                  "ObjC"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "reason",
            "printedName": "reason",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Swift.String?) -> Nimble.NMBObjCRaiseExceptionPredicate",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NMBObjCRaiseExceptionPredicate",
                    "printedName": "Nimble.NMBObjCRaiseExceptionPredicate",
                    "usr": "c:@M@Nimble@objc(cs)NMBObjCRaiseExceptionPredicate"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "Swift.String?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "String",
                        "printedName": "Swift.String",
                        "usr": "s:SS"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ]
              }
            ],
            "declKind": "Var",
            "usr": "c:@M@Nimble@objc(cs)NMBObjCRaiseExceptionPredicate(py)reason",
            "mangledName": "$s6Nimble30NMBObjCRaiseExceptionPredicateC6reasonyACSSSgcvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl",
              "ObjC"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(Swift.String?) -> Nimble.NMBObjCRaiseExceptionPredicate",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "NMBObjCRaiseExceptionPredicate",
                        "printedName": "Nimble.NMBObjCRaiseExceptionPredicate",
                        "usr": "c:@M@Nimble@objc(cs)NMBObjCRaiseExceptionPredicate"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Optional",
                        "printedName": "Swift.String?",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "String",
                            "printedName": "Swift.String",
                            "usr": "s:SS"
                          }
                        ],
                        "usr": "s:Sq"
                      }
                    ]
                  }
                ],
                "declKind": "Accessor",
                "usr": "c:@M@Nimble@objc(cs)NMBObjCRaiseExceptionPredicate(im)reason",
                "mangledName": "$s6Nimble30NMBObjCRaiseExceptionPredicateC6reasonyACSSSgcvg",
                "moduleName": "Nimble",
                "declAttributes": [
                  "ObjC"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "userInfo",
            "printedName": "userInfo",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Foundation.NSDictionary?) -> Nimble.NMBObjCRaiseExceptionPredicate",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NMBObjCRaiseExceptionPredicate",
                    "printedName": "Nimble.NMBObjCRaiseExceptionPredicate",
                    "usr": "c:@M@Nimble@objc(cs)NMBObjCRaiseExceptionPredicate"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "Foundation.NSDictionary?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "NSDictionary",
                        "printedName": "Foundation.NSDictionary",
                        "usr": "c:objc(cs)NSDictionary"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ]
              }
            ],
            "declKind": "Var",
            "usr": "c:@M@Nimble@objc(cs)NMBObjCRaiseExceptionPredicate(py)userInfo",
            "mangledName": "$s6Nimble30NMBObjCRaiseExceptionPredicateC8userInfoyACSo12NSDictionaryCSgcvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl",
              "ObjC"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(Foundation.NSDictionary?) -> Nimble.NMBObjCRaiseExceptionPredicate",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "NMBObjCRaiseExceptionPredicate",
                        "printedName": "Nimble.NMBObjCRaiseExceptionPredicate",
                        "usr": "c:@M@Nimble@objc(cs)NMBObjCRaiseExceptionPredicate"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Optional",
                        "printedName": "Foundation.NSDictionary?",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "NSDictionary",
                            "printedName": "Foundation.NSDictionary",
                            "usr": "c:objc(cs)NSDictionary"
                          }
                        ],
                        "usr": "s:Sq"
                      }
                    ]
                  }
                ],
                "declKind": "Accessor",
                "usr": "c:@M@Nimble@objc(cs)NMBObjCRaiseExceptionPredicate(im)userInfo",
                "mangledName": "$s6Nimble30NMBObjCRaiseExceptionPredicateC8userInfoyACSo12NSDictionaryCSgcvg",
                "moduleName": "Nimble",
                "declAttributes": [
                  "ObjC"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "satisfyingBlock",
            "printedName": "satisfyingBlock",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(((Foundation.NSException) -> ())?) -> Nimble.NMBObjCRaiseExceptionPredicate",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NMBObjCRaiseExceptionPredicate",
                    "printedName": "Nimble.NMBObjCRaiseExceptionPredicate",
                    "usr": "c:@M@Nimble@objc(cs)NMBObjCRaiseExceptionPredicate"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "((Foundation.NSException) -> ())?",
                    "children": [
                      {
                        "kind": "TypeFunc",
                        "name": "Function",
                        "printedName": "(Foundation.NSException) -> ()",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "Void",
                            "printedName": "()"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "NSException",
                            "printedName": "Foundation.NSException",
                            "usr": "c:objc(cs)NSException"
                          }
                        ]
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ]
              }
            ],
            "declKind": "Var",
            "usr": "c:@M@Nimble@objc(cs)NMBObjCRaiseExceptionPredicate(py)satisfyingBlock",
            "mangledName": "$s6Nimble30NMBObjCRaiseExceptionPredicateC15satisfyingBlockyACySo11NSExceptionCcSgcvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl",
              "ObjC"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(((Foundation.NSException) -> ())?) -> Nimble.NMBObjCRaiseExceptionPredicate",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "NMBObjCRaiseExceptionPredicate",
                        "printedName": "Nimble.NMBObjCRaiseExceptionPredicate",
                        "usr": "c:@M@Nimble@objc(cs)NMBObjCRaiseExceptionPredicate"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Optional",
                        "printedName": "((Foundation.NSException) -> ())?",
                        "children": [
                          {
                            "kind": "TypeFunc",
                            "name": "Function",
                            "printedName": "(Foundation.NSException) -> ()",
                            "children": [
                              {
                                "kind": "TypeNominal",
                                "name": "Void",
                                "printedName": "()"
                              },
                              {
                                "kind": "TypeNominal",
                                "name": "NSException",
                                "printedName": "Foundation.NSException",
                                "usr": "c:objc(cs)NSException"
                              }
                            ]
                          }
                        ],
                        "usr": "s:Sq"
                      }
                    ]
                  }
                ],
                "declKind": "Accessor",
                "usr": "c:@M@Nimble@objc(cs)NMBObjCRaiseExceptionPredicate(im)satisfyingBlock",
                "mangledName": "$s6Nimble30NMBObjCRaiseExceptionPredicateC15satisfyingBlockyACySo11NSExceptionCcSgcvg",
                "moduleName": "Nimble",
                "declAttributes": [
                  "ObjC"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(predicate:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBObjCRaiseExceptionPredicate",
                "printedName": "Nimble.NMBObjCRaiseExceptionPredicate",
                "usr": "c:@M@Nimble@objc(cs)NMBObjCRaiseExceptionPredicate"
              },
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Nimble.Expression<ObjectiveC.NSObject>) throws -> Nimble.NMBPredicateResult",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NMBPredicateResult",
                    "printedName": "Nimble.NMBPredicateResult",
                    "usr": "c:@M@Nimble@objc(cs)NMBPredicateResult"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Expression",
                    "printedName": "Nimble.Expression<ObjectiveC.NSObject>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "NSObject",
                        "printedName": "ObjectiveC.NSObject",
                        "usr": "c:objc(cs)NSObject"
                      }
                    ],
                    "usr": "s:6Nimble10ExpressionV"
                  }
                ]
              }
            ],
            "declKind": "Constructor",
            "usr": "s:6Nimble30NMBObjCRaiseExceptionPredicateC9predicateAcA18NMBPredicateResultCAA10ExpressionVySo8NSObjectCGKc_tcfc",
            "mangledName": "$s6Nimble30NMBObjCRaiseExceptionPredicateC9predicateAcA18NMBPredicateResultCAA10ExpressionVySo8NSObjectCGKc_tcfc",
            "moduleName": "Nimble",
            "overriding": true,
            "implicit": true,
            "declAttributes": [
              "Override"
            ],
            "init_kind": "Designated"
          }
        ],
        "declKind": "Class",
        "usr": "c:@M@Nimble@objc(cs)NMBObjCRaiseExceptionPredicate",
        "mangledName": "$s6Nimble30NMBObjCRaiseExceptionPredicateC",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "ObjC"
        ],
        "superclassUsr": "c:@M@Nimble@objc(cs)NMBPredicate",
        "hasMissingDesignatedInitializers": true,
        "superclassNames": [
          "Nimble.NMBPredicate",
          "ObjectiveC.NSObject"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObservingPublishing",
            "printedName": "_KeyValueCodingAndObservingPublishing",
            "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
            "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObserving",
            "printedName": "_KeyValueCodingAndObserving",
            "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
            "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "Function",
        "name": "contain",
        "printedName": "contain(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "Array",
            "printedName": "[τ_0_0.Element]",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "DependentMember",
                "printedName": "τ_0_0.Element"
              }
            ],
            "usr": "s:Sa"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble7containyAA9PredicateVyxG7ElementQzd_tSTRzSQAGRQlF",
        "mangledName": "$s6Nimble7containyAA9PredicateVyxG7ElementQzd_tSTRzSQAGRQlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Sequence, τ_0_0.Element : Swift.Equatable>",
        "sugared_genericSig": "<S where S : Swift.Sequence, S.Element : Swift.Equatable>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "contain",
        "printedName": "contain(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "Array",
            "printedName": "[τ_0_0.Element]",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "DependentMember",
                "printedName": "τ_0_0.Element"
              }
            ],
            "usr": "s:Sa"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble7containyAA9PredicateVyxGSay7ElementQzGSTRzSQAGRQlF",
        "mangledName": "$s6Nimble7containyAA9PredicateVyxGSay7ElementQzGSTRzSQAGRQlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Sequence, τ_0_0.Element : Swift.Equatable>",
        "sugared_genericSig": "<S where S : Swift.Sequence, S.Element : Swift.Equatable>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "contain",
        "printedName": "contain(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "Array",
            "printedName": "[τ_0_0.Element]",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "DependentMember",
                "printedName": "τ_0_0.Element"
              }
            ],
            "usr": "s:Sa"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble7containyAA9PredicateVyxG7ElementQzd_ts10SetAlgebraRzSQAGRQlF",
        "mangledName": "$s6Nimble7containyAA9PredicateVyxG7ElementQzd_ts10SetAlgebraRzSQAGRQlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.SetAlgebra, τ_0_0.Element : Swift.Equatable>",
        "sugared_genericSig": "<S where S : Swift.SetAlgebra, S.Element : Swift.Equatable>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "contain",
        "printedName": "contain(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "Array",
            "printedName": "[τ_0_0.Element]",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "DependentMember",
                "printedName": "τ_0_0.Element"
              }
            ],
            "usr": "s:Sa"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble7containyAA9PredicateVyxGSay7ElementQzGs10SetAlgebraRzSQAGRQlF",
        "mangledName": "$s6Nimble7containyAA9PredicateVyxGSay7ElementQzGs10SetAlgebraRzSQAGRQlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.SetAlgebra, τ_0_0.Element : Swift.Equatable>",
        "sugared_genericSig": "<S where S : Swift.SetAlgebra, S.Element : Swift.Equatable>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "contain",
        "printedName": "contain(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "Array",
            "printedName": "[τ_0_0.Element]",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "DependentMember",
                "printedName": "τ_0_0.Element"
              }
            ],
            "usr": "s:Sa"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble7containyAA9PredicateVyxG7ElementSTQzd_tSTRzs10SetAlgebraRzSQAGRQlF",
        "mangledName": "$s6Nimble7containyAA9PredicateVyxG7ElementSTQzd_tSTRzs10SetAlgebraRzSQAGRQlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Sequence, τ_0_0 : Swift.SetAlgebra, τ_0_0.Element : Swift.Equatable>",
        "sugared_genericSig": "<S where S : Swift.Sequence, S : Swift.SetAlgebra, S.Element : Swift.Equatable>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "contain",
        "printedName": "contain(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "Array",
            "printedName": "[τ_0_0.Element]",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "DependentMember",
                "printedName": "τ_0_0.Element"
              }
            ],
            "usr": "s:Sa"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble7containyAA9PredicateVyxGSay7ElementSTQzGSTRzs10SetAlgebraRzSQAGRQlF",
        "mangledName": "$s6Nimble7containyAA9PredicateVyxGSay7ElementSTQzGSTRzs10SetAlgebraRzSQAGRQlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Sequence, τ_0_0 : Swift.SetAlgebra, τ_0_0.Element : Swift.Equatable>",
        "sugared_genericSig": "<S where S : Swift.Sequence, S : Swift.SetAlgebra, S.Element : Swift.Equatable>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "contain",
        "printedName": "contain(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<Swift.String>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "Array",
            "printedName": "[Swift.String]",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "usr": "s:Sa"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble7containyAA9PredicateVySSGSSd_tF",
        "mangledName": "$s6Nimble7containyAA9PredicateVySSGSSd_tF",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "contain",
        "printedName": "contain(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<Swift.String>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "Array",
            "printedName": "[Swift.String]",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "usr": "s:Sa"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble7containyAA9PredicateVySSGSaySSGF",
        "mangledName": "$s6Nimble7containyAA9PredicateVySSGSaySSGF",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "contain",
        "printedName": "contain(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<Foundation.NSString>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NSString",
                "printedName": "Foundation.NSString",
                "usr": "c:objc(cs)NSString"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "Array",
            "printedName": "[Foundation.NSString]",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NSString",
                "printedName": "Foundation.NSString",
                "usr": "c:objc(cs)NSString"
              }
            ],
            "usr": "s:Sa"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble7containyAA9PredicateVySo8NSStringCGAFd_tF",
        "mangledName": "$s6Nimble7containyAA9PredicateVySo8NSStringCGAFd_tF",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "contain",
        "printedName": "contain(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<Foundation.NSString>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NSString",
                "printedName": "Foundation.NSString",
                "usr": "c:objc(cs)NSString"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "Array",
            "printedName": "[Foundation.NSString]",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NSString",
                "printedName": "Foundation.NSString",
                "usr": "c:objc(cs)NSString"
              }
            ],
            "usr": "s:Sa"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble7containyAA9PredicateVySo8NSStringCGSayAFGF",
        "mangledName": "$s6Nimble7containyAA9PredicateVySo8NSStringCGSayAFGF",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "contain",
        "printedName": "contain(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<Nimble.NMBContainer>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBContainer",
                "printedName": "Nimble.NMBContainer",
                "usr": "s:6Nimble12NMBContainerP"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "Array",
            "printedName": "[Any?]",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Any?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "ProtocolComposition",
                    "printedName": "Any"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "usr": "s:Sa"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble7containyAA9PredicateVyAA12NMBContainer_pGypSgd_tF",
        "mangledName": "$s6Nimble7containyAA9PredicateVyAA12NMBContainer_pGypSgd_tF",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "contain",
        "printedName": "contain(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<Nimble.NMBContainer>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBContainer",
                "printedName": "Nimble.NMBContainer",
                "usr": "s:6Nimble12NMBContainerP"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "Array",
            "printedName": "[Any?]",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Any?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "ProtocolComposition",
                    "printedName": "Any"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "usr": "s:Sa"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble7containyAA9PredicateVyAA12NMBContainer_pGSayypSgGF",
        "mangledName": "$s6Nimble7containyAA9PredicateVyAA12NMBContainer_pGSayypSgGF",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Import",
        "name": "Dispatch",
        "printedName": "Dispatch",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "Import",
        "name": "Dispatch",
        "printedName": "Dispatch",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "Function",
        "name": "expect",
        "printedName": "expect(file:line:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "AsyncExpectation",
            "printedName": "Nimble.AsyncExpectation<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble16AsyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "String",
            "printedName": "Swift.String",
            "hasDefaultArg": true,
            "usr": "s:SS"
          },
          {
            "kind": "TypeNominal",
            "name": "UInt",
            "printedName": "Swift.UInt",
            "hasDefaultArg": true,
            "usr": "s:Su"
          },
          {
            "kind": "TypeFunc",
            "name": "Function",
            "printedName": "() async throws -> τ_0_0?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "τ_0_0?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ]
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble6expect4file4line_AA16AsyncExpectationVyxGSS_SuxSgyYaKctlF",
        "mangledName": "$s6Nimble6expect4file4line_AA16AsyncExpectationVyxGSS_SuxSgyYaKctlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0>",
        "sugared_genericSig": "<T>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "expect",
        "printedName": "expect(file:line:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "AsyncExpectation",
            "printedName": "Nimble.AsyncExpectation<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble16AsyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "String",
            "printedName": "Swift.String",
            "hasDefaultArg": true,
            "usr": "s:SS"
          },
          {
            "kind": "TypeNominal",
            "name": "UInt",
            "printedName": "Swift.UInt",
            "hasDefaultArg": true,
            "usr": "s:Su"
          },
          {
            "kind": "TypeFunc",
            "name": "Function",
            "printedName": "() -> () async throws -> τ_0_0",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "() async throws -> τ_0_0",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ]
              },
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "typeAttributes": [
              "noescape"
            ]
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble6expect4file4line_AA16AsyncExpectationVyxGSS_SuxyYaKcyXEtlF",
        "mangledName": "$s6Nimble6expect4file4line_AA16AsyncExpectationVyxGSS_SuxyYaKcyXEtlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0>",
        "sugared_genericSig": "<T>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "expect",
        "printedName": "expect(file:line:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "AsyncExpectation",
            "printedName": "Nimble.AsyncExpectation<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble16AsyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "String",
            "printedName": "Swift.String",
            "hasDefaultArg": true,
            "usr": "s:SS"
          },
          {
            "kind": "TypeNominal",
            "name": "UInt",
            "printedName": "Swift.UInt",
            "hasDefaultArg": true,
            "usr": "s:Su"
          },
          {
            "kind": "TypeFunc",
            "name": "Function",
            "printedName": "() -> () async throws -> τ_0_0?",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "() async throws -> τ_0_0?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "τ_0_0?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_0_0"
                      }
                    ],
                    "usr": "s:Sq"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ]
              },
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "typeAttributes": [
              "noescape"
            ]
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble6expect4file4line_AA16AsyncExpectationVyxGSS_SuxSgyYaKcyXEtlF",
        "mangledName": "$s6Nimble6expect4file4line_AA16AsyncExpectationVyxGSS_SuxSgyYaKcyXEtlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0>",
        "sugared_genericSig": "<T>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "expect",
        "printedName": "expect(file:line:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "AsyncExpectation",
            "printedName": "Nimble.AsyncExpectation<()>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "usr": "s:6Nimble16AsyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "String",
            "printedName": "Swift.String",
            "hasDefaultArg": true,
            "usr": "s:SS"
          },
          {
            "kind": "TypeNominal",
            "name": "UInt",
            "printedName": "Swift.UInt",
            "hasDefaultArg": true,
            "usr": "s:Su"
          },
          {
            "kind": "TypeFunc",
            "name": "Function",
            "printedName": "() -> () async throws -> ()",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "() async throws -> ()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ]
              },
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "typeAttributes": [
              "noescape"
            ]
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble6expect4file4line_AA16AsyncExpectationVyytGSS_SuyyYaKcyXEtF",
        "mangledName": "$s6Nimble6expect4file4line_AA16AsyncExpectationVyytGSS_SuyyYaKcyXEtF",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "expecta",
        "printedName": "expecta(file:line:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "AsyncExpectation",
            "printedName": "Nimble.AsyncExpectation<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble16AsyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "String",
            "printedName": "Swift.String",
            "hasDefaultArg": true,
            "usr": "s:SS"
          },
          {
            "kind": "TypeNominal",
            "name": "UInt",
            "printedName": "Swift.UInt",
            "hasDefaultArg": true,
            "usr": "s:Su"
          },
          {
            "kind": "TypeFunc",
            "name": "Function",
            "printedName": "() async throws -> τ_0_0?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "τ_0_0?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ]
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble7expecta4file4line_AA16AsyncExpectationVyxGSS_SuxSgyYaKXAtYalF",
        "mangledName": "$s6Nimble7expecta4file4line_AA16AsyncExpectationVyxGSS_SuxSgyYaKXAtYalF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0>",
        "sugared_genericSig": "<T>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "expecta",
        "printedName": "expecta(file:line:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "AsyncExpectation",
            "printedName": "Nimble.AsyncExpectation<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble16AsyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "String",
            "printedName": "Swift.String",
            "hasDefaultArg": true,
            "usr": "s:SS"
          },
          {
            "kind": "TypeNominal",
            "name": "UInt",
            "printedName": "Swift.UInt",
            "hasDefaultArg": true,
            "usr": "s:Su"
          },
          {
            "kind": "TypeFunc",
            "name": "Function",
            "printedName": "() -> () async throws -> τ_0_0",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "() async throws -> τ_0_0",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ]
              },
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "typeAttributes": [
              "noescape"
            ]
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble7expecta4file4line_AA16AsyncExpectationVyxGSS_SuxyYaKcyXKtYalF",
        "mangledName": "$s6Nimble7expecta4file4line_AA16AsyncExpectationVyxGSS_SuxyYaKcyXKtYalF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0>",
        "sugared_genericSig": "<T>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "expecta",
        "printedName": "expecta(file:line:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "AsyncExpectation",
            "printedName": "Nimble.AsyncExpectation<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble16AsyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "String",
            "printedName": "Swift.String",
            "hasDefaultArg": true,
            "usr": "s:SS"
          },
          {
            "kind": "TypeNominal",
            "name": "UInt",
            "printedName": "Swift.UInt",
            "hasDefaultArg": true,
            "usr": "s:Su"
          },
          {
            "kind": "TypeFunc",
            "name": "Function",
            "printedName": "() -> () async throws -> τ_0_0?",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "() async throws -> τ_0_0?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "τ_0_0?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_0_0"
                      }
                    ],
                    "usr": "s:Sq"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ]
              },
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "typeAttributes": [
              "noescape"
            ]
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble7expecta4file4line_AA16AsyncExpectationVyxGSS_SuxSgyYaKcyXKtYalF",
        "mangledName": "$s6Nimble7expecta4file4line_AA16AsyncExpectationVyxGSS_SuxSgyYaKcyXKtYalF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0>",
        "sugared_genericSig": "<T>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "expecta",
        "printedName": "expecta(file:line:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "AsyncExpectation",
            "printedName": "Nimble.AsyncExpectation<()>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "usr": "s:6Nimble16AsyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "String",
            "printedName": "Swift.String",
            "hasDefaultArg": true,
            "usr": "s:SS"
          },
          {
            "kind": "TypeNominal",
            "name": "UInt",
            "printedName": "Swift.UInt",
            "hasDefaultArg": true,
            "usr": "s:Su"
          },
          {
            "kind": "TypeFunc",
            "name": "Function",
            "printedName": "() -> () async throws -> ()",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "() async throws -> ()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ]
              },
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "typeAttributes": [
              "noescape"
            ]
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble7expecta4file4line_AA16AsyncExpectationVyytGSS_SuyyYaKcyXKtYaF",
        "mangledName": "$s6Nimble7expecta4file4line_AA16AsyncExpectationVyytGSS_SuyyYaKcyXKtYaF",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "waitUntil",
        "printedName": "waitUntil(timeout:file:line:action:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "NimbleTimeInterval",
            "printedName": "Nimble.NimbleTimeInterval",
            "hasDefaultArg": true,
            "usr": "s:6Nimble0A12TimeIntervalO"
          },
          {
            "kind": "TypeNominal",
            "name": "String",
            "printedName": "Swift.String",
            "hasDefaultArg": true,
            "usr": "s:SS"
          },
          {
            "kind": "TypeNominal",
            "name": "UInt",
            "printedName": "Swift.UInt",
            "hasDefaultArg": true,
            "usr": "s:Su"
          },
          {
            "kind": "TypeFunc",
            "name": "Function",
            "printedName": "(@escaping () -> ()) async -> ()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "() -> ()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ]
              }
            ]
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble9waitUntil7timeout4file4line6actionyAA0A12TimeIntervalO_SSSuyyycYactYaF",
        "mangledName": "$s6Nimble9waitUntil7timeout4file4line6actionyAA0A12TimeIntervalO_SSSuyyycYactYaF",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "waitUntil",
        "printedName": "waitUntil(timeout:file:line:action:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "NimbleTimeInterval",
            "printedName": "Nimble.NimbleTimeInterval",
            "hasDefaultArg": true,
            "usr": "s:6Nimble0A12TimeIntervalO"
          },
          {
            "kind": "TypeNominal",
            "name": "String",
            "printedName": "Swift.String",
            "hasDefaultArg": true,
            "usr": "s:SS"
          },
          {
            "kind": "TypeNominal",
            "name": "UInt",
            "printedName": "Swift.UInt",
            "hasDefaultArg": true,
            "usr": "s:Su"
          },
          {
            "kind": "TypeFunc",
            "name": "Function",
            "printedName": "(@escaping () -> ()) -> ()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "() -> ()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ]
              }
            ]
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble9waitUntil7timeout4file4line6actionyAA0A12TimeIntervalO_SSSuyyycctYaF",
        "mangledName": "$s6Nimble9waitUntil7timeout4file4line6actionyAA0A12TimeIntervalO_SSSuyyycctYaF",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "Import",
        "name": "Swift",
        "printedName": "Swift",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "Function",
        "name": "catchBadInstruction",
        "printedName": "catchBadInstruction(in:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "Nimble.BadInstructionException?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "BadInstructionException",
                "printedName": "Nimble.BadInstructionException",
                "usr": "c:@M@Nimble@objc(cs)BadInstructionException"
              }
            ],
            "usr": "s:Sq"
          },
          {
            "kind": "TypeFunc",
            "name": "Function",
            "printedName": "() -> ()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ]
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble19catchBadInstruction2inAA0cD9ExceptionCSgyyc_tF",
        "mangledName": "$s6Nimble19catchBadInstruction2inAA0cD9ExceptionCSgyyc_tF",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "beGreaterThanOrEqualTo",
        "printedName": "beGreaterThanOrEqualTo(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "τ_0_0?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble22beGreaterThanOrEqualToyAA9PredicateVyxGxSgSLRzlF",
        "mangledName": "$s6Nimble22beGreaterThanOrEqualToyAA9PredicateVyxGxSgSLRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Comparable>",
        "sugared_genericSig": "<T where T : Swift.Comparable>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": ">=",
        "printedName": ">=(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "SyncExpectation",
            "printedName": "Nimble.SyncExpectation<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble15SyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "GenericTypeParam",
            "printedName": "τ_0_0"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2geoiyyAA15SyncExpectationVyxG_xtSLRzlF",
        "mangledName": "$s6Nimble2geoiyyAA15SyncExpectationVyxG_xtSLRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Comparable>",
        "sugared_genericSig": "<T where T : Swift.Comparable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": ">=",
        "printedName": ">=(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "AsyncExpectation",
            "printedName": "Nimble.AsyncExpectation<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble16AsyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "GenericTypeParam",
            "printedName": "τ_0_0"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2geoiyyAA16AsyncExpectationVyxG_xtYaSLRzlF",
        "mangledName": "$s6Nimble2geoiyyAA16AsyncExpectationVyxG_xtYaSLRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Comparable>",
        "sugared_genericSig": "<T where T : Swift.Comparable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "Function",
        "name": "beGreaterThanOrEqualTo",
        "printedName": "beGreaterThanOrEqualTo(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "τ_0_0?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble22beGreaterThanOrEqualToyAA9PredicateVyxGxSgAA13NMBComparableRzlF",
        "mangledName": "$s6Nimble22beGreaterThanOrEqualToyAA9PredicateVyxGxSgAA13NMBComparableRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Nimble.NMBComparable>",
        "sugared_genericSig": "<T where T : Nimble.NMBComparable>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": ">=",
        "printedName": ">=(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "SyncExpectation",
            "printedName": "Nimble.SyncExpectation<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble15SyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "GenericTypeParam",
            "printedName": "τ_0_0"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2geoiyyAA15SyncExpectationVyxG_xtAA13NMBComparableRzlF",
        "mangledName": "$s6Nimble2geoiyyAA15SyncExpectationVyxG_xtAA13NMBComparableRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Nimble.NMBComparable>",
        "sugared_genericSig": "<T where T : Nimble.NMBComparable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": ">=",
        "printedName": ">=(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "AsyncExpectation",
            "printedName": "Nimble.AsyncExpectation<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble16AsyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "GenericTypeParam",
            "printedName": "τ_0_0"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2geoiyyAA16AsyncExpectationVyxG_xtYaAA13NMBComparableRzlF",
        "mangledName": "$s6Nimble2geoiyyAA16AsyncExpectationVyxG_xtYaAA13NMBComparableRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Nimble.NMBComparable>",
        "sugared_genericSig": "<T where T : Nimble.NMBComparable>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "Function",
        "name": "beginWith",
        "printedName": "beginWith(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "DependentMember",
            "printedName": "τ_0_0.Element"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble9beginWithyAA9PredicateVyxG7ElementQzSTRzSQAGRQlF",
        "mangledName": "$s6Nimble9beginWithyAA9PredicateVyxG7ElementQzSTRzSQAGRQlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Sequence, τ_0_0.Element : Swift.Equatable>",
        "sugared_genericSig": "<S where S : Swift.Sequence, S.Element : Swift.Equatable>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "beginWith",
        "printedName": "beginWith(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<Nimble.NMBOrderedCollection>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBOrderedCollection",
                "printedName": "Nimble.NMBOrderedCollection",
                "usr": "s:6Nimble20NMBOrderedCollectionP"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "ProtocolComposition",
            "printedName": "Any"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble9beginWithyAA9PredicateVyAA20NMBOrderedCollection_pGypF",
        "mangledName": "$s6Nimble9beginWithyAA9PredicateVyAA20NMBOrderedCollection_pGypF",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "beginWith",
        "printedName": "beginWith(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<Swift.String>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "String",
            "printedName": "Swift.String",
            "usr": "s:SS"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble9beginWithyAA9PredicateVySSGSSF",
        "mangledName": "$s6Nimble9beginWithyAA9PredicateVySSGSSF",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "beIdenticalTo",
        "printedName": "beIdenticalTo(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<AnyObject>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "ProtocolComposition",
                "printedName": "AnyObject"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "AnyObject?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "ProtocolComposition",
                "printedName": "AnyObject"
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble13beIdenticalToyAA9PredicateVyyXlGyXlSgF",
        "mangledName": "$s6Nimble13beIdenticalToyAA9PredicateVyyXlGyXlSgF",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "===",
        "printedName": "===(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "SyncExpectation",
            "printedName": "Nimble.SyncExpectation<AnyObject>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "ProtocolComposition",
                "printedName": "AnyObject"
              }
            ],
            "usr": "s:6Nimble15SyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "AnyObject?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "ProtocolComposition",
                "printedName": "AnyObject"
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble3eeeoiyyAA15SyncExpectationVyyXlG_yXlSgtF",
        "mangledName": "$s6Nimble3eeeoiyyAA15SyncExpectationVyyXlG_yXlSgtF",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "===",
        "printedName": "===(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "AsyncExpectation",
            "printedName": "Nimble.AsyncExpectation<AnyObject>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "ProtocolComposition",
                "printedName": "AnyObject"
              }
            ],
            "usr": "s:6Nimble16AsyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "AnyObject?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "ProtocolComposition",
                "printedName": "AnyObject"
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble3eeeoiyyAA16AsyncExpectationVyyXlG_yXlSgtYaF",
        "mangledName": "$s6Nimble3eeeoiyyAA16AsyncExpectationVyyXlG_yXlSgtYaF",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "!==",
        "printedName": "!==(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "SyncExpectation",
            "printedName": "Nimble.SyncExpectation<AnyObject>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "ProtocolComposition",
                "printedName": "AnyObject"
              }
            ],
            "usr": "s:6Nimble15SyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "AnyObject?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "ProtocolComposition",
                "printedName": "AnyObject"
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble3neeoiyyAA15SyncExpectationVyyXlG_yXlSgtF",
        "mangledName": "$s6Nimble3neeoiyyAA15SyncExpectationVyyXlG_yXlSgtF",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "!==",
        "printedName": "!==(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "AsyncExpectation",
            "printedName": "Nimble.AsyncExpectation<AnyObject>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "ProtocolComposition",
                "printedName": "AnyObject"
              }
            ],
            "usr": "s:6Nimble16AsyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "AnyObject?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "ProtocolComposition",
                "printedName": "AnyObject"
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble3neeoiyyAA16AsyncExpectationVyyXlG_yXlSgtYaF",
        "mangledName": "$s6Nimble3neeoiyyAA16AsyncExpectationVyyXlG_yXlSgtYaF",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "be",
        "printedName": "be(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<AnyObject>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "ProtocolComposition",
                "printedName": "AnyObject"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "Optional",
            "printedName": "AnyObject?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "ProtocolComposition",
                "printedName": "AnyObject"
              }
            ],
            "usr": "s:Sq"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2beyAA9PredicateVyyXlGyXlSgF",
        "mangledName": "$s6Nimble2beyAA9PredicateVyyXlGyXlSgF",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "TypeDecl",
        "name": "ExpectationMessage",
        "printedName": "ExpectationMessage",
        "children": [
          {
            "kind": "Var",
            "name": "expectedActualValueTo",
            "printedName": "expectedActualValueTo",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Nimble.ExpectationMessage.Type) -> (Swift.String) -> Nimble.ExpectationMessage",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(Swift.String) -> Nimble.ExpectationMessage",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ExpectationMessage",
                        "printedName": "Nimble.ExpectationMessage",
                        "usr": "s:6Nimble18ExpectationMessageO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "String",
                        "printedName": "Swift.String",
                        "usr": "s:SS"
                      }
                    ]
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "Nimble.ExpectationMessage.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ExpectationMessage",
                        "printedName": "Nimble.ExpectationMessage",
                        "usr": "s:6Nimble18ExpectationMessageO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:6Nimble18ExpectationMessageO21expectedActualValueToyACSScACmF",
            "mangledName": "$s6Nimble18ExpectationMessageO21expectedActualValueToyACSScACmF",
            "moduleName": "Nimble",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "expectedCustomValueTo",
            "printedName": "expectedCustomValueTo",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Nimble.ExpectationMessage.Type) -> (Swift.String, Swift.String) -> Nimble.ExpectationMessage",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(Swift.String, Swift.String) -> Nimble.ExpectationMessage",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ExpectationMessage",
                        "printedName": "Nimble.ExpectationMessage",
                        "usr": "s:6Nimble18ExpectationMessageO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Tuple",
                        "printedName": "(Swift.String, actual: Swift.String)",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "String",
                            "printedName": "Swift.String",
                            "usr": "s:SS"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "String",
                            "printedName": "Swift.String",
                            "usr": "s:SS"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "Nimble.ExpectationMessage.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ExpectationMessage",
                        "printedName": "Nimble.ExpectationMessage",
                        "usr": "s:6Nimble18ExpectationMessageO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:6Nimble18ExpectationMessageO21expectedCustomValueToyACSS_SStcACmF",
            "mangledName": "$s6Nimble18ExpectationMessageO21expectedCustomValueToyACSS_SStcACmF",
            "moduleName": "Nimble",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "expectedTo",
            "printedName": "expectedTo",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Nimble.ExpectationMessage.Type) -> (Swift.String) -> Nimble.ExpectationMessage",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(Swift.String) -> Nimble.ExpectationMessage",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ExpectationMessage",
                        "printedName": "Nimble.ExpectationMessage",
                        "usr": "s:6Nimble18ExpectationMessageO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "String",
                        "printedName": "Swift.String",
                        "usr": "s:SS"
                      }
                    ]
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "Nimble.ExpectationMessage.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ExpectationMessage",
                        "printedName": "Nimble.ExpectationMessage",
                        "usr": "s:6Nimble18ExpectationMessageO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:6Nimble18ExpectationMessageO10expectedToyACSScACmF",
            "mangledName": "$s6Nimble18ExpectationMessageO10expectedToyACSScACmF",
            "moduleName": "Nimble",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "fail",
            "printedName": "fail",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Nimble.ExpectationMessage.Type) -> (Swift.String) -> Nimble.ExpectationMessage",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(Swift.String) -> Nimble.ExpectationMessage",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ExpectationMessage",
                        "printedName": "Nimble.ExpectationMessage",
                        "usr": "s:6Nimble18ExpectationMessageO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "String",
                        "printedName": "Swift.String",
                        "usr": "s:SS"
                      }
                    ]
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "Nimble.ExpectationMessage.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ExpectationMessage",
                        "printedName": "Nimble.ExpectationMessage",
                        "usr": "s:6Nimble18ExpectationMessageO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:6Nimble18ExpectationMessageO4failyACSScACmF",
            "mangledName": "$s6Nimble18ExpectationMessageO4failyACSScACmF",
            "moduleName": "Nimble",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "prepends",
            "printedName": "prepends",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Nimble.ExpectationMessage.Type) -> (Swift.String, Nimble.ExpectationMessage) -> Nimble.ExpectationMessage",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(Swift.String, Nimble.ExpectationMessage) -> Nimble.ExpectationMessage",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ExpectationMessage",
                        "printedName": "Nimble.ExpectationMessage",
                        "usr": "s:6Nimble18ExpectationMessageO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Tuple",
                        "printedName": "(Swift.String, Nimble.ExpectationMessage)",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "String",
                            "printedName": "Swift.String",
                            "usr": "s:SS"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "ExpectationMessage",
                            "printedName": "Nimble.ExpectationMessage",
                            "usr": "s:6Nimble18ExpectationMessageO"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "Nimble.ExpectationMessage.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ExpectationMessage",
                        "printedName": "Nimble.ExpectationMessage",
                        "usr": "s:6Nimble18ExpectationMessageO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:6Nimble18ExpectationMessageO8prependsyACSS_ACtcACmF",
            "mangledName": "$s6Nimble18ExpectationMessageO8prependsyACSS_ACtcACmF",
            "moduleName": "Nimble",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "appends",
            "printedName": "appends",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Nimble.ExpectationMessage.Type) -> (Nimble.ExpectationMessage, Swift.String) -> Nimble.ExpectationMessage",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(Nimble.ExpectationMessage, Swift.String) -> Nimble.ExpectationMessage",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ExpectationMessage",
                        "printedName": "Nimble.ExpectationMessage",
                        "usr": "s:6Nimble18ExpectationMessageO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Tuple",
                        "printedName": "(Nimble.ExpectationMessage, Swift.String)",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "ExpectationMessage",
                            "printedName": "Nimble.ExpectationMessage",
                            "usr": "s:6Nimble18ExpectationMessageO"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "String",
                            "printedName": "Swift.String",
                            "usr": "s:SS"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "Nimble.ExpectationMessage.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ExpectationMessage",
                        "printedName": "Nimble.ExpectationMessage",
                        "usr": "s:6Nimble18ExpectationMessageO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:6Nimble18ExpectationMessageO7appendsyA2C_SStcACmF",
            "mangledName": "$s6Nimble18ExpectationMessageO7appendsyA2C_SStcACmF",
            "moduleName": "Nimble",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "details",
            "printedName": "details",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Nimble.ExpectationMessage.Type) -> (Nimble.ExpectationMessage, Swift.String) -> Nimble.ExpectationMessage",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(Nimble.ExpectationMessage, Swift.String) -> Nimble.ExpectationMessage",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ExpectationMessage",
                        "printedName": "Nimble.ExpectationMessage",
                        "usr": "s:6Nimble18ExpectationMessageO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Tuple",
                        "printedName": "(Nimble.ExpectationMessage, Swift.String)",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "ExpectationMessage",
                            "printedName": "Nimble.ExpectationMessage",
                            "usr": "s:6Nimble18ExpectationMessageO"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "String",
                            "printedName": "Swift.String",
                            "usr": "s:SS"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "Nimble.ExpectationMessage.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ExpectationMessage",
                        "printedName": "Nimble.ExpectationMessage",
                        "usr": "s:6Nimble18ExpectationMessageO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:6Nimble18ExpectationMessageO7detailsyA2C_SStcACmF",
            "mangledName": "$s6Nimble18ExpectationMessageO7detailsyA2C_SStcACmF",
            "moduleName": "Nimble",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "expectedMessage",
            "printedName": "expectedMessage",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:6Nimble18ExpectationMessageO08expectedC0SSvp",
            "mangledName": "$s6Nimble18ExpectationMessageO08expectedC0SSvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble18ExpectationMessageO08expectedC0SSvg",
                "mangledName": "$s6Nimble18ExpectationMessageO08expectedC0SSvg",
                "moduleName": "Nimble",
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Function",
            "name": "appended",
            "printedName": "appended(message:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "ExpectationMessage",
                "printedName": "Nimble.ExpectationMessage",
                "usr": "s:6Nimble18ExpectationMessageO"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble18ExpectationMessageO8appended7messageACSS_tF",
            "mangledName": "$s6Nimble18ExpectationMessageO8appended7messageACSS_tF",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "appendedBeNilHint",
            "printedName": "appendedBeNilHint()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "ExpectationMessage",
                "printedName": "Nimble.ExpectationMessage",
                "usr": "s:6Nimble18ExpectationMessageO"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble18ExpectationMessageO17appendedBeNilHintACyF",
            "mangledName": "$s6Nimble18ExpectationMessageO17appendedBeNilHintACyF",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "appended",
            "printedName": "appended(details:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "ExpectationMessage",
                "printedName": "Nimble.ExpectationMessage",
                "usr": "s:6Nimble18ExpectationMessageO"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble18ExpectationMessageO8appended7detailsACSS_tF",
            "mangledName": "$s6Nimble18ExpectationMessageO8appended7detailsACSS_tF",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "replacedExpectation",
            "printedName": "replacedExpectation(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "ExpectationMessage",
                "printedName": "Nimble.ExpectationMessage",
                "usr": "s:6Nimble18ExpectationMessageO"
              },
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Nimble.ExpectationMessage) -> Nimble.ExpectationMessage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "ExpectationMessage",
                    "printedName": "Nimble.ExpectationMessage",
                    "usr": "s:6Nimble18ExpectationMessageO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "ExpectationMessage",
                    "printedName": "Nimble.ExpectationMessage",
                    "usr": "s:6Nimble18ExpectationMessageO"
                  }
                ]
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble18ExpectationMessageO08replacedB0yA3CcF",
            "mangledName": "$s6Nimble18ExpectationMessageO08replacedB0yA3CcF",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "wrappedExpectation",
            "printedName": "wrappedExpectation(before:after:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "ExpectationMessage",
                "printedName": "Nimble.ExpectationMessage",
                "usr": "s:6Nimble18ExpectationMessageO"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble18ExpectationMessageO07wrappedB06before5afterACSS_SStF",
            "mangledName": "$s6Nimble18ExpectationMessageO07wrappedB06before5afterACSS_SStF",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "prepended",
            "printedName": "prepended(expectation:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "ExpectationMessage",
                "printedName": "Nimble.ExpectationMessage",
                "usr": "s:6Nimble18ExpectationMessageO"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble18ExpectationMessageO9prepended11expectationACSS_tF",
            "mangledName": "$s6Nimble18ExpectationMessageO9prepended11expectationACSS_tF",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "toString",
            "printedName": "toString(actual:expected:to:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "hasDefaultArg": true,
                "usr": "s:SS"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "hasDefaultArg": true,
                "usr": "s:SS"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble18ExpectationMessageO8toString6actual8expected0D0S2S_S2StF",
            "mangledName": "$s6Nimble18ExpectationMessageO8toString6actual8expected0D0S2S_S2StF",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Enum",
        "usr": "s:6Nimble18ExpectationMessageO",
        "mangledName": "$s6Nimble18ExpectationMessageO",
        "moduleName": "Nimble",
        "declAttributes": [
          "Indirect",
          "AccessControl"
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "TypeDecl",
        "name": "NMBExpectationMessage",
        "printedName": "NMBExpectationMessage",
        "children": [
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(expectedTo:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBExpectationMessage",
                "printedName": "Nimble.NMBExpectationMessage",
                "usr": "c:@M@Nimble@objc(cs)NMBExpectationMessage"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:6Nimble21NMBExpectationMessageC10expectedToACSS_tcfc",
            "mangledName": "$s6Nimble21NMBExpectationMessageC10expectedToACSS_tcfc",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(expectedActualValueTo:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBExpectationMessage",
                "printedName": "Nimble.NMBExpectationMessage",
                "usr": "c:@M@Nimble@objc(cs)NMBExpectationMessage"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:6Nimble21NMBExpectationMessageC21expectedActualValueToACSS_tcfc",
            "mangledName": "$s6Nimble21NMBExpectationMessageC21expectedActualValueToACSS_tcfc",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(expectedActualValueTo:customActualValue:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBExpectationMessage",
                "printedName": "Nimble.NMBExpectationMessage",
                "usr": "c:@M@Nimble@objc(cs)NMBExpectationMessage"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:6Nimble21NMBExpectationMessageC21expectedActualValueTo06customeF0ACSS_SStcfc",
            "mangledName": "$s6Nimble21NMBExpectationMessageC21expectedActualValueTo06customeF0ACSS_SStcfc",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(fail:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBExpectationMessage",
                "printedName": "Nimble.NMBExpectationMessage",
                "usr": "c:@M@Nimble@objc(cs)NMBExpectationMessage"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:6Nimble21NMBExpectationMessageC4failACSS_tcfc",
            "mangledName": "$s6Nimble21NMBExpectationMessageC4failACSS_tcfc",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(prepend:child:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBExpectationMessage",
                "printedName": "Nimble.NMBExpectationMessage",
                "usr": "c:@M@Nimble@objc(cs)NMBExpectationMessage"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              },
              {
                "kind": "TypeNominal",
                "name": "NMBExpectationMessage",
                "printedName": "Nimble.NMBExpectationMessage",
                "usr": "c:@M@Nimble@objc(cs)NMBExpectationMessage"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:6Nimble21NMBExpectationMessageC7prepend5childACSS_ACtcfc",
            "mangledName": "$s6Nimble21NMBExpectationMessageC7prepend5childACSS_ACtcfc",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(appendedMessage:child:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBExpectationMessage",
                "printedName": "Nimble.NMBExpectationMessage",
                "usr": "c:@M@Nimble@objc(cs)NMBExpectationMessage"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              },
              {
                "kind": "TypeNominal",
                "name": "NMBExpectationMessage",
                "printedName": "Nimble.NMBExpectationMessage",
                "usr": "c:@M@Nimble@objc(cs)NMBExpectationMessage"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:6Nimble21NMBExpectationMessageC08appendedC05childACSS_ACtcfc",
            "mangledName": "$s6Nimble21NMBExpectationMessageC08appendedC05childACSS_ACtcfc",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(prependedMessage:child:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBExpectationMessage",
                "printedName": "Nimble.NMBExpectationMessage",
                "usr": "c:@M@Nimble@objc(cs)NMBExpectationMessage"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              },
              {
                "kind": "TypeNominal",
                "name": "NMBExpectationMessage",
                "printedName": "Nimble.NMBExpectationMessage",
                "usr": "c:@M@Nimble@objc(cs)NMBExpectationMessage"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:6Nimble21NMBExpectationMessageC09prependedC05childACSS_ACtcfc",
            "mangledName": "$s6Nimble21NMBExpectationMessageC09prependedC05childACSS_ACtcfc",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(details:child:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBExpectationMessage",
                "printedName": "Nimble.NMBExpectationMessage",
                "usr": "c:@M@Nimble@objc(cs)NMBExpectationMessage"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              },
              {
                "kind": "TypeNominal",
                "name": "NMBExpectationMessage",
                "printedName": "Nimble.NMBExpectationMessage",
                "usr": "c:@M@Nimble@objc(cs)NMBExpectationMessage"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:6Nimble21NMBExpectationMessageC7details5childACSS_ACtcfc",
            "mangledName": "$s6Nimble21NMBExpectationMessageC7details5childACSS_ACtcfc",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Function",
            "name": "appendedBeNilHint",
            "printedName": "appendedBeNilHint()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBExpectationMessage",
                "printedName": "Nimble.NMBExpectationMessage",
                "usr": "c:@M@Nimble@objc(cs)NMBExpectationMessage"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble21NMBExpectationMessageC17appendedBeNilHintACyF",
            "mangledName": "$s6Nimble21NMBExpectationMessageC17appendedBeNilHintACyF",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "toSwift",
            "printedName": "toSwift()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "ExpectationMessage",
                "printedName": "Nimble.ExpectationMessage",
                "usr": "s:6Nimble18ExpectationMessageO"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble21NMBExpectationMessageC7toSwiftAA011ExpectationC0OyF",
            "mangledName": "$s6Nimble21NMBExpectationMessageC7toSwiftAA011ExpectationC0OyF",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBExpectationMessage",
                "printedName": "Nimble.NMBExpectationMessage",
                "usr": "c:@M@Nimble@objc(cs)NMBExpectationMessage"
              }
            ],
            "declKind": "Constructor",
            "usr": "c:@M@Nimble@objc(cs)NMBExpectationMessage(im)init",
            "mangledName": "$s6Nimble21NMBExpectationMessageCACycfc",
            "moduleName": "Nimble",
            "overriding": true,
            "implicit": true,
            "objc_name": "init",
            "declAttributes": [
              "Dynamic",
              "ObjC",
              "Override"
            ],
            "init_kind": "Designated"
          }
        ],
        "declKind": "Class",
        "usr": "c:@M@Nimble@objc(cs)NMBExpectationMessage",
        "mangledName": "$s6Nimble21NMBExpectationMessageC",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "ObjC"
        ],
        "superclassUsr": "c:objc(cs)NSObject",
        "hasMissingDesignatedInitializers": true,
        "superclassNames": [
          "ObjectiveC.NSObject"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObservingPublishing",
            "printedName": "_KeyValueCodingAndObservingPublishing",
            "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
            "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObserving",
            "printedName": "_KeyValueCodingAndObserving",
            "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
            "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "Function",
        "name": "beEmpty",
        "printedName": "beEmpty()",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble7beEmptyAA9PredicateVyxGySTRzlF",
        "mangledName": "$s6Nimble7beEmptyAA9PredicateVyxGySTRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Sequence>",
        "sugared_genericSig": "<S where S : Swift.Sequence>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "beEmpty",
        "printedName": "beEmpty()",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble7beEmptyAA9PredicateVyxGys10SetAlgebraRzlF",
        "mangledName": "$s6Nimble7beEmptyAA9PredicateVyxGys10SetAlgebraRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.SetAlgebra>",
        "sugared_genericSig": "<S where S : Swift.SetAlgebra>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "beEmpty",
        "printedName": "beEmpty()",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble7beEmptyAA9PredicateVyxGySTRzs10SetAlgebraRzlF",
        "mangledName": "$s6Nimble7beEmptyAA9PredicateVyxGySTRzs10SetAlgebraRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Sequence, τ_0_0 : Swift.SetAlgebra>",
        "sugared_genericSig": "<S where S : Swift.Sequence, S : Swift.SetAlgebra>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "beEmpty",
        "printedName": "beEmpty()",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<Swift.String>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble7beEmptyAA9PredicateVySSGyF",
        "mangledName": "$s6Nimble7beEmptyAA9PredicateVySSGyF",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "beEmpty",
        "printedName": "beEmpty()",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<Foundation.NSString>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NSString",
                "printedName": "Foundation.NSString",
                "usr": "c:objc(cs)NSString"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble7beEmptyAA9PredicateVySo8NSStringCGyF",
        "mangledName": "$s6Nimble7beEmptyAA9PredicateVySo8NSStringCGyF",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "beEmpty",
        "printedName": "beEmpty()",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<Foundation.NSDictionary>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NSDictionary",
                "printedName": "Foundation.NSDictionary",
                "usr": "c:objc(cs)NSDictionary"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble7beEmptyAA9PredicateVySo12NSDictionaryCGyF",
        "mangledName": "$s6Nimble7beEmptyAA9PredicateVySo12NSDictionaryCGyF",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "beEmpty",
        "printedName": "beEmpty()",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<Foundation.NSArray>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NSArray",
                "printedName": "Foundation.NSArray",
                "usr": "c:objc(cs)NSArray"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble7beEmptyAA9PredicateVySo7NSArrayCGyF",
        "mangledName": "$s6Nimble7beEmptyAA9PredicateVySo7NSArrayCGyF",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "beEmpty",
        "printedName": "beEmpty()",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<Nimble.NMBCollection>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBCollection",
                "printedName": "Nimble.NMBCollection",
                "usr": "s:6Nimble13NMBCollectionP"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble7beEmptyAA9PredicateVyAA13NMBCollection_pGyF",
        "mangledName": "$s6Nimble7beEmptyAA9PredicateVyAA13NMBCollection_pGyF",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "Import",
        "name": "Dispatch",
        "printedName": "Dispatch",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "TypeDecl",
        "name": "AsyncDefaults",
        "printedName": "AsyncDefaults",
        "children": [
          {
            "kind": "Var",
            "name": "timeout",
            "printedName": "timeout",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NimbleTimeInterval",
                "printedName": "Nimble.NimbleTimeInterval",
                "usr": "s:6Nimble0A12TimeIntervalO"
              }
            ],
            "declKind": "Var",
            "usr": "s:6Nimble13AsyncDefaultsV7timeoutAA0A12TimeIntervalOvpZ",
            "mangledName": "$s6Nimble13AsyncDefaultsV7timeoutAA0A12TimeIntervalOvpZ",
            "moduleName": "Nimble",
            "static": true,
            "declAttributes": [
              "AccessControl"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NimbleTimeInterval",
                    "printedName": "Nimble.NimbleTimeInterval",
                    "usr": "s:6Nimble0A12TimeIntervalO"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble13AsyncDefaultsV7timeoutAA0A12TimeIntervalOvgZ",
                "mangledName": "$s6Nimble13AsyncDefaultsV7timeoutAA0A12TimeIntervalOvgZ",
                "moduleName": "Nimble",
                "static": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "NimbleTimeInterval",
                    "printedName": "Nimble.NimbleTimeInterval",
                    "usr": "s:6Nimble0A12TimeIntervalO"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble13AsyncDefaultsV7timeoutAA0A12TimeIntervalOvsZ",
                "mangledName": "$s6Nimble13AsyncDefaultsV7timeoutAA0A12TimeIntervalOvsZ",
                "moduleName": "Nimble",
                "static": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble13AsyncDefaultsV7timeoutAA0A12TimeIntervalOvMZ",
                "mangledName": "$s6Nimble13AsyncDefaultsV7timeoutAA0A12TimeIntervalOvMZ",
                "moduleName": "Nimble",
                "static": true,
                "implicit": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "pollInterval",
            "printedName": "pollInterval",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NimbleTimeInterval",
                "printedName": "Nimble.NimbleTimeInterval",
                "usr": "s:6Nimble0A12TimeIntervalO"
              }
            ],
            "declKind": "Var",
            "usr": "s:6Nimble13AsyncDefaultsV12pollIntervalAA0a4TimeE0OvpZ",
            "mangledName": "$s6Nimble13AsyncDefaultsV12pollIntervalAA0a4TimeE0OvpZ",
            "moduleName": "Nimble",
            "static": true,
            "declAttributes": [
              "AccessControl"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NimbleTimeInterval",
                    "printedName": "Nimble.NimbleTimeInterval",
                    "usr": "s:6Nimble0A12TimeIntervalO"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble13AsyncDefaultsV12pollIntervalAA0a4TimeE0OvgZ",
                "mangledName": "$s6Nimble13AsyncDefaultsV12pollIntervalAA0a4TimeE0OvgZ",
                "moduleName": "Nimble",
                "static": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "NimbleTimeInterval",
                    "printedName": "Nimble.NimbleTimeInterval",
                    "usr": "s:6Nimble0A12TimeIntervalO"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble13AsyncDefaultsV12pollIntervalAA0a4TimeE0OvsZ",
                "mangledName": "$s6Nimble13AsyncDefaultsV12pollIntervalAA0a4TimeE0OvsZ",
                "moduleName": "Nimble",
                "static": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble13AsyncDefaultsV12pollIntervalAA0a4TimeE0OvMZ",
                "mangledName": "$s6Nimble13AsyncDefaultsV12pollIntervalAA0a4TimeE0OvMZ",
                "moduleName": "Nimble",
                "static": true,
                "implicit": true,
                "accessorKind": "_modify"
              }
            ]
          }
        ],
        "declKind": "Struct",
        "usr": "s:6Nimble13AsyncDefaultsV",
        "mangledName": "$s6Nimble13AsyncDefaultsV",
        "moduleName": "Nimble",
        "deprecated": true,
        "declAttributes": [
          "AccessControl",
          "Available",
          "RawDocComment"
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "PollingDefaults",
        "printedName": "PollingDefaults",
        "children": [
          {
            "kind": "Var",
            "name": "timeout",
            "printedName": "timeout",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NimbleTimeInterval",
                "printedName": "Nimble.NimbleTimeInterval",
                "usr": "s:6Nimble0A12TimeIntervalO"
              }
            ],
            "declKind": "Var",
            "usr": "s:6Nimble15PollingDefaultsV7timeoutAA0A12TimeIntervalOvpZ",
            "mangledName": "$s6Nimble15PollingDefaultsV7timeoutAA0A12TimeIntervalOvpZ",
            "moduleName": "Nimble",
            "static": true,
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NimbleTimeInterval",
                    "printedName": "Nimble.NimbleTimeInterval",
                    "usr": "s:6Nimble0A12TimeIntervalO"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble15PollingDefaultsV7timeoutAA0A12TimeIntervalOvgZ",
                "mangledName": "$s6Nimble15PollingDefaultsV7timeoutAA0A12TimeIntervalOvgZ",
                "moduleName": "Nimble",
                "static": true,
                "implicit": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "NimbleTimeInterval",
                    "printedName": "Nimble.NimbleTimeInterval",
                    "usr": "s:6Nimble0A12TimeIntervalO"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble15PollingDefaultsV7timeoutAA0A12TimeIntervalOvsZ",
                "mangledName": "$s6Nimble15PollingDefaultsV7timeoutAA0A12TimeIntervalOvsZ",
                "moduleName": "Nimble",
                "static": true,
                "implicit": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble15PollingDefaultsV7timeoutAA0A12TimeIntervalOvMZ",
                "mangledName": "$s6Nimble15PollingDefaultsV7timeoutAA0A12TimeIntervalOvMZ",
                "moduleName": "Nimble",
                "static": true,
                "implicit": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "pollInterval",
            "printedName": "pollInterval",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NimbleTimeInterval",
                "printedName": "Nimble.NimbleTimeInterval",
                "usr": "s:6Nimble0A12TimeIntervalO"
              }
            ],
            "declKind": "Var",
            "usr": "s:6Nimble15PollingDefaultsV12pollIntervalAA0a4TimeE0OvpZ",
            "mangledName": "$s6Nimble15PollingDefaultsV12pollIntervalAA0a4TimeE0OvpZ",
            "moduleName": "Nimble",
            "static": true,
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NimbleTimeInterval",
                    "printedName": "Nimble.NimbleTimeInterval",
                    "usr": "s:6Nimble0A12TimeIntervalO"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble15PollingDefaultsV12pollIntervalAA0a4TimeE0OvgZ",
                "mangledName": "$s6Nimble15PollingDefaultsV12pollIntervalAA0a4TimeE0OvgZ",
                "moduleName": "Nimble",
                "static": true,
                "implicit": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "NimbleTimeInterval",
                    "printedName": "Nimble.NimbleTimeInterval",
                    "usr": "s:6Nimble0A12TimeIntervalO"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble15PollingDefaultsV12pollIntervalAA0a4TimeE0OvsZ",
                "mangledName": "$s6Nimble15PollingDefaultsV12pollIntervalAA0a4TimeE0OvsZ",
                "moduleName": "Nimble",
                "static": true,
                "implicit": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble15PollingDefaultsV12pollIntervalAA0a4TimeE0OvMZ",
                "mangledName": "$s6Nimble15PollingDefaultsV12pollIntervalAA0a4TimeE0OvMZ",
                "moduleName": "Nimble",
                "static": true,
                "implicit": true,
                "accessorKind": "_modify"
              }
            ]
          }
        ],
        "declKind": "Struct",
        "usr": "s:6Nimble15PollingDefaultsV",
        "mangledName": "$s6Nimble15PollingDefaultsV",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ]
      },
      {
        "kind": "Function",
        "name": "satisfyAllOf",
        "printedName": "satisfyAllOf(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "Array",
            "printedName": "[Nimble.Predicate<τ_0_0>]",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Predicate",
                "printedName": "Nimble.Predicate<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble9PredicateV"
              }
            ],
            "usr": "s:Sa"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble12satisfyAllOfyAA9PredicateVyxGAEd_tlF",
        "mangledName": "$s6Nimble12satisfyAllOfyAA9PredicateVyxGAEd_tlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0>",
        "sugared_genericSig": "<T>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "satisfyAllOf",
        "printedName": "satisfyAllOf(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "Array",
            "printedName": "[Nimble.Predicate<τ_0_0>]",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Predicate",
                "printedName": "Nimble.Predicate<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble9PredicateV"
              }
            ],
            "usr": "s:Sa"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble12satisfyAllOfyAA9PredicateVyxGSayAEGlF",
        "mangledName": "$s6Nimble12satisfyAllOfyAA9PredicateVyxGSayAEGlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0>",
        "sugared_genericSig": "<T>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "&&",
        "printedName": "&&(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2aaoiyAA9PredicateVyxGAE_AEtlF",
        "mangledName": "$s6Nimble2aaoiyAA9PredicateVyxGAE_AEtlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0>",
        "sugared_genericSig": "<T>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "Function",
        "name": "beNil",
        "printedName": "beNil()",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble5beNilAA9PredicateVyxGylF",
        "mangledName": "$s6Nimble5beNilAA9PredicateVyxGylF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0>",
        "sugared_genericSig": "<T>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "TypeDecl",
        "name": "ExpectationNil",
        "printedName": "ExpectationNil",
        "children": [
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(nilLiteral:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "ExpectationNil",
                "printedName": "Nimble.ExpectationNil",
                "usr": "s:6Nimble14ExpectationNilV"
              },
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:6Nimble14ExpectationNilV10nilLiteralACyt_tcfc",
            "mangledName": "$s6Nimble14ExpectationNilV10nilLiteralACyt_tcfc",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl"
            ],
            "init_kind": "Designated"
          }
        ],
        "declKind": "Struct",
        "usr": "s:6Nimble14ExpectationNilV",
        "mangledName": "$s6Nimble14ExpectationNilV",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "ExpressibleByNilLiteral",
            "printedName": "ExpressibleByNilLiteral",
            "usr": "s:s23ExpressibleByNilLiteralP",
            "mangledName": "$ss23ExpressibleByNilLiteralP"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "Import",
        "name": "CoreFoundation",
        "printedName": "CoreFoundation",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "Import",
        "name": "Dispatch",
        "printedName": "Dispatch",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "Nimble",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "Function",
        "name": "endWith",
        "printedName": "endWith(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "DependentMember",
            "printedName": "τ_0_0.Element"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble7endWithyAA9PredicateVyxG7ElementQzSTRzSQAGRQlF",
        "mangledName": "$s6Nimble7endWithyAA9PredicateVyxG7ElementQzSTRzSQAGRQlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Sequence, τ_0_0.Element : Swift.Equatable>",
        "sugared_genericSig": "<S where S : Swift.Sequence, S.Element : Swift.Equatable>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "endWith",
        "printedName": "endWith(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<Nimble.NMBOrderedCollection>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBOrderedCollection",
                "printedName": "Nimble.NMBOrderedCollection",
                "usr": "s:6Nimble20NMBOrderedCollectionP"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "ProtocolComposition",
            "printedName": "Any"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble7endWithyAA9PredicateVyAA20NMBOrderedCollection_pGypF",
        "mangledName": "$s6Nimble7endWithyAA9PredicateVyAA20NMBOrderedCollection_pGypF",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "endWith",
        "printedName": "endWith(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<Swift.String>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "String",
            "printedName": "Swift.String",
            "usr": "s:SS"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble7endWithyAA9PredicateVySSGSSF",
        "mangledName": "$s6Nimble7endWithyAA9PredicateVySSGSSF",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "expect",
        "printedName": "expect(file:line:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "SyncExpectation",
            "printedName": "Nimble.SyncExpectation<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble15SyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "String",
            "printedName": "Swift.String",
            "hasDefaultArg": true,
            "usr": "s:SS"
          },
          {
            "kind": "TypeNominal",
            "name": "UInt",
            "printedName": "Swift.UInt",
            "hasDefaultArg": true,
            "usr": "s:Su"
          },
          {
            "kind": "TypeFunc",
            "name": "Function",
            "printedName": "() throws -> τ_0_0?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "τ_0_0?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ]
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble6expect4file4line_AA15SyncExpectationVyxGSS_SuxSgyKXAtlF",
        "mangledName": "$s6Nimble6expect4file4line_AA15SyncExpectationVyxGSS_SuxSgyKXAtlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0>",
        "sugared_genericSig": "<T>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "expect",
        "printedName": "expect(file:line:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "SyncExpectation",
            "printedName": "Nimble.SyncExpectation<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble15SyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "String",
            "printedName": "Swift.String",
            "hasDefaultArg": true,
            "usr": "s:SS"
          },
          {
            "kind": "TypeNominal",
            "name": "UInt",
            "printedName": "Swift.UInt",
            "hasDefaultArg": true,
            "usr": "s:Su"
          },
          {
            "kind": "TypeFunc",
            "name": "Function",
            "printedName": "() -> () throws -> τ_0_0",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "() throws -> τ_0_0",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ]
              },
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "typeAttributes": [
              "noescape"
            ]
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble6expect4file4line_AA15SyncExpectationVyxGSS_SuxyKcyXKtlF",
        "mangledName": "$s6Nimble6expect4file4line_AA15SyncExpectationVyxGSS_SuxyKcyXKtlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0>",
        "sugared_genericSig": "<T>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "expect",
        "printedName": "expect(file:line:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "SyncExpectation",
            "printedName": "Nimble.SyncExpectation<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble15SyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "String",
            "printedName": "Swift.String",
            "hasDefaultArg": true,
            "usr": "s:SS"
          },
          {
            "kind": "TypeNominal",
            "name": "UInt",
            "printedName": "Swift.UInt",
            "hasDefaultArg": true,
            "usr": "s:Su"
          },
          {
            "kind": "TypeFunc",
            "name": "Function",
            "printedName": "() -> () throws -> τ_0_0?",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "() throws -> τ_0_0?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "τ_0_0?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_0_0"
                      }
                    ],
                    "usr": "s:Sq"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ]
              },
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "typeAttributes": [
              "noescape"
            ]
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble6expect4file4line_AA15SyncExpectationVyxGSS_SuxSgyKcyXKtlF",
        "mangledName": "$s6Nimble6expect4file4line_AA15SyncExpectationVyxGSS_SuxSgyKcyXKtlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0>",
        "sugared_genericSig": "<T>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "expect",
        "printedName": "expect(file:line:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "SyncExpectation",
            "printedName": "Nimble.SyncExpectation<()>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "usr": "s:6Nimble15SyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "String",
            "printedName": "Swift.String",
            "hasDefaultArg": true,
            "usr": "s:SS"
          },
          {
            "kind": "TypeNominal",
            "name": "UInt",
            "printedName": "Swift.UInt",
            "hasDefaultArg": true,
            "usr": "s:Su"
          },
          {
            "kind": "TypeFunc",
            "name": "Function",
            "printedName": "() -> () throws -> ()",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "() throws -> ()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ]
              },
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "typeAttributes": [
              "noescape"
            ]
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble6expect4file4line_AA15SyncExpectationVyytGSS_SuyyKcyXKtF",
        "mangledName": "$s6Nimble6expect4file4line_AA15SyncExpectationVyytGSS_SuyyKcyXKtF",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "expects",
        "printedName": "expects(file:line:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "SyncExpectation",
            "printedName": "Nimble.SyncExpectation<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble15SyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "String",
            "printedName": "Swift.String",
            "hasDefaultArg": true,
            "usr": "s:SS"
          },
          {
            "kind": "TypeNominal",
            "name": "UInt",
            "printedName": "Swift.UInt",
            "hasDefaultArg": true,
            "usr": "s:Su"
          },
          {
            "kind": "TypeFunc",
            "name": "Function",
            "printedName": "() throws -> τ_0_0?",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "τ_0_0?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ]
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble7expects4file4line_AA15SyncExpectationVyxGSS_SuxSgyKXAtlF",
        "mangledName": "$s6Nimble7expects4file4line_AA15SyncExpectationVyxGSS_SuxSgyKXAtlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0>",
        "sugared_genericSig": "<T>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "expects",
        "printedName": "expects(file:line:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "SyncExpectation",
            "printedName": "Nimble.SyncExpectation<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble15SyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "String",
            "printedName": "Swift.String",
            "hasDefaultArg": true,
            "usr": "s:SS"
          },
          {
            "kind": "TypeNominal",
            "name": "UInt",
            "printedName": "Swift.UInt",
            "hasDefaultArg": true,
            "usr": "s:Su"
          },
          {
            "kind": "TypeFunc",
            "name": "Function",
            "printedName": "() -> () throws -> τ_0_0",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "() throws -> τ_0_0",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ]
              },
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "typeAttributes": [
              "noescape"
            ]
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble7expects4file4line_AA15SyncExpectationVyxGSS_SuxyKcyXKtlF",
        "mangledName": "$s6Nimble7expects4file4line_AA15SyncExpectationVyxGSS_SuxyKcyXKtlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0>",
        "sugared_genericSig": "<T>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "expects",
        "printedName": "expects(file:line:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "SyncExpectation",
            "printedName": "Nimble.SyncExpectation<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble15SyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "String",
            "printedName": "Swift.String",
            "hasDefaultArg": true,
            "usr": "s:SS"
          },
          {
            "kind": "TypeNominal",
            "name": "UInt",
            "printedName": "Swift.UInt",
            "hasDefaultArg": true,
            "usr": "s:Su"
          },
          {
            "kind": "TypeFunc",
            "name": "Function",
            "printedName": "() -> () throws -> τ_0_0?",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "() throws -> τ_0_0?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "τ_0_0?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_0_0"
                      }
                    ],
                    "usr": "s:Sq"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ]
              },
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "typeAttributes": [
              "noescape"
            ]
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble7expects4file4line_AA15SyncExpectationVyxGSS_SuxSgyKcyXKtlF",
        "mangledName": "$s6Nimble7expects4file4line_AA15SyncExpectationVyxGSS_SuxSgyKcyXKtlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0>",
        "sugared_genericSig": "<T>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "expects",
        "printedName": "expects(file:line:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "SyncExpectation",
            "printedName": "Nimble.SyncExpectation<()>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "usr": "s:6Nimble15SyncExpectationV"
          },
          {
            "kind": "TypeNominal",
            "name": "String",
            "printedName": "Swift.String",
            "hasDefaultArg": true,
            "usr": "s:SS"
          },
          {
            "kind": "TypeNominal",
            "name": "UInt",
            "printedName": "Swift.UInt",
            "hasDefaultArg": true,
            "usr": "s:Su"
          },
          {
            "kind": "TypeFunc",
            "name": "Function",
            "printedName": "() -> () throws -> ()",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "() throws -> ()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ]
              },
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "typeAttributes": [
              "noescape"
            ]
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble7expects4file4line_AA15SyncExpectationVyytGSS_SuyyKcyXKtF",
        "mangledName": "$s6Nimble7expects4file4line_AA15SyncExpectationVyytGSS_SuyyKcyXKtF",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "fail",
        "printedName": "fail(_:location:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "String",
            "printedName": "Swift.String",
            "usr": "s:SS"
          },
          {
            "kind": "TypeNominal",
            "name": "SourceLocation",
            "printedName": "Nimble.SourceLocation",
            "usr": "c:@M@Nimble@objc(cs)SourceLocation"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble4fail_8locationySS_AA14SourceLocationCtF",
        "mangledName": "$s6Nimble4fail_8locationySS_AA14SourceLocationCtF",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "fail",
        "printedName": "fail(_:file:line:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "String",
            "printedName": "Swift.String",
            "usr": "s:SS"
          },
          {
            "kind": "TypeNominal",
            "name": "String",
            "printedName": "Swift.String",
            "hasDefaultArg": true,
            "usr": "s:SS"
          },
          {
            "kind": "TypeNominal",
            "name": "UInt",
            "printedName": "Swift.UInt",
            "hasDefaultArg": true,
            "usr": "s:Su"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble4fail_4file4lineySS_SSSutF",
        "mangledName": "$s6Nimble4fail_4file4lineySS_SSSutF",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "fail",
        "printedName": "fail(_:line:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Void",
            "printedName": "()"
          },
          {
            "kind": "TypeNominal",
            "name": "String",
            "printedName": "Swift.String",
            "hasDefaultArg": true,
            "usr": "s:SS"
          },
          {
            "kind": "TypeNominal",
            "name": "UInt",
            "printedName": "Swift.UInt",
            "hasDefaultArg": true,
            "usr": "s:Su"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble4fail_4lineySS_SutF",
        "mangledName": "$s6Nimble4fail_4lineySS_SutF",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "TypeDecl",
        "name": "BadInstructionException",
        "printedName": "BadInstructionException",
        "children": [
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(coder:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Nimble.BadInstructionException?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "BadInstructionException",
                    "printedName": "Nimble.BadInstructionException",
                    "usr": "c:@M@Nimble@objc(cs)BadInstructionException"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "NSCoder",
                "printedName": "Foundation.NSCoder",
                "usr": "c:objc(cs)NSCoder"
              }
            ],
            "declKind": "Constructor",
            "usr": "c:@M@Nimble@objc(cs)BadInstructionException(im)initWithCoder:",
            "mangledName": "$s6Nimble23BadInstructionExceptionC5coderACSgSo7NSCoderC_tcfc",
            "moduleName": "Nimble",
            "overriding": true,
            "objc_name": "initWithCoder:",
            "declAttributes": [
              "Dynamic",
              "ObjC",
              "AccessControl",
              "Required"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Function",
            "name": "receiveReply",
            "printedName": "receiveReply(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int32",
                "printedName": "Swift.Int32",
                "usr": "s:s5Int32V"
              },
              {
                "kind": "TypeNominal",
                "name": "bad_instruction_exception_reply_t",
                "printedName": "Nimble.bad_instruction_exception_reply_t",
                "usr": "c:@SA@bad_instruction_exception_reply_t"
              }
            ],
            "declKind": "Func",
            "usr": "c:@M@Nimble@objc(cs)BadInstructionException(cm)receiveReply:",
            "mangledName": "$s6Nimble23BadInstructionExceptionC12receiveReplyys5Int32VSo33bad_instruction_exception_reply_taFZ",
            "moduleName": "Nimble",
            "static": true,
            "objc_name": "receiveReply:",
            "declAttributes": [
              "AccessControl",
              "ObjC",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(name:reason:userInfo:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "BadInstructionException",
                "printedName": "Nimble.BadInstructionException",
                "usr": "c:@M@Nimble@objc(cs)BadInstructionException"
              },
              {
                "kind": "TypeNominal",
                "name": "NSExceptionName",
                "printedName": "Foundation.NSExceptionName",
                "usr": "c:@T@NSExceptionName"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.String?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "[Swift.AnyHashable : Any]?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Dictionary",
                    "printedName": "[Swift.AnyHashable : Any]",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "AnyHashable",
                        "printedName": "Swift.AnyHashable",
                        "usr": "s:s11AnyHashableV"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "ProtocolComposition",
                        "printedName": "Any"
                      }
                    ],
                    "usr": "s:SD"
                  }
                ],
                "hasDefaultArg": true,
                "usr": "s:Sq"
              }
            ],
            "declKind": "Constructor",
            "usr": "c:@M@Nimble@objc(cs)BadInstructionException(im)initWithName:reason:userInfo:",
            "mangledName": "$s6Nimble23BadInstructionExceptionC4name6reason8userInfoACSo15NSExceptionNamea_SSSgSDys11AnyHashableVypGSgtcfc",
            "moduleName": "Nimble",
            "overriding": true,
            "implicit": true,
            "objc_name": "initWithName:reason:userInfo:",
            "declAttributes": [
              "Dynamic",
              "ObjC",
              "Override"
            ],
            "init_kind": "Designated"
          }
        ],
        "declKind": "Class",
        "usr": "c:@M@Nimble@objc(cs)BadInstructionException",
        "mangledName": "$s6Nimble23BadInstructionExceptionC",
        "moduleName": "Nimble",
        "objc_name": "BadInstructionException",
        "declAttributes": [
          "AccessControl",
          "ObjC",
          "RawDocComment"
        ],
        "superclassUsr": "c:objc(cs)NSException",
        "hasMissingDesignatedInitializers": true,
        "superclassNames": [
          "Foundation.NSException",
          "ObjectiveC.NSObject"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObservingPublishing",
            "printedName": "_KeyValueCodingAndObservingPublishing",
            "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
            "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObserving",
            "printedName": "_KeyValueCodingAndObserving",
            "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
            "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          }
        ]
      },
      {
        "kind": "Function",
        "name": "satisfyAnyOf",
        "printedName": "satisfyAnyOf(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "Array",
            "printedName": "[Nimble.Predicate<τ_0_0>]",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Predicate",
                "printedName": "Nimble.Predicate<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble9PredicateV"
              }
            ],
            "usr": "s:Sa"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble12satisfyAnyOfyAA9PredicateVyxGAEd_tlF",
        "mangledName": "$s6Nimble12satisfyAnyOfyAA9PredicateVyxGAEd_tlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0>",
        "sugared_genericSig": "<T>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "satisfyAnyOf",
        "printedName": "satisfyAnyOf(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "Array",
            "printedName": "[Nimble.Predicate<τ_0_0>]",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Predicate",
                "printedName": "Nimble.Predicate<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble9PredicateV"
              }
            ],
            "usr": "s:Sa"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble12satisfyAnyOfyAA9PredicateVyxGSayAEGlF",
        "mangledName": "$s6Nimble12satisfyAnyOfyAA9PredicateVyxGSayAEGlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0>",
        "sugared_genericSig": "<T>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "||",
        "printedName": "||(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble2oooiyAA9PredicateVyxGAE_AEtlF",
        "mangledName": "$s6Nimble2oooiyAA9PredicateVyxGAE_AEtlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0>",
        "sugared_genericSig": "<T>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "TypeDecl",
        "name": "Expression",
        "printedName": "Expression",
        "children": [
          {
            "kind": "Var",
            "name": "location",
            "printedName": "location",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "SourceLocation",
                "printedName": "Nimble.SourceLocation",
                "usr": "c:@M@Nimble@objc(cs)SourceLocation"
              }
            ],
            "declKind": "Var",
            "usr": "s:6Nimble10ExpressionV8locationAA14SourceLocationCvp",
            "mangledName": "$s6Nimble10ExpressionV8locationAA14SourceLocationCvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "HasStorage",
              "AccessControl"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SourceLocation",
                    "printedName": "Nimble.SourceLocation",
                    "usr": "c:@M@Nimble@objc(cs)SourceLocation"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble10ExpressionV8locationAA14SourceLocationCvg",
                "mangledName": "$s6Nimble10ExpressionV8locationAA14SourceLocationCvg",
                "moduleName": "Nimble",
                "genericSig": "<τ_0_0>",
                "sugared_genericSig": "<Value>",
                "implicit": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "isClosure",
            "printedName": "isClosure",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              }
            ],
            "declKind": "Var",
            "usr": "s:6Nimble10ExpressionV9isClosureSbvp",
            "mangledName": "$s6Nimble10ExpressionV9isClosureSbvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "HasStorage",
              "AccessControl"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Bool",
                    "printedName": "Swift.Bool",
                    "usr": "s:Sb"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble10ExpressionV9isClosureSbvg",
                "mangledName": "$s6Nimble10ExpressionV9isClosureSbvg",
                "moduleName": "Nimble",
                "genericSig": "<τ_0_0>",
                "sugared_genericSig": "<Value>",
                "implicit": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(expression:location:isClosure:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Expression",
                "printedName": "Nimble.Expression<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble10ExpressionV"
              },
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "() throws -> τ_0_0?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "τ_0_0?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_0_0"
                      }
                    ],
                    "usr": "s:Sq"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ]
              },
              {
                "kind": "TypeNominal",
                "name": "SourceLocation",
                "printedName": "Nimble.SourceLocation",
                "usr": "c:@M@Nimble@objc(cs)SourceLocation"
              },
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "hasDefaultArg": true,
                "usr": "s:Sb"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:6Nimble10ExpressionV10expression8location9isClosureACyxGxSgyKc_AA14SourceLocationCSbtcfc",
            "mangledName": "$s6Nimble10ExpressionV10expression8location9isClosureACyxGxSgyKc_AA14SourceLocationCSbtcfc",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0>",
            "sugared_genericSig": "<Value>",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(memoizedExpression:location:withoutCaching:isClosure:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Expression",
                "printedName": "Nimble.Expression<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble10ExpressionV"
              },
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Swift.Bool) throws -> τ_0_0?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "τ_0_0?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_0_0"
                      }
                    ],
                    "usr": "s:Sq"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Bool",
                    "printedName": "Swift.Bool",
                    "usr": "s:Sb"
                  }
                ]
              },
              {
                "kind": "TypeNominal",
                "name": "SourceLocation",
                "printedName": "Nimble.SourceLocation",
                "usr": "c:@M@Nimble@objc(cs)SourceLocation"
              },
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              },
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "hasDefaultArg": true,
                "usr": "s:Sb"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:6Nimble10ExpressionV08memoizedB08location14withoutCaching9isClosureACyxGxSgSbKc_AA14SourceLocationCS2btcfc",
            "mangledName": "$s6Nimble10ExpressionV08memoizedB08location14withoutCaching9isClosureACyxGxSgSbKc_AA14SourceLocationCS2btcfc",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0>",
            "sugared_genericSig": "<Value>",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Function",
            "name": "cast",
            "printedName": "cast(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Expression",
                "printedName": "Nimble.Expression<τ_1_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_1_0"
                  }
                ],
                "usr": "s:6Nimble10ExpressionV"
              },
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(τ_0_0?) throws -> τ_1_0?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "τ_1_0?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_1_0"
                      }
                    ],
                    "usr": "s:Sq"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "τ_0_0?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_0_0"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ]
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble10ExpressionV4castyACyqd__Gqd__SgxSgKclF",
            "mangledName": "$s6Nimble10ExpressionV4castyACyqd__Gqd__SgxSgKclF",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0, τ_1_0>",
            "sugared_genericSig": "<Value, U>",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "evaluate",
            "printedName": "evaluate()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "τ_0_0?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble10ExpressionV8evaluatexSgyKF",
            "mangledName": "$s6Nimble10ExpressionV8evaluatexSgyKF",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0>",
            "sugared_genericSig": "<Value>",
            "declAttributes": [
              "AccessControl"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "withoutCaching",
            "printedName": "withoutCaching()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Expression",
                "printedName": "Nimble.Expression<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble10ExpressionV"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble10ExpressionV14withoutCachingACyxGyF",
            "mangledName": "$s6Nimble10ExpressionV14withoutCachingACyxGyF",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0>",
            "sugared_genericSig": "<Value>",
            "declAttributes": [
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "withCaching",
            "printedName": "withCaching()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Expression",
                "printedName": "Nimble.Expression<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble10ExpressionV"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble10ExpressionV11withCachingACyxGyF",
            "mangledName": "$s6Nimble10ExpressionV11withCachingACyxGyF",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0>",
            "sugared_genericSig": "<Value>",
            "declAttributes": [
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Struct",
        "usr": "s:6Nimble10ExpressionV",
        "mangledName": "$s6Nimble10ExpressionV",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0>",
        "sugared_genericSig": "<Value>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "TypeDecl",
        "name": "FailureMessage",
        "printedName": "FailureMessage",
        "children": [
          {
            "kind": "Var",
            "name": "expected",
            "printedName": "expected",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:6Nimble14FailureMessageC8expectedSSvp",
            "mangledName": "$s6Nimble14FailureMessageC8expectedSSvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble14FailureMessageC8expectedSSvg",
                "mangledName": "$s6Nimble14FailureMessageC8expectedSSvg",
                "moduleName": "Nimble",
                "implicit": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble14FailureMessageC8expectedSSvs",
                "mangledName": "$s6Nimble14FailureMessageC8expectedSSvs",
                "moduleName": "Nimble",
                "implicit": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble14FailureMessageC8expectedSSvM",
                "mangledName": "$s6Nimble14FailureMessageC8expectedSSvM",
                "moduleName": "Nimble",
                "implicit": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "actualValue",
            "printedName": "actualValue",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.String?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Var",
            "usr": "s:6Nimble14FailureMessageC11actualValueSSSgvp",
            "mangledName": "$s6Nimble14FailureMessageC11actualValueSSSgvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "Swift.String?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "String",
                        "printedName": "Swift.String",
                        "usr": "s:SS"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble14FailureMessageC11actualValueSSSgvg",
                "mangledName": "$s6Nimble14FailureMessageC11actualValueSSSgvg",
                "moduleName": "Nimble",
                "implicit": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "Swift.String?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "String",
                        "printedName": "Swift.String",
                        "usr": "s:SS"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble14FailureMessageC11actualValueSSSgvs",
                "mangledName": "$s6Nimble14FailureMessageC11actualValueSSSgvs",
                "moduleName": "Nimble",
                "implicit": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble14FailureMessageC11actualValueSSSgvM",
                "mangledName": "$s6Nimble14FailureMessageC11actualValueSSSgvM",
                "moduleName": "Nimble",
                "implicit": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "to",
            "printedName": "to",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:6Nimble14FailureMessageC2toSSvp",
            "mangledName": "$s6Nimble14FailureMessageC2toSSvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl",
              "RawDocComment"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble14FailureMessageC2toSSvg",
                "mangledName": "$s6Nimble14FailureMessageC2toSSvg",
                "moduleName": "Nimble",
                "implicit": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble14FailureMessageC2toSSvs",
                "mangledName": "$s6Nimble14FailureMessageC2toSSvs",
                "moduleName": "Nimble",
                "implicit": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble14FailureMessageC2toSSvM",
                "mangledName": "$s6Nimble14FailureMessageC2toSSvM",
                "moduleName": "Nimble",
                "implicit": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "postfixMessage",
            "printedName": "postfixMessage",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:6Nimble14FailureMessageC07postfixC0SSvp",
            "mangledName": "$s6Nimble14FailureMessageC07postfixC0SSvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble14FailureMessageC07postfixC0SSvg",
                "mangledName": "$s6Nimble14FailureMessageC07postfixC0SSvg",
                "moduleName": "Nimble",
                "implicit": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble14FailureMessageC07postfixC0SSvs",
                "mangledName": "$s6Nimble14FailureMessageC07postfixC0SSvs",
                "moduleName": "Nimble",
                "implicit": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble14FailureMessageC07postfixC0SSvM",
                "mangledName": "$s6Nimble14FailureMessageC07postfixC0SSvM",
                "moduleName": "Nimble",
                "implicit": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "postfixActual",
            "printedName": "postfixActual",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:6Nimble14FailureMessageC13postfixActualSSvp",
            "mangledName": "$s6Nimble14FailureMessageC13postfixActualSSvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble14FailureMessageC13postfixActualSSvg",
                "mangledName": "$s6Nimble14FailureMessageC13postfixActualSSvg",
                "moduleName": "Nimble",
                "implicit": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble14FailureMessageC13postfixActualSSvs",
                "mangledName": "$s6Nimble14FailureMessageC13postfixActualSSvs",
                "moduleName": "Nimble",
                "implicit": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble14FailureMessageC13postfixActualSSvM",
                "mangledName": "$s6Nimble14FailureMessageC13postfixActualSSvM",
                "moduleName": "Nimble",
                "implicit": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "extendedMessage",
            "printedName": "extendedMessage",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.String?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Var",
            "usr": "s:6Nimble14FailureMessageC08extendedC0SSSgvp",
            "mangledName": "$s6Nimble14FailureMessageC08extendedC0SSSgvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl",
              "RawDocComment"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "Swift.String?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "String",
                        "printedName": "Swift.String",
                        "usr": "s:SS"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble14FailureMessageC08extendedC0SSSgvg",
                "mangledName": "$s6Nimble14FailureMessageC08extendedC0SSSgvg",
                "moduleName": "Nimble",
                "implicit": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "Swift.String?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "String",
                        "printedName": "Swift.String",
                        "usr": "s:SS"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble14FailureMessageC08extendedC0SSSgvs",
                "mangledName": "$s6Nimble14FailureMessageC08extendedC0SSSgvs",
                "moduleName": "Nimble",
                "implicit": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble14FailureMessageC08extendedC0SSSgvM",
                "mangledName": "$s6Nimble14FailureMessageC08extendedC0SSSgvM",
                "moduleName": "Nimble",
                "implicit": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "userDescription",
            "printedName": "userDescription",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.String?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Var",
            "usr": "s:6Nimble14FailureMessageC15userDescriptionSSSgvp",
            "mangledName": "$s6Nimble14FailureMessageC15userDescriptionSSSgvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "Swift.String?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "String",
                        "printedName": "Swift.String",
                        "usr": "s:SS"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble14FailureMessageC15userDescriptionSSSgvg",
                "mangledName": "$s6Nimble14FailureMessageC15userDescriptionSSSgvg",
                "moduleName": "Nimble",
                "implicit": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "Swift.String?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "String",
                        "printedName": "Swift.String",
                        "usr": "s:SS"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble14FailureMessageC15userDescriptionSSSgvs",
                "mangledName": "$s6Nimble14FailureMessageC15userDescriptionSSSgvs",
                "moduleName": "Nimble",
                "implicit": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble14FailureMessageC15userDescriptionSSSgvM",
                "mangledName": "$s6Nimble14FailureMessageC15userDescriptionSSSgvM",
                "moduleName": "Nimble",
                "implicit": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "stringValue",
            "printedName": "stringValue",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:6Nimble14FailureMessageC11stringValueSSvp",
            "mangledName": "$s6Nimble14FailureMessageC11stringValueSSvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble14FailureMessageC11stringValueSSvg",
                "mangledName": "$s6Nimble14FailureMessageC11stringValueSSvg",
                "moduleName": "Nimble",
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble14FailureMessageC11stringValueSSvs",
                "mangledName": "$s6Nimble14FailureMessageC11stringValueSSvs",
                "moduleName": "Nimble",
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble14FailureMessageC11stringValueSSvM",
                "mangledName": "$s6Nimble14FailureMessageC11stringValueSSvM",
                "moduleName": "Nimble",
                "implicit": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "FailureMessage",
                "printedName": "Nimble.FailureMessage",
                "usr": "c:@M@Nimble@objc(cs)FailureMessage"
              }
            ],
            "declKind": "Constructor",
            "usr": "c:@M@Nimble@objc(cs)FailureMessage(im)init",
            "mangledName": "$s6Nimble14FailureMessageCACycfc",
            "moduleName": "Nimble",
            "overriding": true,
            "objc_name": "init",
            "declAttributes": [
              "Dynamic",
              "ObjC",
              "Override",
              "AccessControl"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(stringValue:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "FailureMessage",
                "printedName": "Nimble.FailureMessage",
                "usr": "c:@M@Nimble@objc(cs)FailureMessage"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:6Nimble14FailureMessageC11stringValueACSS_tcfc",
            "mangledName": "$s6Nimble14FailureMessageC11stringValueACSS_tcfc",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl"
            ],
            "init_kind": "Designated"
          }
        ],
        "declKind": "Class",
        "usr": "c:@M@Nimble@objc(cs)FailureMessage",
        "mangledName": "$s6Nimble14FailureMessageC",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "RawDocComment",
          "ObjC"
        ],
        "superclassUsr": "c:objc(cs)NSObject",
        "inheritsConvenienceInitializers": true,
        "superclassNames": [
          "ObjectiveC.NSObject"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObservingPublishing",
            "printedName": "_KeyValueCodingAndObservingPublishing",
            "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
            "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObserving",
            "printedName": "_KeyValueCodingAndObserving",
            "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
            "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          }
        ]
      },
      {
        "kind": "Function",
        "name": "haveCount",
        "printedName": "haveCount(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "Int",
            "printedName": "Swift.Int",
            "usr": "s:Si"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble9haveCountyAA9PredicateVyxGSiSlRzlF",
        "mangledName": "$s6Nimble9haveCountyAA9PredicateVyxGSiSlRzlF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0 where τ_0_0 : Swift.Collection>",
        "sugared_genericSig": "<T where T : Swift.Collection>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "haveCount",
        "printedName": "haveCount(_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<Nimble.NMBCollection>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBCollection",
                "printedName": "Nimble.NMBCollection",
                "usr": "s:6Nimble13NMBCollectionP"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          },
          {
            "kind": "TypeNominal",
            "name": "Int",
            "printedName": "Swift.Int",
            "usr": "s:Si"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble9haveCountyAA9PredicateVyAA13NMBCollection_pGSiF",
        "mangledName": "$s6Nimble9haveCountyAA9PredicateVyAA13NMBCollection_pGSiF",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "TypeDecl",
        "name": "Predicate",
        "printedName": "Predicate",
        "children": [
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Predicate",
                "printedName": "Nimble.Predicate<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble9PredicateV"
              },
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Nimble.Expression<τ_0_0>) throws -> Nimble.PredicateResult",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "PredicateResult",
                    "printedName": "Nimble.PredicateResult",
                    "usr": "s:6Nimble15PredicateResultV"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Expression",
                    "printedName": "Nimble.Expression<τ_0_0>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_0_0"
                      }
                    ],
                    "usr": "s:6Nimble10ExpressionV"
                  }
                ]
              }
            ],
            "declKind": "Constructor",
            "usr": "s:6Nimble9PredicateVyACyxGAA0B6ResultVAA10ExpressionVyxGKccfc",
            "mangledName": "$s6Nimble9PredicateVyACyxGAA0B6ResultVAA10ExpressionVyxGKccfc",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0>",
            "sugared_genericSig": "<T>",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Function",
            "name": "satisfies",
            "printedName": "satisfies(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "PredicateResult",
                "printedName": "Nimble.PredicateResult",
                "usr": "s:6Nimble15PredicateResultV"
              },
              {
                "kind": "TypeNominal",
                "name": "Expression",
                "printedName": "Nimble.Expression<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble10ExpressionV"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble9PredicateV9satisfiesyAA0B6ResultVAA10ExpressionVyxGKF",
            "mangledName": "$s6Nimble9PredicateV9satisfiesyAA0B6ResultVAA10ExpressionVyxGKF",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0>",
            "sugared_genericSig": "<T>",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "define",
            "printedName": "define(matcher:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Predicate",
                "printedName": "Nimble.Predicate<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble9PredicateV"
              },
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Nimble.Expression<τ_0_0>) throws -> Nimble.PredicateResult",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "PredicateResult",
                    "printedName": "Nimble.PredicateResult",
                    "usr": "s:6Nimble15PredicateResultV"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Expression",
                    "printedName": "Nimble.Expression<τ_0_0>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_0_0"
                      }
                    ],
                    "usr": "s:6Nimble10ExpressionV"
                  }
                ]
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble9PredicateV6define7matcherACyxGAA0B6ResultVAA10ExpressionVyxGKc_tFZ",
            "mangledName": "$s6Nimble9PredicateV6define7matcherACyxGAA0B6ResultVAA10ExpressionVyxGKc_tFZ",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0>",
            "sugared_genericSig": "<T>",
            "static": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "define",
            "printedName": "define(_:matcher:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Predicate",
                "printedName": "Nimble.Predicate<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble9PredicateV"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "hasDefaultArg": true,
                "usr": "s:SS"
              },
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Nimble.Expression<τ_0_0>, Nimble.ExpectationMessage) throws -> Nimble.PredicateResult",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "PredicateResult",
                    "printedName": "Nimble.PredicateResult",
                    "usr": "s:6Nimble15PredicateResultV"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Tuple",
                    "printedName": "(Nimble.Expression<τ_0_0>, Nimble.ExpectationMessage)",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Expression",
                        "printedName": "Nimble.Expression<τ_0_0>",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "GenericTypeParam",
                            "printedName": "τ_0_0"
                          }
                        ],
                        "usr": "s:6Nimble10ExpressionV"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "ExpectationMessage",
                        "printedName": "Nimble.ExpectationMessage",
                        "usr": "s:6Nimble18ExpectationMessageO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble9PredicateV6define_7matcherACyxGSS_AA0B6ResultVAA10ExpressionVyxG_AA18ExpectationMessageOtKctFZ",
            "mangledName": "$s6Nimble9PredicateV6define_7matcherACyxGSS_AA0B6ResultVAA10ExpressionVyxG_AA18ExpectationMessageOtKctFZ",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0>",
            "sugared_genericSig": "<T>",
            "static": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "defineNilable",
            "printedName": "defineNilable(_:matcher:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Predicate",
                "printedName": "Nimble.Predicate<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble9PredicateV"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "hasDefaultArg": true,
                "usr": "s:SS"
              },
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Nimble.Expression<τ_0_0>, Nimble.ExpectationMessage) throws -> Nimble.PredicateResult",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "PredicateResult",
                    "printedName": "Nimble.PredicateResult",
                    "usr": "s:6Nimble15PredicateResultV"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Tuple",
                    "printedName": "(Nimble.Expression<τ_0_0>, Nimble.ExpectationMessage)",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Expression",
                        "printedName": "Nimble.Expression<τ_0_0>",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "GenericTypeParam",
                            "printedName": "τ_0_0"
                          }
                        ],
                        "usr": "s:6Nimble10ExpressionV"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "ExpectationMessage",
                        "printedName": "Nimble.ExpectationMessage",
                        "usr": "s:6Nimble18ExpectationMessageO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble9PredicateV13defineNilable_7matcherACyxGSS_AA0B6ResultVAA10ExpressionVyxG_AA18ExpectationMessageOtKctFZ",
            "mangledName": "$s6Nimble9PredicateV13defineNilable_7matcherACyxGSS_AA0B6ResultVAA10ExpressionVyxG_AA18ExpectationMessageOtKctFZ",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0>",
            "sugared_genericSig": "<T>",
            "static": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "simple",
            "printedName": "simple(_:matcher:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Predicate",
                "printedName": "Nimble.Predicate<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble9PredicateV"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "hasDefaultArg": true,
                "usr": "s:SS"
              },
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Nimble.Expression<τ_0_0>) throws -> Nimble.PredicateStatus",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "PredicateStatus",
                    "printedName": "Nimble.PredicateStatus",
                    "usr": "s:6Nimble15PredicateStatusO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Expression",
                    "printedName": "Nimble.Expression<τ_0_0>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_0_0"
                      }
                    ],
                    "usr": "s:6Nimble10ExpressionV"
                  }
                ]
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble9PredicateV6simple_7matcherACyxGSS_AA0B6StatusOAA10ExpressionVyxGKctFZ",
            "mangledName": "$s6Nimble9PredicateV6simple_7matcherACyxGSS_AA0B6StatusOAA10ExpressionVyxGKctFZ",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0>",
            "sugared_genericSig": "<T>",
            "static": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "simpleNilable",
            "printedName": "simpleNilable(_:matcher:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Predicate",
                "printedName": "Nimble.Predicate<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble9PredicateV"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "hasDefaultArg": true,
                "usr": "s:SS"
              },
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Nimble.Expression<τ_0_0>) throws -> Nimble.PredicateStatus",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "PredicateStatus",
                    "printedName": "Nimble.PredicateStatus",
                    "usr": "s:6Nimble15PredicateStatusO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Expression",
                    "printedName": "Nimble.Expression<τ_0_0>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_0_0"
                      }
                    ],
                    "usr": "s:6Nimble10ExpressionV"
                  }
                ]
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble9PredicateV13simpleNilable_7matcherACyxGSS_AA0B6StatusOAA10ExpressionVyxGKctFZ",
            "mangledName": "$s6Nimble9PredicateV13simpleNilable_7matcherACyxGSS_AA0B6StatusOAA10ExpressionVyxGKctFZ",
            "moduleName": "Nimble",
            "genericSig": "<τ_0_0>",
            "sugared_genericSig": "<T>",
            "static": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Var",
            "name": "requireNonNil",
            "printedName": "requireNonNil",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Predicate",
                "printedName": "Nimble.Predicate<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:6Nimble9PredicateV"
              }
            ],
            "declKind": "Var",
            "usr": "s:6Nimble9PredicateV13requireNonNilACyxGvp",
            "mangledName": "$s6Nimble9PredicateV13requireNonNilACyxGvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "isFromExtension": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Predicate",
                    "printedName": "Nimble.Predicate<τ_0_0>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_0_0"
                      }
                    ],
                    "usr": "s:6Nimble9PredicateV"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble9PredicateV13requireNonNilACyxGvg",
                "mangledName": "$s6Nimble9PredicateV13requireNonNilACyxGvg",
                "moduleName": "Nimble",
                "genericSig": "<τ_0_0>",
                "sugared_genericSig": "<T>",
                "isFromExtension": true,
                "accessorKind": "get"
              }
            ]
          }
        ],
        "declKind": "Struct",
        "usr": "s:6Nimble9PredicateV",
        "mangledName": "$s6Nimble9PredicateV",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0>",
        "sugared_genericSig": "<T>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "ExpectationStyle",
        "printedName": "ExpectationStyle",
        "children": [
          {
            "kind": "Var",
            "name": "toMatch",
            "printedName": "toMatch",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Nimble.ExpectationStyle.Type) -> Nimble.ExpectationStyle",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "ExpectationStyle",
                    "printedName": "Nimble.ExpectationStyle",
                    "usr": "s:6Nimble16ExpectationStyleO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "Nimble.ExpectationStyle.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ExpectationStyle",
                        "printedName": "Nimble.ExpectationStyle",
                        "usr": "s:6Nimble16ExpectationStyleO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:6Nimble16ExpectationStyleO7toMatchyA2CmF",
            "mangledName": "$s6Nimble16ExpectationStyleO7toMatchyA2CmF",
            "moduleName": "Nimble"
          },
          {
            "kind": "Var",
            "name": "toNotMatch",
            "printedName": "toNotMatch",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Nimble.ExpectationStyle.Type) -> Nimble.ExpectationStyle",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "ExpectationStyle",
                    "printedName": "Nimble.ExpectationStyle",
                    "usr": "s:6Nimble16ExpectationStyleO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "Nimble.ExpectationStyle.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ExpectationStyle",
                        "printedName": "Nimble.ExpectationStyle",
                        "usr": "s:6Nimble16ExpectationStyleO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:6Nimble16ExpectationStyleO10toNotMatchyA2CmF",
            "mangledName": "$s6Nimble16ExpectationStyleO10toNotMatchyA2CmF",
            "moduleName": "Nimble"
          },
          {
            "kind": "Function",
            "name": "==",
            "printedName": "==(_:_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              },
              {
                "kind": "TypeNominal",
                "name": "ExpectationStyle",
                "printedName": "Nimble.ExpectationStyle",
                "usr": "s:6Nimble16ExpectationStyleO"
              },
              {
                "kind": "TypeNominal",
                "name": "ExpectationStyle",
                "printedName": "Nimble.ExpectationStyle",
                "usr": "s:6Nimble16ExpectationStyleO"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble16ExpectationStyleO2eeoiySbAC_ACtFZ",
            "mangledName": "$s6Nimble16ExpectationStyleO2eeoiySbAC_ACtFZ",
            "moduleName": "Nimble",
            "static": true,
            "implicit": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Var",
            "name": "hashValue",
            "printedName": "hashValue",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Var",
            "usr": "s:6Nimble16ExpectationStyleO9hashValueSivp",
            "mangledName": "$s6Nimble16ExpectationStyleO9hashValueSivp",
            "moduleName": "Nimble",
            "implicit": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble16ExpectationStyleO9hashValueSivg",
                "mangledName": "$s6Nimble16ExpectationStyleO9hashValueSivg",
                "moduleName": "Nimble",
                "implicit": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Function",
            "name": "hash",
            "printedName": "hash(into:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Hasher",
                "printedName": "Swift.Hasher",
                "paramValueOwnership": "InOut",
                "usr": "s:s6HasherV"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble16ExpectationStyleO4hash4intoys6HasherVz_tF",
            "mangledName": "$s6Nimble16ExpectationStyleO4hash4intoys6HasherVz_tF",
            "moduleName": "Nimble",
            "implicit": true,
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Enum",
        "usr": "s:6Nimble16ExpectationStyleO",
        "mangledName": "$s6Nimble16ExpectationStyleO",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          }
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "PredicateResult",
        "printedName": "PredicateResult",
        "children": [
          {
            "kind": "Var",
            "name": "status",
            "printedName": "status",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "PredicateStatus",
                "printedName": "Nimble.PredicateStatus",
                "usr": "s:6Nimble15PredicateStatusO"
              }
            ],
            "declKind": "Var",
            "usr": "s:6Nimble15PredicateResultV6statusAA0B6StatusOvp",
            "mangledName": "$s6Nimble15PredicateResultV6statusAA0B6StatusOvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "HasStorage",
              "AccessControl",
              "RawDocComment"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "PredicateStatus",
                    "printedName": "Nimble.PredicateStatus",
                    "usr": "s:6Nimble15PredicateStatusO"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble15PredicateResultV6statusAA0B6StatusOvg",
                "mangledName": "$s6Nimble15PredicateResultV6statusAA0B6StatusOvg",
                "moduleName": "Nimble",
                "implicit": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "PredicateStatus",
                    "printedName": "Nimble.PredicateStatus",
                    "usr": "s:6Nimble15PredicateStatusO"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble15PredicateResultV6statusAA0B6StatusOvs",
                "mangledName": "$s6Nimble15PredicateResultV6statusAA0B6StatusOvs",
                "moduleName": "Nimble",
                "implicit": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble15PredicateResultV6statusAA0B6StatusOvM",
                "mangledName": "$s6Nimble15PredicateResultV6statusAA0B6StatusOvM",
                "moduleName": "Nimble",
                "implicit": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "message",
            "printedName": "message",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "ExpectationMessage",
                "printedName": "Nimble.ExpectationMessage",
                "usr": "s:6Nimble18ExpectationMessageO"
              }
            ],
            "declKind": "Var",
            "usr": "s:6Nimble15PredicateResultV7messageAA18ExpectationMessageOvp",
            "mangledName": "$s6Nimble15PredicateResultV7messageAA18ExpectationMessageOvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "HasStorage",
              "AccessControl",
              "RawDocComment"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "ExpectationMessage",
                    "printedName": "Nimble.ExpectationMessage",
                    "usr": "s:6Nimble18ExpectationMessageO"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble15PredicateResultV7messageAA18ExpectationMessageOvg",
                "mangledName": "$s6Nimble15PredicateResultV7messageAA18ExpectationMessageOvg",
                "moduleName": "Nimble",
                "implicit": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "ExpectationMessage",
                    "printedName": "Nimble.ExpectationMessage",
                    "usr": "s:6Nimble18ExpectationMessageO"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble15PredicateResultV7messageAA18ExpectationMessageOvs",
                "mangledName": "$s6Nimble15PredicateResultV7messageAA18ExpectationMessageOvs",
                "moduleName": "Nimble",
                "implicit": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble15PredicateResultV7messageAA18ExpectationMessageOvM",
                "mangledName": "$s6Nimble15PredicateResultV7messageAA18ExpectationMessageOvM",
                "moduleName": "Nimble",
                "implicit": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(status:message:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "PredicateResult",
                "printedName": "Nimble.PredicateResult",
                "usr": "s:6Nimble15PredicateResultV"
              },
              {
                "kind": "TypeNominal",
                "name": "PredicateStatus",
                "printedName": "Nimble.PredicateStatus",
                "usr": "s:6Nimble15PredicateStatusO"
              },
              {
                "kind": "TypeNominal",
                "name": "ExpectationMessage",
                "printedName": "Nimble.ExpectationMessage",
                "usr": "s:6Nimble18ExpectationMessageO"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:6Nimble15PredicateResultV6status7messageAcA0B6StatusO_AA18ExpectationMessageOtcfc",
            "mangledName": "$s6Nimble15PredicateResultV6status7messageAcA0B6StatusO_AA18ExpectationMessageOtcfc",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(bool:message:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "PredicateResult",
                "printedName": "Nimble.PredicateResult",
                "usr": "s:6Nimble15PredicateResultV"
              },
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              },
              {
                "kind": "TypeNominal",
                "name": "ExpectationMessage",
                "printedName": "Nimble.ExpectationMessage",
                "usr": "s:6Nimble18ExpectationMessageO"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:6Nimble15PredicateResultV4bool7messageACSb_AA18ExpectationMessageOtcfc",
            "mangledName": "$s6Nimble15PredicateResultV4bool7messageACSb_AA18ExpectationMessageOtcfc",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Function",
            "name": "toBoolean",
            "printedName": "toBoolean(expectation:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              },
              {
                "kind": "TypeNominal",
                "name": "ExpectationStyle",
                "printedName": "Nimble.ExpectationStyle",
                "usr": "s:6Nimble16ExpectationStyleO"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble15PredicateResultV9toBoolean11expectationSbAA16ExpectationStyleO_tF",
            "mangledName": "$s6Nimble15PredicateResultV9toBoolean11expectationSbAA16ExpectationStyleO_tF",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "toObjectiveC",
            "printedName": "toObjectiveC()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBPredicateResult",
                "printedName": "Nimble.NMBPredicateResult",
                "usr": "c:@M@Nimble@objc(cs)NMBPredicateResult"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble15PredicateResultV12toObjectiveCAA012NMBPredicateC0CyF",
            "mangledName": "$s6Nimble15PredicateResultV12toObjectiveCAA012NMBPredicateC0CyF",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Struct",
        "usr": "s:6Nimble15PredicateResultV",
        "mangledName": "$s6Nimble15PredicateResultV",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "PredicateStatus",
        "printedName": "PredicateStatus",
        "children": [
          {
            "kind": "Var",
            "name": "matches",
            "printedName": "matches",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Nimble.PredicateStatus.Type) -> Nimble.PredicateStatus",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "PredicateStatus",
                    "printedName": "Nimble.PredicateStatus",
                    "usr": "s:6Nimble15PredicateStatusO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "Nimble.PredicateStatus.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "PredicateStatus",
                        "printedName": "Nimble.PredicateStatus",
                        "usr": "s:6Nimble15PredicateStatusO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:6Nimble15PredicateStatusO7matchesyA2CmF",
            "mangledName": "$s6Nimble15PredicateStatusO7matchesyA2CmF",
            "moduleName": "Nimble",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "doesNotMatch",
            "printedName": "doesNotMatch",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Nimble.PredicateStatus.Type) -> Nimble.PredicateStatus",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "PredicateStatus",
                    "printedName": "Nimble.PredicateStatus",
                    "usr": "s:6Nimble15PredicateStatusO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "Nimble.PredicateStatus.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "PredicateStatus",
                        "printedName": "Nimble.PredicateStatus",
                        "usr": "s:6Nimble15PredicateStatusO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:6Nimble15PredicateStatusO12doesNotMatchyA2CmF",
            "mangledName": "$s6Nimble15PredicateStatusO12doesNotMatchyA2CmF",
            "moduleName": "Nimble",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "fail",
            "printedName": "fail",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Nimble.PredicateStatus.Type) -> Nimble.PredicateStatus",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "PredicateStatus",
                    "printedName": "Nimble.PredicateStatus",
                    "usr": "s:6Nimble15PredicateStatusO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "Nimble.PredicateStatus.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "PredicateStatus",
                        "printedName": "Nimble.PredicateStatus",
                        "usr": "s:6Nimble15PredicateStatusO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:6Nimble15PredicateStatusO4failyA2CmF",
            "mangledName": "$s6Nimble15PredicateStatusO4failyA2CmF",
            "moduleName": "Nimble",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(bool:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "PredicateStatus",
                "printedName": "Nimble.PredicateStatus",
                "usr": "s:6Nimble15PredicateStatusO"
              },
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:6Nimble15PredicateStatusO4boolACSb_tcfc",
            "mangledName": "$s6Nimble15PredicateStatusO4boolACSb_tcfc",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Function",
            "name": "==",
            "printedName": "==(_:_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              },
              {
                "kind": "TypeNominal",
                "name": "PredicateStatus",
                "printedName": "Nimble.PredicateStatus",
                "usr": "s:6Nimble15PredicateStatusO"
              },
              {
                "kind": "TypeNominal",
                "name": "PredicateStatus",
                "printedName": "Nimble.PredicateStatus",
                "usr": "s:6Nimble15PredicateStatusO"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble15PredicateStatusO2eeoiySbAC_ACtFZ",
            "mangledName": "$s6Nimble15PredicateStatusO2eeoiySbAC_ACtFZ",
            "moduleName": "Nimble",
            "static": true,
            "implicit": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Var",
            "name": "hashValue",
            "printedName": "hashValue",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Var",
            "usr": "s:6Nimble15PredicateStatusO9hashValueSivp",
            "mangledName": "$s6Nimble15PredicateStatusO9hashValueSivp",
            "moduleName": "Nimble",
            "implicit": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble15PredicateStatusO9hashValueSivg",
                "mangledName": "$s6Nimble15PredicateStatusO9hashValueSivg",
                "moduleName": "Nimble",
                "implicit": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Function",
            "name": "hash",
            "printedName": "hash(into:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Hasher",
                "printedName": "Swift.Hasher",
                "paramValueOwnership": "InOut",
                "usr": "s:s6HasherV"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble15PredicateStatusO4hash4intoys6HasherVz_tF",
            "mangledName": "$s6Nimble15PredicateStatusO4hash4intoys6HasherVz_tF",
            "moduleName": "Nimble",
            "implicit": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "toObjectiveC",
            "printedName": "toObjectiveC()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBPredicateStatus",
                "printedName": "Nimble.NMBPredicateStatus",
                "usr": "c:@M@Nimble@objc(cs)NMBPredicateStatus"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble15PredicateStatusO12toObjectiveCAA012NMBPredicateC0CyF",
            "mangledName": "$s6Nimble15PredicateStatusO12toObjectiveCAA012NMBPredicateC0CyF",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Enum",
        "usr": "s:6Nimble15PredicateStatusO",
        "mangledName": "$s6Nimble15PredicateStatusO",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "Nimble"
      },
      {
        "kind": "TypeDecl",
        "name": "NMBPredicate",
        "printedName": "NMBPredicate",
        "children": [
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(predicate:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBPredicate",
                "printedName": "Nimble.NMBPredicate",
                "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
              },
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Nimble.Expression<ObjectiveC.NSObject>) throws -> Nimble.NMBPredicateResult",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NMBPredicateResult",
                    "printedName": "Nimble.NMBPredicateResult",
                    "usr": "c:@M@Nimble@objc(cs)NMBPredicateResult"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Expression",
                    "printedName": "Nimble.Expression<ObjectiveC.NSObject>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "NSObject",
                        "printedName": "ObjectiveC.NSObject",
                        "usr": "c:objc(cs)NSObject"
                      }
                    ],
                    "usr": "s:6Nimble10ExpressionV"
                  }
                ]
              }
            ],
            "declKind": "Constructor",
            "usr": "s:6Nimble12NMBPredicateC9predicateAcA0B6ResultCAA10ExpressionVySo8NSObjectCGKc_tcfc",
            "mangledName": "$s6Nimble12NMBPredicateC9predicateAcA0B6ResultCAA10ExpressionVySo8NSObjectCGKc_tcfc",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBPredicate",
                "printedName": "Nimble.NMBPredicate",
                "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
              }
            ],
            "declKind": "Constructor",
            "usr": "c:@M@Nimble@objc(cs)NMBPredicate(im)init",
            "mangledName": "$s6Nimble12NMBPredicateCACycfc",
            "moduleName": "Nimble",
            "overriding": true,
            "implicit": true,
            "objc_name": "init",
            "declAttributes": [
              "Dynamic",
              "ObjC",
              "Override"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Function",
            "name": "beCloseToMatcher",
            "printedName": "beCloseToMatcher(_:within:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBObjCBeCloseToPredicate",
                "printedName": "Nimble.NMBObjCBeCloseToPredicate",
                "usr": "c:@M@Nimble@objc(cs)NMBObjCBeCloseToPredicate"
              },
              {
                "kind": "TypeNominal",
                "name": "NSNumber",
                "printedName": "Foundation.NSNumber",
                "usr": "c:objc(cs)NSNumber"
              },
              {
                "kind": "TypeNominal",
                "name": "Double",
                "printedName": "Swift.Double",
                "usr": "s:Sd"
              }
            ],
            "declKind": "Func",
            "usr": "c:@CM@Nimble@objc(cs)NMBPredicate(cm)beCloseToMatcher:within:",
            "mangledName": "$s6Nimble12NMBPredicateC16beCloseToMatcher_6withinAA09NMBObjCBedE9PredicateCSo8NSNumberC_SdtFZ",
            "moduleName": "Nimble",
            "static": true,
            "declAttributes": [
              "Dynamic",
              "AccessControl",
              "ObjC"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "beLessThanOrEqualToMatcher",
            "printedName": "beLessThanOrEqualToMatcher(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBPredicate",
                "printedName": "Nimble.NMBPredicate",
                "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Nimble.NMBComparable?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NMBComparable",
                    "printedName": "Nimble.NMBComparable",
                    "usr": "c:@M@Nimble@objc(pl)NMBComparable"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "c:@CM@Nimble@objc(cs)NMBPredicate(cm)beLessThanOrEqualToMatcher:",
            "mangledName": "$s6Nimble12NMBPredicateC26beLessThanOrEqualToMatcheryAcA13NMBComparable_pSgFZ",
            "moduleName": "Nimble",
            "static": true,
            "declAttributes": [
              "Dynamic",
              "AccessControl",
              "ObjC"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "beAnInstanceOfMatcher",
            "printedName": "beAnInstanceOfMatcher(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBPredicate",
                "printedName": "Nimble.NMBPredicate",
                "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
              },
              {
                "kind": "TypeNominal",
                "name": "ExistentialMetatype",
                "printedName": "AnyObject.Type",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "ProtocolComposition",
                    "printedName": "AnyObject"
                  }
                ]
              }
            ],
            "declKind": "Func",
            "usr": "c:@CM@Nimble@objc(cs)NMBPredicate(cm)beAnInstanceOfMatcher:",
            "mangledName": "$s6Nimble12NMBPredicateC21beAnInstanceOfMatcheryACyXlXpFZ",
            "moduleName": "Nimble",
            "static": true,
            "declAttributes": [
              "Dynamic",
              "AccessControl",
              "ObjC"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "beTruthyMatcher",
            "printedName": "beTruthyMatcher()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBPredicate",
                "printedName": "Nimble.NMBPredicate",
                "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
              }
            ],
            "declKind": "Func",
            "usr": "c:@CM@Nimble@objc(cs)NMBPredicate(cm)beTruthyMatcher",
            "mangledName": "$s6Nimble12NMBPredicateC15beTruthyMatcherACyFZ",
            "moduleName": "Nimble",
            "static": true,
            "declAttributes": [
              "Dynamic",
              "AccessControl",
              "ObjC"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "beFalsyMatcher",
            "printedName": "beFalsyMatcher()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBPredicate",
                "printedName": "Nimble.NMBPredicate",
                "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
              }
            ],
            "declKind": "Func",
            "usr": "c:@CM@Nimble@objc(cs)NMBPredicate(cm)beFalsyMatcher",
            "mangledName": "$s6Nimble12NMBPredicateC14beFalsyMatcherACyFZ",
            "moduleName": "Nimble",
            "static": true,
            "declAttributes": [
              "Dynamic",
              "AccessControl",
              "ObjC"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "beTrueMatcher",
            "printedName": "beTrueMatcher()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBPredicate",
                "printedName": "Nimble.NMBPredicate",
                "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
              }
            ],
            "declKind": "Func",
            "usr": "c:@CM@Nimble@objc(cs)NMBPredicate(cm)beTrueMatcher",
            "mangledName": "$s6Nimble12NMBPredicateC13beTrueMatcherACyFZ",
            "moduleName": "Nimble",
            "static": true,
            "declAttributes": [
              "Dynamic",
              "AccessControl",
              "ObjC"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "beFalseMatcher",
            "printedName": "beFalseMatcher()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBPredicate",
                "printedName": "Nimble.NMBPredicate",
                "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
              }
            ],
            "declKind": "Func",
            "usr": "c:@CM@Nimble@objc(cs)NMBPredicate(cm)beFalseMatcher",
            "mangledName": "$s6Nimble12NMBPredicateC14beFalseMatcherACyFZ",
            "moduleName": "Nimble",
            "static": true,
            "declAttributes": [
              "Dynamic",
              "AccessControl",
              "ObjC"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "allPassMatcher",
            "printedName": "allPassMatcher(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBPredicate",
                "printedName": "Nimble.NMBPredicate",
                "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
              },
              {
                "kind": "TypeNominal",
                "name": "NMBPredicate",
                "printedName": "Nimble.NMBPredicate",
                "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
              }
            ],
            "declKind": "Func",
            "usr": "c:@CM@Nimble@objc(cs)NMBPredicate(cm)allPassMatcher:",
            "mangledName": "$s6Nimble12NMBPredicateC14allPassMatcheryA2CFZ",
            "moduleName": "Nimble",
            "static": true,
            "declAttributes": [
              "Dynamic",
              "AccessControl",
              "ObjC"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "beAKindOfMatcher",
            "printedName": "beAKindOfMatcher(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBPredicate",
                "printedName": "Nimble.NMBPredicate",
                "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
              },
              {
                "kind": "TypeNominal",
                "name": "ExistentialMetatype",
                "printedName": "AnyObject.Type",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "ProtocolComposition",
                    "printedName": "AnyObject"
                  }
                ]
              }
            ],
            "declKind": "Func",
            "usr": "c:@CM@Nimble@objc(cs)NMBPredicate(cm)beAKindOfMatcher:",
            "mangledName": "$s6Nimble12NMBPredicateC16beAKindOfMatcheryACyXlXpFZ",
            "moduleName": "Nimble",
            "static": true,
            "declAttributes": [
              "Dynamic",
              "AccessControl",
              "ObjC"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "matchMatcher",
            "printedName": "matchMatcher(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBPredicate",
                "printedName": "Nimble.NMBPredicate",
                "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
              },
              {
                "kind": "TypeNominal",
                "name": "NSString",
                "printedName": "Foundation.NSString",
                "usr": "c:objc(cs)NSString"
              }
            ],
            "declKind": "Func",
            "usr": "c:@CM@Nimble@objc(cs)NMBPredicate(cm)matchMatcher:",
            "mangledName": "$s6Nimble12NMBPredicateC12matchMatcheryACSo8NSStringCFZ",
            "moduleName": "Nimble",
            "static": true,
            "declAttributes": [
              "Dynamic",
              "AccessControl",
              "ObjC"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "containElementSatisfyingMatcher",
            "printedName": "containElementSatisfyingMatcher(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBPredicate",
                "printedName": "Nimble.NMBPredicate",
                "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
              },
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(ObjectiveC.NSObject) -> Swift.Bool",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Bool",
                    "printedName": "Swift.Bool",
                    "usr": "s:Sb"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "NSObject",
                    "printedName": "ObjectiveC.NSObject",
                    "usr": "c:objc(cs)NSObject"
                  }
                ]
              }
            ],
            "declKind": "Func",
            "usr": "c:@CM@Nimble@objc(cs)NMBPredicate(cm)containElementSatisfyingMatcher:",
            "mangledName": "$s6Nimble12NMBPredicateC31containElementSatisfyingMatcheryACSbSo8NSObjectCcFZ",
            "moduleName": "Nimble",
            "static": true,
            "declAttributes": [
              "Dynamic",
              "AccessControl",
              "ObjC"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "equalMatcher",
            "printedName": "equalMatcher(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBPredicate",
                "printedName": "Nimble.NMBPredicate",
                "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
              },
              {
                "kind": "TypeNominal",
                "name": "NSObject",
                "printedName": "ObjectiveC.NSObject",
                "usr": "c:objc(cs)NSObject"
              }
            ],
            "declKind": "Func",
            "usr": "c:@CM@Nimble@objc(cs)NMBPredicate(cm)equalMatcher:",
            "mangledName": "$s6Nimble12NMBPredicateC12equalMatcheryACSo8NSObjectCFZ",
            "moduleName": "Nimble",
            "static": true,
            "declAttributes": [
              "Dynamic",
              "AccessControl",
              "ObjC"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "beLessThanMatcher",
            "printedName": "beLessThanMatcher(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBPredicate",
                "printedName": "Nimble.NMBPredicate",
                "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Nimble.NMBComparable?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NMBComparable",
                    "printedName": "Nimble.NMBComparable",
                    "usr": "c:@M@Nimble@objc(pl)NMBComparable"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "c:@CM@Nimble@objc(cs)NMBPredicate(cm)beLessThanMatcher:",
            "mangledName": "$s6Nimble12NMBPredicateC17beLessThanMatcheryAcA13NMBComparable_pSgFZ",
            "moduleName": "Nimble",
            "static": true,
            "declAttributes": [
              "Dynamic",
              "AccessControl",
              "ObjC"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "beGreaterThanMatcher",
            "printedName": "beGreaterThanMatcher(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBPredicate",
                "printedName": "Nimble.NMBPredicate",
                "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Nimble.NMBComparable?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NMBComparable",
                    "printedName": "Nimble.NMBComparable",
                    "usr": "c:@M@Nimble@objc(pl)NMBComparable"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "c:@CM@Nimble@objc(cs)NMBPredicate(cm)beGreaterThanMatcher:",
            "mangledName": "$s6Nimble12NMBPredicateC20beGreaterThanMatcheryAcA13NMBComparable_pSgFZ",
            "moduleName": "Nimble",
            "static": true,
            "declAttributes": [
              "Dynamic",
              "AccessControl",
              "ObjC"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "raiseExceptionMatcher",
            "printedName": "raiseExceptionMatcher()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBObjCRaiseExceptionPredicate",
                "printedName": "Nimble.NMBObjCRaiseExceptionPredicate",
                "usr": "c:@M@Nimble@objc(cs)NMBObjCRaiseExceptionPredicate"
              }
            ],
            "declKind": "Func",
            "usr": "c:@CM@Nimble@objc(cs)NMBPredicate(cm)raiseExceptionMatcher",
            "mangledName": "$s6Nimble12NMBPredicateC21raiseExceptionMatcherAA012NMBObjCRaiseD9PredicateCyFZ",
            "moduleName": "Nimble",
            "static": true,
            "declAttributes": [
              "Dynamic",
              "AccessControl",
              "ObjC"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "containMatcher",
            "printedName": "containMatcher(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBPredicate",
                "printedName": "Nimble.NMBPredicate",
                "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
              },
              {
                "kind": "TypeNominal",
                "name": "Array",
                "printedName": "[ObjectiveC.NSObject]",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NSObject",
                    "printedName": "ObjectiveC.NSObject",
                    "usr": "c:objc(cs)NSObject"
                  }
                ],
                "usr": "s:Sa"
              }
            ],
            "declKind": "Func",
            "usr": "c:@CM@Nimble@objc(cs)NMBPredicate(cm)containMatcher:",
            "mangledName": "$s6Nimble12NMBPredicateC14containMatcheryACSaySo8NSObjectCGFZ",
            "moduleName": "Nimble",
            "static": true,
            "declAttributes": [
              "Dynamic",
              "AccessControl",
              "ObjC"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "beGreaterThanOrEqualToMatcher",
            "printedName": "beGreaterThanOrEqualToMatcher(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBPredicate",
                "printedName": "Nimble.NMBPredicate",
                "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Nimble.NMBComparable?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NMBComparable",
                    "printedName": "Nimble.NMBComparable",
                    "usr": "c:@M@Nimble@objc(pl)NMBComparable"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "c:@CM@Nimble@objc(cs)NMBPredicate(cm)beGreaterThanOrEqualToMatcher:",
            "mangledName": "$s6Nimble12NMBPredicateC29beGreaterThanOrEqualToMatcheryAcA13NMBComparable_pSgFZ",
            "moduleName": "Nimble",
            "static": true,
            "declAttributes": [
              "Dynamic",
              "AccessControl",
              "ObjC"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "beginWithMatcher",
            "printedName": "beginWithMatcher(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBPredicate",
                "printedName": "Nimble.NMBPredicate",
                "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
              },
              {
                "kind": "TypeNominal",
                "name": "ProtocolComposition",
                "printedName": "Any"
              }
            ],
            "declKind": "Func",
            "usr": "c:@CM@Nimble@objc(cs)NMBPredicate(cm)beginWithMatcher:",
            "mangledName": "$s6Nimble12NMBPredicateC16beginWithMatcheryACypFZ",
            "moduleName": "Nimble",
            "static": true,
            "declAttributes": [
              "Dynamic",
              "AccessControl",
              "ObjC"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "beIdenticalToMatcher",
            "printedName": "beIdenticalToMatcher(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBPredicate",
                "printedName": "Nimble.NMBPredicate",
                "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "ObjectiveC.NSObject?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NSObject",
                    "printedName": "ObjectiveC.NSObject",
                    "usr": "c:objc(cs)NSObject"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "c:@CM@Nimble@objc(cs)NMBPredicate(cm)beIdenticalToMatcher:",
            "mangledName": "$s6Nimble12NMBPredicateC20beIdenticalToMatcheryACSo8NSObjectCSgFZ",
            "moduleName": "Nimble",
            "static": true,
            "declAttributes": [
              "Dynamic",
              "AccessControl",
              "ObjC"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "beEmptyMatcher",
            "printedName": "beEmptyMatcher()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBPredicate",
                "printedName": "Nimble.NMBPredicate",
                "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
              }
            ],
            "declKind": "Func",
            "usr": "c:@CM@Nimble@objc(cs)NMBPredicate(cm)beEmptyMatcher",
            "mangledName": "$s6Nimble12NMBPredicateC14beEmptyMatcherACyFZ",
            "moduleName": "Nimble",
            "static": true,
            "declAttributes": [
              "Dynamic",
              "AccessControl",
              "ObjC"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "satisfyAllOfMatcher",
            "printedName": "satisfyAllOfMatcher(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBPredicate",
                "printedName": "Nimble.NMBPredicate",
                "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
              },
              {
                "kind": "TypeNominal",
                "name": "Array",
                "printedName": "[Nimble.NMBPredicate]",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NMBPredicate",
                    "printedName": "Nimble.NMBPredicate",
                    "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                  }
                ],
                "usr": "s:Sa"
              }
            ],
            "declKind": "Func",
            "usr": "c:@CM@Nimble@objc(cs)NMBPredicate(cm)satisfyAllOfMatcher:",
            "mangledName": "$s6Nimble12NMBPredicateC19satisfyAllOfMatcheryACSayACGFZ",
            "moduleName": "Nimble",
            "static": true,
            "declAttributes": [
              "Dynamic",
              "AccessControl",
              "ObjC"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "beNilMatcher",
            "printedName": "beNilMatcher()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBPredicate",
                "printedName": "Nimble.NMBPredicate",
                "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
              }
            ],
            "declKind": "Func",
            "usr": "c:@CM@Nimble@objc(cs)NMBPredicate(cm)beNilMatcher",
            "mangledName": "$s6Nimble12NMBPredicateC12beNilMatcherACyFZ",
            "moduleName": "Nimble",
            "static": true,
            "declAttributes": [
              "Dynamic",
              "AccessControl",
              "ObjC"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "endWithMatcher",
            "printedName": "endWithMatcher(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBPredicate",
                "printedName": "Nimble.NMBPredicate",
                "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
              },
              {
                "kind": "TypeNominal",
                "name": "ProtocolComposition",
                "printedName": "Any"
              }
            ],
            "declKind": "Func",
            "usr": "c:@CM@Nimble@objc(cs)NMBPredicate(cm)endWithMatcher:",
            "mangledName": "$s6Nimble12NMBPredicateC14endWithMatcheryACypFZ",
            "moduleName": "Nimble",
            "static": true,
            "declAttributes": [
              "Dynamic",
              "AccessControl",
              "ObjC"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "satisfyAnyOfMatcher",
            "printedName": "satisfyAnyOfMatcher(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBPredicate",
                "printedName": "Nimble.NMBPredicate",
                "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
              },
              {
                "kind": "TypeNominal",
                "name": "Array",
                "printedName": "[Nimble.NMBPredicate]",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NMBPredicate",
                    "printedName": "Nimble.NMBPredicate",
                    "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
                  }
                ],
                "usr": "s:Sa"
              }
            ],
            "declKind": "Func",
            "usr": "c:@CM@Nimble@objc(cs)NMBPredicate(cm)satisfyAnyOfMatcher:",
            "mangledName": "$s6Nimble12NMBPredicateC19satisfyAnyOfMatcheryACSayACGFZ",
            "moduleName": "Nimble",
            "static": true,
            "declAttributes": [
              "Dynamic",
              "AccessControl",
              "ObjC"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "haveCountMatcher",
            "printedName": "haveCountMatcher(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBPredicate",
                "printedName": "Nimble.NMBPredicate",
                "usr": "c:@M@Nimble@objc(cs)NMBPredicate"
              },
              {
                "kind": "TypeNominal",
                "name": "NSNumber",
                "printedName": "Foundation.NSNumber",
                "usr": "c:objc(cs)NSNumber"
              }
            ],
            "declKind": "Func",
            "usr": "c:@CM@Nimble@objc(cs)NMBPredicate(cm)haveCountMatcher:",
            "mangledName": "$s6Nimble12NMBPredicateC16haveCountMatcheryACSo8NSNumberCFZ",
            "moduleName": "Nimble",
            "static": true,
            "declAttributes": [
              "Dynamic",
              "AccessControl",
              "ObjC"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Class",
        "usr": "c:@M@Nimble@objc(cs)NMBPredicate",
        "mangledName": "$s6Nimble12NMBPredicateC",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "ObjC"
        ],
        "superclassUsr": "c:objc(cs)NSObject",
        "superclassNames": [
          "ObjectiveC.NSObject"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObservingPublishing",
            "printedName": "_KeyValueCodingAndObservingPublishing",
            "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
            "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObserving",
            "printedName": "_KeyValueCodingAndObserving",
            "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
            "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          }
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "NMBPredicateResult",
        "printedName": "NMBPredicateResult",
        "children": [
          {
            "kind": "Var",
            "name": "status",
            "printedName": "status",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBPredicateStatus",
                "printedName": "Nimble.NMBPredicateStatus",
                "usr": "c:@M@Nimble@objc(cs)NMBPredicateStatus"
              }
            ],
            "declKind": "Var",
            "usr": "s:6Nimble18NMBPredicateResultC6statusAA0B6StatusCvp",
            "mangledName": "$s6Nimble18NMBPredicateResultC6statusAA0B6StatusCvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "Final",
              "HasStorage",
              "AccessControl"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NMBPredicateStatus",
                    "printedName": "Nimble.NMBPredicateStatus",
                    "usr": "c:@M@Nimble@objc(cs)NMBPredicateStatus"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble18NMBPredicateResultC6statusAA0B6StatusCvg",
                "mangledName": "$s6Nimble18NMBPredicateResultC6statusAA0B6StatusCvg",
                "moduleName": "Nimble",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "NMBPredicateStatus",
                    "printedName": "Nimble.NMBPredicateStatus",
                    "usr": "c:@M@Nimble@objc(cs)NMBPredicateStatus"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble18NMBPredicateResultC6statusAA0B6StatusCvs",
                "mangledName": "$s6Nimble18NMBPredicateResultC6statusAA0B6StatusCvs",
                "moduleName": "Nimble",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble18NMBPredicateResultC6statusAA0B6StatusCvM",
                "mangledName": "$s6Nimble18NMBPredicateResultC6statusAA0B6StatusCvM",
                "moduleName": "Nimble",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "message",
            "printedName": "message",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBExpectationMessage",
                "printedName": "Nimble.NMBExpectationMessage",
                "usr": "c:@M@Nimble@objc(cs)NMBExpectationMessage"
              }
            ],
            "declKind": "Var",
            "usr": "s:6Nimble18NMBPredicateResultC7messageAA21NMBExpectationMessageCvp",
            "mangledName": "$s6Nimble18NMBPredicateResultC7messageAA21NMBExpectationMessageCvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "Final",
              "HasStorage",
              "AccessControl"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NMBExpectationMessage",
                    "printedName": "Nimble.NMBExpectationMessage",
                    "usr": "c:@M@Nimble@objc(cs)NMBExpectationMessage"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble18NMBPredicateResultC7messageAA21NMBExpectationMessageCvg",
                "mangledName": "$s6Nimble18NMBPredicateResultC7messageAA21NMBExpectationMessageCvg",
                "moduleName": "Nimble",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "NMBExpectationMessage",
                    "printedName": "Nimble.NMBExpectationMessage",
                    "usr": "c:@M@Nimble@objc(cs)NMBExpectationMessage"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble18NMBPredicateResultC7messageAA21NMBExpectationMessageCvs",
                "mangledName": "$s6Nimble18NMBPredicateResultC7messageAA21NMBExpectationMessageCvs",
                "moduleName": "Nimble",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble18NMBPredicateResultC7messageAA21NMBExpectationMessageCvM",
                "mangledName": "$s6Nimble18NMBPredicateResultC7messageAA21NMBExpectationMessageCvM",
                "moduleName": "Nimble",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(status:message:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBPredicateResult",
                "printedName": "Nimble.NMBPredicateResult",
                "usr": "c:@M@Nimble@objc(cs)NMBPredicateResult"
              },
              {
                "kind": "TypeNominal",
                "name": "NMBPredicateStatus",
                "printedName": "Nimble.NMBPredicateStatus",
                "usr": "c:@M@Nimble@objc(cs)NMBPredicateStatus"
              },
              {
                "kind": "TypeNominal",
                "name": "NMBExpectationMessage",
                "printedName": "Nimble.NMBExpectationMessage",
                "usr": "c:@M@Nimble@objc(cs)NMBExpectationMessage"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:6Nimble18NMBPredicateResultC6status7messageAcA0B6StatusC_AA21NMBExpectationMessageCtcfc",
            "mangledName": "$s6Nimble18NMBPredicateResultC6status7messageAcA0B6StatusC_AA21NMBExpectationMessageCtcfc",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(bool:message:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBPredicateResult",
                "printedName": "Nimble.NMBPredicateResult",
                "usr": "c:@M@Nimble@objc(cs)NMBPredicateResult"
              },
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              },
              {
                "kind": "TypeNominal",
                "name": "NMBExpectationMessage",
                "printedName": "Nimble.NMBExpectationMessage",
                "usr": "c:@M@Nimble@objc(cs)NMBExpectationMessage"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:6Nimble18NMBPredicateResultC4bool7messageACSb_AA21NMBExpectationMessageCtcfc",
            "mangledName": "$s6Nimble18NMBPredicateResultC4bool7messageACSb_AA21NMBExpectationMessageCtcfc",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Function",
            "name": "toSwift",
            "printedName": "toSwift()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "PredicateResult",
                "printedName": "Nimble.PredicateResult",
                "usr": "s:6Nimble15PredicateResultV"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble18NMBPredicateResultC7toSwiftAA09PredicateC0VyF",
            "mangledName": "$s6Nimble18NMBPredicateResultC7toSwiftAA09PredicateC0VyF",
            "moduleName": "Nimble",
            "declAttributes": [
              "Final",
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBPredicateResult",
                "printedName": "Nimble.NMBPredicateResult",
                "usr": "c:@M@Nimble@objc(cs)NMBPredicateResult"
              }
            ],
            "declKind": "Constructor",
            "usr": "c:@M@Nimble@objc(cs)NMBPredicateResult(im)init",
            "mangledName": "$s6Nimble18NMBPredicateResultCACycfc",
            "moduleName": "Nimble",
            "overriding": true,
            "implicit": true,
            "objc_name": "init",
            "declAttributes": [
              "Dynamic",
              "ObjC",
              "Override"
            ],
            "init_kind": "Designated"
          }
        ],
        "declKind": "Class",
        "usr": "c:@M@Nimble@objc(cs)NMBPredicateResult",
        "mangledName": "$s6Nimble18NMBPredicateResultC",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "Final",
          "ObjC"
        ],
        "superclassUsr": "c:objc(cs)NSObject",
        "superclassNames": [
          "ObjectiveC.NSObject"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObservingPublishing",
            "printedName": "_KeyValueCodingAndObservingPublishing",
            "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
            "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObserving",
            "printedName": "_KeyValueCodingAndObserving",
            "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
            "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          }
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "NMBPredicateStatus",
        "printedName": "NMBPredicateStatus",
        "children": [
          {
            "kind": "Var",
            "name": "matches",
            "printedName": "matches",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBPredicateStatus",
                "printedName": "Nimble.NMBPredicateStatus",
                "usr": "c:@M@Nimble@objc(cs)NMBPredicateStatus"
              }
            ],
            "declKind": "Var",
            "usr": "s:6Nimble18NMBPredicateStatusC7matchesACvpZ",
            "mangledName": "$s6Nimble18NMBPredicateStatusC7matchesACvpZ",
            "moduleName": "Nimble",
            "static": true,
            "declAttributes": [
              "HasInitialValue",
              "Final",
              "HasStorage",
              "AccessControl"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NMBPredicateStatus",
                    "printedName": "Nimble.NMBPredicateStatus",
                    "usr": "c:@M@Nimble@objc(cs)NMBPredicateStatus"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble18NMBPredicateStatusC7matchesACvgZ",
                "mangledName": "$s6Nimble18NMBPredicateStatusC7matchesACvgZ",
                "moduleName": "Nimble",
                "static": true,
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "doesNotMatch",
            "printedName": "doesNotMatch",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBPredicateStatus",
                "printedName": "Nimble.NMBPredicateStatus",
                "usr": "c:@M@Nimble@objc(cs)NMBPredicateStatus"
              }
            ],
            "declKind": "Var",
            "usr": "s:6Nimble18NMBPredicateStatusC12doesNotMatchACvpZ",
            "mangledName": "$s6Nimble18NMBPredicateStatusC12doesNotMatchACvpZ",
            "moduleName": "Nimble",
            "static": true,
            "declAttributes": [
              "HasInitialValue",
              "Final",
              "HasStorage",
              "AccessControl"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NMBPredicateStatus",
                    "printedName": "Nimble.NMBPredicateStatus",
                    "usr": "c:@M@Nimble@objc(cs)NMBPredicateStatus"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble18NMBPredicateStatusC12doesNotMatchACvgZ",
                "mangledName": "$s6Nimble18NMBPredicateStatusC12doesNotMatchACvgZ",
                "moduleName": "Nimble",
                "static": true,
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "fail",
            "printedName": "fail",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBPredicateStatus",
                "printedName": "Nimble.NMBPredicateStatus",
                "usr": "c:@M@Nimble@objc(cs)NMBPredicateStatus"
              }
            ],
            "declKind": "Var",
            "usr": "s:6Nimble18NMBPredicateStatusC4failACvpZ",
            "mangledName": "$s6Nimble18NMBPredicateStatusC4failACvpZ",
            "moduleName": "Nimble",
            "static": true,
            "declAttributes": [
              "HasInitialValue",
              "Final",
              "HasStorage",
              "AccessControl"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NMBPredicateStatus",
                    "printedName": "Nimble.NMBPredicateStatus",
                    "usr": "c:@M@Nimble@objc(cs)NMBPredicateStatus"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:6Nimble18NMBPredicateStatusC4failACvgZ",
                "mangledName": "$s6Nimble18NMBPredicateStatusC4failACvgZ",
                "moduleName": "Nimble",
                "static": true,
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "hash",
            "printedName": "hash",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Var",
            "usr": "c:@M@Nimble@objc(cs)NMBPredicateStatus(py)hash",
            "mangledName": "$s6Nimble18NMBPredicateStatusC4hashSivp",
            "moduleName": "Nimble",
            "overriding": true,
            "objc_name": "hash",
            "declAttributes": [
              "Final",
              "ObjC",
              "Override",
              "AccessControl"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "c:@M@Nimble@objc(cs)NMBPredicateStatus(im)hash",
                "mangledName": "$s6Nimble18NMBPredicateStatusC4hashSivg",
                "moduleName": "Nimble",
                "overriding": true,
                "objc_name": "hash",
                "declAttributes": [
                  "Final",
                  "ObjC"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Function",
            "name": "isEqual",
            "printedName": "isEqual(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Any?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "ProtocolComposition",
                    "printedName": "Any"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "c:@M@Nimble@objc(cs)NMBPredicateStatus(im)isEqual:",
            "mangledName": "$s6Nimble18NMBPredicateStatusC7isEqualySbypSgF",
            "moduleName": "Nimble",
            "overriding": true,
            "objc_name": "isEqual:",
            "declAttributes": [
              "Final",
              "ObjC",
              "Override",
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "from",
            "printedName": "from(status:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBPredicateStatus",
                "printedName": "Nimble.NMBPredicateStatus",
                "usr": "c:@M@Nimble@objc(cs)NMBPredicateStatus"
              },
              {
                "kind": "TypeNominal",
                "name": "PredicateStatus",
                "printedName": "Nimble.PredicateStatus",
                "usr": "s:6Nimble15PredicateStatusO"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble18NMBPredicateStatusC4from6statusAcA09PredicateC0O_tFZ",
            "mangledName": "$s6Nimble18NMBPredicateStatusC4from6statusAcA09PredicateC0O_tFZ",
            "moduleName": "Nimble",
            "static": true,
            "declAttributes": [
              "Final",
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "from",
            "printedName": "from(bool:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBPredicateStatus",
                "printedName": "Nimble.NMBPredicateStatus",
                "usr": "c:@M@Nimble@objc(cs)NMBPredicateStatus"
              },
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble18NMBPredicateStatusC4from4boolACSb_tFZ",
            "mangledName": "$s6Nimble18NMBPredicateStatusC4from4boolACSb_tFZ",
            "moduleName": "Nimble",
            "static": true,
            "declAttributes": [
              "Final",
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "toSwift",
            "printedName": "toSwift()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "PredicateStatus",
                "printedName": "Nimble.PredicateStatus",
                "usr": "s:6Nimble15PredicateStatusO"
              }
            ],
            "declKind": "Func",
            "usr": "s:6Nimble18NMBPredicateStatusC7toSwiftAA09PredicateC0OyF",
            "mangledName": "$s6Nimble18NMBPredicateStatusC7toSwiftAA09PredicateC0OyF",
            "moduleName": "Nimble",
            "declAttributes": [
              "Final",
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NMBPredicateStatus",
                "printedName": "Nimble.NMBPredicateStatus",
                "usr": "c:@M@Nimble@objc(cs)NMBPredicateStatus"
              }
            ],
            "declKind": "Constructor",
            "usr": "c:@M@Nimble@objc(cs)NMBPredicateStatus(im)init",
            "mangledName": "$s6Nimble18NMBPredicateStatusCACycfc",
            "moduleName": "Nimble",
            "overriding": true,
            "implicit": true,
            "objc_name": "init",
            "declAttributes": [
              "Dynamic",
              "ObjC",
              "Override"
            ],
            "init_kind": "Designated"
          }
        ],
        "declKind": "Class",
        "usr": "c:@M@Nimble@objc(cs)NMBPredicateStatus",
        "mangledName": "$s6Nimble18NMBPredicateStatusC",
        "moduleName": "Nimble",
        "declAttributes": [
          "AccessControl",
          "Final",
          "ObjC"
        ],
        "superclassUsr": "c:objc(cs)NSObject",
        "hasMissingDesignatedInitializers": true,
        "superclassNames": [
          "ObjectiveC.NSObject"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObservingPublishing",
            "printedName": "_KeyValueCodingAndObservingPublishing",
            "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
            "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObserving",
            "printedName": "_KeyValueCodingAndObserving",
            "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
            "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          }
        ]
      },
      {
        "kind": "Function",
        "name": "throwAssertion",
        "printedName": "throwAssertion()",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Predicate",
            "printedName": "Nimble.Predicate<τ_0_0>",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "usr": "s:6Nimble9PredicateV"
          }
        ],
        "declKind": "Func",
        "usr": "s:6Nimble14throwAssertionAA9PredicateVyxGylF",
        "mangledName": "$s6Nimble14throwAssertionAA9PredicateVyxGylF",
        "moduleName": "Nimble",
        "genericSig": "<τ_0_0>",
        "sugared_genericSig": "<Out>",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "TypeDecl",
        "name": "Double",
        "printedName": "Double",
        "children": [
          {
            "kind": "Var",
            "name": "testDescription",
            "printedName": "testDescription",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:Sd6NimbleE15testDescriptionSSvp",
            "mangledName": "$sSd6NimbleE15testDescriptionSSvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:Sd6NimbleE15testDescriptionSSvg",
                "mangledName": "$sSd6NimbleE15testDescriptionSSvg",
                "moduleName": "Nimble",
                "isFromExtension": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(booleanLiteral:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Double",
                "printedName": "Swift.Double",
                "usr": "s:Sd"
              },
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:Sd6NimbleE14booleanLiteralSdSb_tcfc",
            "mangledName": "$sSd6NimbleE14booleanLiteralSdSb_tcfc",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "init_kind": "Designated"
          }
        ],
        "declKind": "Struct",
        "usr": "s:Sd",
        "mangledName": "$sSd",
        "moduleName": "Swift",
        "declAttributes": [
          "Frozen"
        ],
        "isExternal": true,
        "conformances": [
          {
            "kind": "Conformance",
            "name": "TestOutputStringConvertible",
            "printedName": "TestOutputStringConvertible",
            "usr": "s:6Nimble27TestOutputStringConvertibleP",
            "mangledName": "$s6Nimble27TestOutputStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByBooleanLiteral",
            "printedName": "ExpressibleByBooleanLiteral",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "BooleanLiteralType",
                "printedName": "BooleanLiteralType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Bool",
                    "printedName": "Swift.Bool",
                    "usr": "s:Sb"
                  }
                ]
              }
            ],
            "usr": "s:s27ExpressibleByBooleanLiteralP",
            "mangledName": "$ss27ExpressibleByBooleanLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "Decodable",
            "printedName": "Decodable",
            "usr": "s:Se",
            "mangledName": "$sSe"
          },
          {
            "kind": "Conformance",
            "name": "Encodable",
            "printedName": "Encodable",
            "usr": "s:SE",
            "mangledName": "$sSE"
          },
          {
            "kind": "Conformance",
            "name": "CustomReflectable",
            "printedName": "CustomReflectable",
            "usr": "s:s17CustomReflectableP",
            "mangledName": "$ss17CustomReflectableP"
          },
          {
            "kind": "Conformance",
            "name": "_CustomPlaygroundQuickLookable",
            "printedName": "_CustomPlaygroundQuickLookable",
            "usr": "s:s30_CustomPlaygroundQuickLookableP",
            "mangledName": "$ss30_CustomPlaygroundQuickLookableP"
          },
          {
            "kind": "Conformance",
            "name": "_CVarArgPassedAsDouble",
            "printedName": "_CVarArgPassedAsDouble",
            "usr": "s:s22_CVarArgPassedAsDoubleP",
            "mangledName": "$ss22_CVarArgPassedAsDoubleP"
          },
          {
            "kind": "Conformance",
            "name": "_CVarArgAligned",
            "printedName": "_CVarArgAligned",
            "usr": "s:s15_CVarArgAlignedP",
            "mangledName": "$ss15_CVarArgAlignedP"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "LosslessStringConvertible",
            "printedName": "LosslessStringConvertible",
            "usr": "s:s25LosslessStringConvertibleP",
            "mangledName": "$ss25LosslessStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "TextOutputStreamable",
            "printedName": "TextOutputStreamable",
            "usr": "s:s20TextOutputStreamableP",
            "mangledName": "$ss20TextOutputStreamableP"
          },
          {
            "kind": "Conformance",
            "name": "BinaryFloatingPoint",
            "printedName": "BinaryFloatingPoint",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "RawSignificand",
                "printedName": "RawSignificand",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt64",
                    "printedName": "Swift.UInt64",
                    "usr": "s:s6UInt64V"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "RawExponent",
                "printedName": "RawExponent",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt",
                    "printedName": "Swift.UInt",
                    "usr": "s:Su"
                  }
                ]
              }
            ],
            "usr": "s:SB",
            "mangledName": "$sSB"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByFloatLiteral",
            "printedName": "ExpressibleByFloatLiteral",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "FloatLiteralType",
                "printedName": "FloatLiteralType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Double",
                    "printedName": "Swift.Double",
                    "usr": "s:Sd"
                  }
                ]
              }
            ],
            "usr": "s:s25ExpressibleByFloatLiteralP",
            "mangledName": "$ss25ExpressibleByFloatLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "FloatingPoint",
            "printedName": "FloatingPoint",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Exponent",
                "printedName": "Exponent",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ]
              }
            ],
            "usr": "s:SF",
            "mangledName": "$sSF"
          },
          {
            "kind": "Conformance",
            "name": "SignedNumeric",
            "printedName": "SignedNumeric",
            "usr": "s:s13SignedNumericP",
            "mangledName": "$ss13SignedNumericP"
          },
          {
            "kind": "Conformance",
            "name": "Numeric",
            "printedName": "Numeric",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Magnitude",
                "printedName": "Magnitude",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Double",
                    "printedName": "Swift.Double",
                    "usr": "s:Sd"
                  }
                ]
              }
            ],
            "usr": "s:Sj",
            "mangledName": "$sSj"
          },
          {
            "kind": "Conformance",
            "name": "AdditiveArithmetic",
            "printedName": "AdditiveArithmetic",
            "usr": "s:s18AdditiveArithmeticP",
            "mangledName": "$ss18AdditiveArithmeticP"
          },
          {
            "kind": "Conformance",
            "name": "_ExpressibleByBuiltinIntegerLiteral",
            "printedName": "_ExpressibleByBuiltinIntegerLiteral",
            "usr": "s:s35_ExpressibleByBuiltinIntegerLiteralP",
            "mangledName": "$ss35_ExpressibleByBuiltinIntegerLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByIntegerLiteral",
            "printedName": "ExpressibleByIntegerLiteral",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "IntegerLiteralType",
                "printedName": "IntegerLiteralType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int64",
                    "printedName": "Swift.Int64",
                    "usr": "s:s5Int64V"
                  }
                ]
              }
            ],
            "usr": "s:s27ExpressibleByIntegerLiteralP",
            "mangledName": "$ss27ExpressibleByIntegerLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "_ExpressibleByBuiltinFloatLiteral",
            "printedName": "_ExpressibleByBuiltinFloatLiteral",
            "usr": "s:s33_ExpressibleByBuiltinFloatLiteralP",
            "mangledName": "$ss33_ExpressibleByBuiltinFloatLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "_HasCustomAnyHashableRepresentation",
            "printedName": "_HasCustomAnyHashableRepresentation",
            "usr": "s:s35_HasCustomAnyHashableRepresentationP",
            "mangledName": "$ss35_HasCustomAnyHashableRepresentationP"
          },
          {
            "kind": "Conformance",
            "name": "Sendable",
            "printedName": "Sendable",
            "usr": "s:s8SendableP",
            "mangledName": "$ss8SendableP"
          },
          {
            "kind": "Conformance",
            "name": "Strideable",
            "printedName": "Strideable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Stride",
                "printedName": "Stride",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Double",
                    "printedName": "Swift.Double",
                    "usr": "s:Sd"
                  }
                ]
              }
            ],
            "usr": "s:Sx",
            "mangledName": "$sSx"
          },
          {
            "kind": "Conformance",
            "name": "Comparable",
            "printedName": "Comparable",
            "usr": "s:SL",
            "mangledName": "$sSL"
          },
          {
            "kind": "Conformance",
            "name": "SIMDScalar",
            "printedName": "SIMDScalar",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "SIMDMaskScalar",
                "printedName": "SIMDMaskScalar",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int64",
                    "printedName": "Swift.Int64",
                    "usr": "s:s5Int64V"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD2Storage",
                "printedName": "SIMD2Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD2Storage",
                    "printedName": "Swift.Double.SIMD2Storage",
                    "usr": "s:Sd12SIMD2StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD4Storage",
                "printedName": "SIMD4Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD4Storage",
                    "printedName": "Swift.Double.SIMD4Storage",
                    "usr": "s:Sd12SIMD4StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD8Storage",
                "printedName": "SIMD8Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD8Storage",
                    "printedName": "Swift.Double.SIMD8Storage",
                    "usr": "s:Sd12SIMD8StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD16Storage",
                "printedName": "SIMD16Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD16Storage",
                    "printedName": "Swift.Double.SIMD16Storage",
                    "usr": "s:Sd13SIMD16StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD32Storage",
                "printedName": "SIMD32Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD32Storage",
                    "printedName": "Swift.Double.SIMD32Storage",
                    "usr": "s:Sd13SIMD32StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD64Storage",
                "printedName": "SIMD64Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD64Storage",
                    "printedName": "Swift.Double.SIMD64Storage",
                    "usr": "s:Sd13SIMD64StorageV"
                  }
                ]
              }
            ],
            "usr": "s:s10SIMDScalarP",
            "mangledName": "$ss10SIMDScalarP"
          },
          {
            "kind": "Conformance",
            "name": "_FormatSpecifiable",
            "printedName": "_FormatSpecifiable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "_Arg",
                "printedName": "_Arg",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Double",
                    "printedName": "Swift.Double",
                    "usr": "s:Sd"
                  }
                ]
              }
            ],
            "usr": "s:10Foundation18_FormatSpecifiableP",
            "mangledName": "$s10Foundation18_FormatSpecifiableP"
          },
          {
            "kind": "Conformance",
            "name": "_ObjectiveCBridgeable",
            "printedName": "_ObjectiveCBridgeable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "_ObjectiveCType",
                "printedName": "_ObjectiveCType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NSNumber",
                    "printedName": "Foundation.NSNumber",
                    "usr": "c:objc(cs)NSNumber"
                  }
                ]
              }
            ],
            "usr": "s:s21_ObjectiveCBridgeableP",
            "mangledName": "$ss21_ObjectiveCBridgeableP"
          }
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "Float",
        "printedName": "Float",
        "children": [
          {
            "kind": "Var",
            "name": "testDescription",
            "printedName": "testDescription",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:Sf6NimbleE15testDescriptionSSvp",
            "mangledName": "$sSf6NimbleE15testDescriptionSSvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:Sf6NimbleE15testDescriptionSSvg",
                "mangledName": "$sSf6NimbleE15testDescriptionSSvg",
                "moduleName": "Nimble",
                "isFromExtension": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(booleanLiteral:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Float",
                "printedName": "Swift.Float",
                "usr": "s:Sf"
              },
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:Sf6NimbleE14booleanLiteralSfSb_tcfc",
            "mangledName": "$sSf6NimbleE14booleanLiteralSfSb_tcfc",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "init_kind": "Designated"
          }
        ],
        "declKind": "Struct",
        "usr": "s:Sf",
        "mangledName": "$sSf",
        "moduleName": "Swift",
        "declAttributes": [
          "Frozen"
        ],
        "isExternal": true,
        "conformances": [
          {
            "kind": "Conformance",
            "name": "TestOutputStringConvertible",
            "printedName": "TestOutputStringConvertible",
            "usr": "s:6Nimble27TestOutputStringConvertibleP",
            "mangledName": "$s6Nimble27TestOutputStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByBooleanLiteral",
            "printedName": "ExpressibleByBooleanLiteral",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "BooleanLiteralType",
                "printedName": "BooleanLiteralType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Bool",
                    "printedName": "Swift.Bool",
                    "usr": "s:Sb"
                  }
                ]
              }
            ],
            "usr": "s:s27ExpressibleByBooleanLiteralP",
            "mangledName": "$ss27ExpressibleByBooleanLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "Decodable",
            "printedName": "Decodable",
            "usr": "s:Se",
            "mangledName": "$sSe"
          },
          {
            "kind": "Conformance",
            "name": "Encodable",
            "printedName": "Encodable",
            "usr": "s:SE",
            "mangledName": "$sSE"
          },
          {
            "kind": "Conformance",
            "name": "CustomReflectable",
            "printedName": "CustomReflectable",
            "usr": "s:s17CustomReflectableP",
            "mangledName": "$ss17CustomReflectableP"
          },
          {
            "kind": "Conformance",
            "name": "_CustomPlaygroundQuickLookable",
            "printedName": "_CustomPlaygroundQuickLookable",
            "usr": "s:s30_CustomPlaygroundQuickLookableP",
            "mangledName": "$ss30_CustomPlaygroundQuickLookableP"
          },
          {
            "kind": "Conformance",
            "name": "_CVarArgPassedAsDouble",
            "printedName": "_CVarArgPassedAsDouble",
            "usr": "s:s22_CVarArgPassedAsDoubleP",
            "mangledName": "$ss22_CVarArgPassedAsDoubleP"
          },
          {
            "kind": "Conformance",
            "name": "_CVarArgAligned",
            "printedName": "_CVarArgAligned",
            "usr": "s:s15_CVarArgAlignedP",
            "mangledName": "$ss15_CVarArgAlignedP"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "LosslessStringConvertible",
            "printedName": "LosslessStringConvertible",
            "usr": "s:s25LosslessStringConvertibleP",
            "mangledName": "$ss25LosslessStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "TextOutputStreamable",
            "printedName": "TextOutputStreamable",
            "usr": "s:s20TextOutputStreamableP",
            "mangledName": "$ss20TextOutputStreamableP"
          },
          {
            "kind": "Conformance",
            "name": "BinaryFloatingPoint",
            "printedName": "BinaryFloatingPoint",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "RawSignificand",
                "printedName": "RawSignificand",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt32",
                    "printedName": "Swift.UInt32",
                    "usr": "s:s6UInt32V"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "RawExponent",
                "printedName": "RawExponent",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt",
                    "printedName": "Swift.UInt",
                    "usr": "s:Su"
                  }
                ]
              }
            ],
            "usr": "s:SB",
            "mangledName": "$sSB"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByFloatLiteral",
            "printedName": "ExpressibleByFloatLiteral",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "FloatLiteralType",
                "printedName": "FloatLiteralType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Float",
                    "printedName": "Swift.Float",
                    "usr": "s:Sf"
                  }
                ]
              }
            ],
            "usr": "s:s25ExpressibleByFloatLiteralP",
            "mangledName": "$ss25ExpressibleByFloatLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "FloatingPoint",
            "printedName": "FloatingPoint",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Exponent",
                "printedName": "Exponent",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ]
              }
            ],
            "usr": "s:SF",
            "mangledName": "$sSF"
          },
          {
            "kind": "Conformance",
            "name": "SignedNumeric",
            "printedName": "SignedNumeric",
            "usr": "s:s13SignedNumericP",
            "mangledName": "$ss13SignedNumericP"
          },
          {
            "kind": "Conformance",
            "name": "Numeric",
            "printedName": "Numeric",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Magnitude",
                "printedName": "Magnitude",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Float",
                    "printedName": "Swift.Float",
                    "usr": "s:Sf"
                  }
                ]
              }
            ],
            "usr": "s:Sj",
            "mangledName": "$sSj"
          },
          {
            "kind": "Conformance",
            "name": "AdditiveArithmetic",
            "printedName": "AdditiveArithmetic",
            "usr": "s:s18AdditiveArithmeticP",
            "mangledName": "$ss18AdditiveArithmeticP"
          },
          {
            "kind": "Conformance",
            "name": "_ExpressibleByBuiltinIntegerLiteral",
            "printedName": "_ExpressibleByBuiltinIntegerLiteral",
            "usr": "s:s35_ExpressibleByBuiltinIntegerLiteralP",
            "mangledName": "$ss35_ExpressibleByBuiltinIntegerLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByIntegerLiteral",
            "printedName": "ExpressibleByIntegerLiteral",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "IntegerLiteralType",
                "printedName": "IntegerLiteralType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int64",
                    "printedName": "Swift.Int64",
                    "usr": "s:s5Int64V"
                  }
                ]
              }
            ],
            "usr": "s:s27ExpressibleByIntegerLiteralP",
            "mangledName": "$ss27ExpressibleByIntegerLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "_ExpressibleByBuiltinFloatLiteral",
            "printedName": "_ExpressibleByBuiltinFloatLiteral",
            "usr": "s:s33_ExpressibleByBuiltinFloatLiteralP",
            "mangledName": "$ss33_ExpressibleByBuiltinFloatLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "_HasCustomAnyHashableRepresentation",
            "printedName": "_HasCustomAnyHashableRepresentation",
            "usr": "s:s35_HasCustomAnyHashableRepresentationP",
            "mangledName": "$ss35_HasCustomAnyHashableRepresentationP"
          },
          {
            "kind": "Conformance",
            "name": "Sendable",
            "printedName": "Sendable",
            "usr": "s:s8SendableP",
            "mangledName": "$ss8SendableP"
          },
          {
            "kind": "Conformance",
            "name": "Strideable",
            "printedName": "Strideable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Stride",
                "printedName": "Stride",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Float",
                    "printedName": "Swift.Float",
                    "usr": "s:Sf"
                  }
                ]
              }
            ],
            "usr": "s:Sx",
            "mangledName": "$sSx"
          },
          {
            "kind": "Conformance",
            "name": "Comparable",
            "printedName": "Comparable",
            "usr": "s:SL",
            "mangledName": "$sSL"
          },
          {
            "kind": "Conformance",
            "name": "SIMDScalar",
            "printedName": "SIMDScalar",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "SIMDMaskScalar",
                "printedName": "SIMDMaskScalar",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int32",
                    "printedName": "Swift.Int32",
                    "usr": "s:s5Int32V"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD2Storage",
                "printedName": "SIMD2Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD2Storage",
                    "printedName": "Swift.Float.SIMD2Storage",
                    "usr": "s:Sf12SIMD2StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD4Storage",
                "printedName": "SIMD4Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD4Storage",
                    "printedName": "Swift.Float.SIMD4Storage",
                    "usr": "s:Sf12SIMD4StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD8Storage",
                "printedName": "SIMD8Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD8Storage",
                    "printedName": "Swift.Float.SIMD8Storage",
                    "usr": "s:Sf12SIMD8StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD16Storage",
                "printedName": "SIMD16Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD16Storage",
                    "printedName": "Swift.Float.SIMD16Storage",
                    "usr": "s:Sf13SIMD16StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD32Storage",
                "printedName": "SIMD32Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD32Storage",
                    "printedName": "Swift.Float.SIMD32Storage",
                    "usr": "s:Sf13SIMD32StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD64Storage",
                "printedName": "SIMD64Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD64Storage",
                    "printedName": "Swift.Float.SIMD64Storage",
                    "usr": "s:Sf13SIMD64StorageV"
                  }
                ]
              }
            ],
            "usr": "s:s10SIMDScalarP",
            "mangledName": "$ss10SIMDScalarP"
          },
          {
            "kind": "Conformance",
            "name": "_FormatSpecifiable",
            "printedName": "_FormatSpecifiable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "_Arg",
                "printedName": "_Arg",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Float",
                    "printedName": "Swift.Float",
                    "usr": "s:Sf"
                  }
                ]
              }
            ],
            "usr": "s:10Foundation18_FormatSpecifiableP",
            "mangledName": "$s10Foundation18_FormatSpecifiableP"
          },
          {
            "kind": "Conformance",
            "name": "_ObjectiveCBridgeable",
            "printedName": "_ObjectiveCBridgeable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "_ObjectiveCType",
                "printedName": "_ObjectiveCType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NSNumber",
                    "printedName": "Foundation.NSNumber",
                    "usr": "c:objc(cs)NSNumber"
                  }
                ]
              }
            ],
            "usr": "s:s21_ObjectiveCBridgeableP",
            "mangledName": "$ss21_ObjectiveCBridgeableP"
          }
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "NSNumber",
        "printedName": "NSNumber",
        "children": [
          {
            "kind": "Var",
            "name": "testDescription",
            "printedName": "testDescription",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:So8NSNumberC6NimbleE15testDescriptionSSvp",
            "mangledName": "$sSo8NSNumberC6NimbleE15testDescriptionSSvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:So8NSNumberC6NimbleE15testDescriptionSSvg",
                "mangledName": "$sSo8NSNumberC6NimbleE15testDescriptionSSvg",
                "moduleName": "Nimble",
                "isFromExtension": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Function",
            "name": "NMB_compare",
            "printedName": "NMB_compare(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "ComparisonResult",
                "printedName": "Foundation.ComparisonResult",
                "usr": "c:@E@NSComparisonResult"
              },
              {
                "kind": "TypeNominal",
                "name": "ImplicitlyUnwrappedOptional",
                "printedName": "Nimble.NMBComparable?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NMBComparable",
                    "printedName": "Nimble.NMBComparable",
                    "usr": "c:@M@Nimble@objc(pl)NMBComparable"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "c:@CM@Nimble@@objc(cs)NSNumber(im)NMB_compare:",
            "mangledName": "$sSo8NSNumberC6NimbleE11NMB_compareySo18NSComparisonResultVAC13NMBComparable_pSgF",
            "moduleName": "Nimble",
            "objc_name": "NMB_compare:",
            "declAttributes": [
              "Dynamic",
              "ObjC",
              "AccessControl"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Class",
        "usr": "c:objc(cs)NSNumber",
        "moduleName": "Foundation",
        "isOpen": true,
        "objc_name": "NSNumber",
        "declAttributes": [
          "ObjC",
          "SynthesizedProtocol",
          "NonSendable",
          "Sendable",
          "Dynamic"
        ],
        "superclassUsr": "c:objc(cs)NSValue",
        "isExternal": true,
        "inheritsConvenienceInitializers": true,
        "superclassNames": [
          "Foundation.NSValue",
          "ObjectiveC.NSObject"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Sendable",
            "printedName": "Sendable",
            "usr": "s:s8SendableP",
            "mangledName": "$ss8SendableP"
          },
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObservingPublishing",
            "printedName": "_KeyValueCodingAndObservingPublishing",
            "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
            "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObserving",
            "printedName": "_KeyValueCodingAndObserving",
            "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
            "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "TestOutputStringConvertible",
            "printedName": "TestOutputStringConvertible",
            "usr": "s:6Nimble27TestOutputStringConvertibleP",
            "mangledName": "$s6Nimble27TestOutputStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "NMBDoubleConvertible",
            "printedName": "NMBDoubleConvertible",
            "usr": "s:6Nimble20NMBDoubleConvertibleP",
            "mangledName": "$s6Nimble20NMBDoubleConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "NMBComparable",
            "printedName": "NMBComparable",
            "usr": "c:@M@Nimble@objc(pl)NMBComparable",
            "mangledName": "$s6Nimble13NMBComparableP"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByFloatLiteral",
            "printedName": "ExpressibleByFloatLiteral",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "FloatLiteralType",
                "printedName": "FloatLiteralType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Double",
                    "printedName": "Swift.Double",
                    "usr": "s:Sd"
                  }
                ]
              }
            ],
            "usr": "s:s25ExpressibleByFloatLiteralP",
            "mangledName": "$ss25ExpressibleByFloatLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByIntegerLiteral",
            "printedName": "ExpressibleByIntegerLiteral",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "IntegerLiteralType",
                "printedName": "IntegerLiteralType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ]
              }
            ],
            "usr": "s:s27ExpressibleByIntegerLiteralP",
            "mangledName": "$ss27ExpressibleByIntegerLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByBooleanLiteral",
            "printedName": "ExpressibleByBooleanLiteral",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "BooleanLiteralType",
                "printedName": "BooleanLiteralType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Bool",
                    "printedName": "Swift.Bool",
                    "usr": "s:Sb"
                  }
                ]
              }
            ],
            "usr": "s:s27ExpressibleByBooleanLiteralP",
            "mangledName": "$ss27ExpressibleByBooleanLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "_HasCustomAnyHashableRepresentation",
            "printedName": "_HasCustomAnyHashableRepresentation",
            "usr": "s:s35_HasCustomAnyHashableRepresentationP",
            "mangledName": "$ss35_HasCustomAnyHashableRepresentationP"
          }
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "Array",
        "printedName": "Array",
        "children": [
          {
            "kind": "Var",
            "name": "testDescription",
            "printedName": "testDescription",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:Sa6NimbleE15testDescriptionSSvp",
            "mangledName": "$sSa6NimbleE15testDescriptionSSvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:Sa6NimbleE15testDescriptionSSvg",
                "mangledName": "$sSa6NimbleE15testDescriptionSSvg",
                "moduleName": "Nimble",
                "genericSig": "<τ_0_0>",
                "sugared_genericSig": "<Element>",
                "isFromExtension": true,
                "accessorKind": "get"
              }
            ]
          }
        ],
        "declKind": "Struct",
        "usr": "s:Sa",
        "mangledName": "$sSa",
        "moduleName": "Swift",
        "genericSig": "<τ_0_0>",
        "sugared_genericSig": "<Element>",
        "declAttributes": [
          "Frozen"
        ],
        "isExternal": true,
        "conformances": [
          {
            "kind": "Conformance",
            "name": "_DestructorSafeContainer",
            "printedName": "_DestructorSafeContainer",
            "usr": "s:s24_DestructorSafeContainerP",
            "mangledName": "$ss24_DestructorSafeContainerP"
          },
          {
            "kind": "Conformance",
            "name": "TestOutputStringConvertible",
            "printedName": "TestOutputStringConvertible",
            "usr": "s:6Nimble27TestOutputStringConvertibleP",
            "mangledName": "$s6Nimble27TestOutputStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "_ArrayProtocol",
            "printedName": "_ArrayProtocol",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "_Buffer",
                "printedName": "_Buffer",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "_ArrayBuffer",
                    "printedName": "Swift._ArrayBuffer<τ_0_0>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_0_0"
                      }
                    ],
                    "usr": "s:s12_ArrayBufferV"
                  }
                ]
              }
            ],
            "usr": "s:s14_ArrayProtocolP",
            "mangledName": "$ss14_ArrayProtocolP"
          },
          {
            "kind": "Conformance",
            "name": "RandomAccessCollection",
            "printedName": "RandomAccessCollection",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Element",
                "printedName": "Element",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "Index",
                "printedName": "Index",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SubSequence",
                "printedName": "SubSequence",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "ArraySlice",
                    "printedName": "Swift.ArraySlice<τ_0_0>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_0_0"
                      }
                    ],
                    "usr": "s:s10ArraySliceV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "Indices",
                "printedName": "Indices",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Range",
                    "printedName": "Swift.Range<Swift.Int>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Int",
                        "printedName": "Swift.Int",
                        "usr": "s:Si"
                      }
                    ],
                    "usr": "s:Sn"
                  }
                ]
              }
            ],
            "usr": "s:Sk",
            "mangledName": "$sSk"
          },
          {
            "kind": "Conformance",
            "name": "MutableCollection",
            "printedName": "MutableCollection",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Element",
                "printedName": "Element",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "Index",
                "printedName": "Index",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SubSequence",
                "printedName": "SubSequence",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "ArraySlice",
                    "printedName": "Swift.ArraySlice<τ_0_0>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_0_0"
                      }
                    ],
                    "usr": "s:s10ArraySliceV"
                  }
                ]
              }
            ],
            "usr": "s:SM",
            "mangledName": "$sSM"
          },
          {
            "kind": "Conformance",
            "name": "BidirectionalCollection",
            "printedName": "BidirectionalCollection",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Element",
                "printedName": "Element",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "Index",
                "printedName": "Index",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SubSequence",
                "printedName": "SubSequence",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "ArraySlice",
                    "printedName": "Swift.ArraySlice<τ_0_0>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_0_0"
                      }
                    ],
                    "usr": "s:s10ArraySliceV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "Indices",
                "printedName": "Indices",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Range",
                    "printedName": "Swift.Range<Swift.Int>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Int",
                        "printedName": "Swift.Int",
                        "usr": "s:Si"
                      }
                    ],
                    "usr": "s:Sn"
                  }
                ]
              }
            ],
            "usr": "s:SK",
            "mangledName": "$sSK"
          },
          {
            "kind": "Conformance",
            "name": "Collection",
            "printedName": "Collection",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Element",
                "printedName": "Element",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "Index",
                "printedName": "Index",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "Iterator",
                "printedName": "Iterator",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "IndexingIterator",
                    "printedName": "Swift.IndexingIterator<[τ_0_0]>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Array",
                        "printedName": "[τ_0_0]",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "GenericTypeParam",
                            "printedName": "τ_0_0"
                          }
                        ],
                        "usr": "s:Sa"
                      }
                    ],
                    "usr": "s:s16IndexingIteratorV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SubSequence",
                "printedName": "SubSequence",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "ArraySlice",
                    "printedName": "Swift.ArraySlice<τ_0_0>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_0_0"
                      }
                    ],
                    "usr": "s:s10ArraySliceV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "Indices",
                "printedName": "Indices",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Range",
                    "printedName": "Swift.Range<Swift.Int>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Int",
                        "printedName": "Swift.Int",
                        "usr": "s:Si"
                      }
                    ],
                    "usr": "s:Sn"
                  }
                ]
              }
            ],
            "usr": "s:Sl",
            "mangledName": "$sSl"
          },
          {
            "kind": "Conformance",
            "name": "Sequence",
            "printedName": "Sequence",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Element",
                "printedName": "Element",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "Iterator",
                "printedName": "Iterator",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "IndexingIterator",
                    "printedName": "Swift.IndexingIterator<[τ_0_0]>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Array",
                        "printedName": "[τ_0_0]",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "GenericTypeParam",
                            "printedName": "τ_0_0"
                          }
                        ],
                        "usr": "s:Sa"
                      }
                    ],
                    "usr": "s:s16IndexingIteratorV"
                  }
                ]
              }
            ],
            "usr": "s:ST",
            "mangledName": "$sST"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByArrayLiteral",
            "printedName": "ExpressibleByArrayLiteral",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "ArrayLiteralElement",
                "printedName": "ArrayLiteralElement",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ]
              }
            ],
            "usr": "s:s25ExpressibleByArrayLiteralP",
            "mangledName": "$ss25ExpressibleByArrayLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "RangeReplaceableCollection",
            "printedName": "RangeReplaceableCollection",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "SubSequence",
                "printedName": "SubSequence",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "ArraySlice",
                    "printedName": "Swift.ArraySlice<τ_0_0>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_0_0"
                      }
                    ],
                    "usr": "s:s10ArraySliceV"
                  }
                ]
              }
            ],
            "usr": "s:Sm",
            "mangledName": "$sSm"
          },
          {
            "kind": "Conformance",
            "name": "CustomReflectable",
            "printedName": "CustomReflectable",
            "usr": "s:s17CustomReflectableP",
            "mangledName": "$ss17CustomReflectableP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "_HasCustomAnyHashableRepresentation",
            "printedName": "_HasCustomAnyHashableRepresentation",
            "usr": "s:s35_HasCustomAnyHashableRepresentationP",
            "mangledName": "$ss35_HasCustomAnyHashableRepresentationP"
          },
          {
            "kind": "Conformance",
            "name": "Sendable",
            "printedName": "Sendable",
            "usr": "s:s8SendableP",
            "mangledName": "$ss8SendableP"
          },
          {
            "kind": "Conformance",
            "name": "Encodable",
            "printedName": "Encodable",
            "usr": "s:SE",
            "mangledName": "$sSE"
          },
          {
            "kind": "Conformance",
            "name": "Decodable",
            "printedName": "Decodable",
            "usr": "s:Se",
            "mangledName": "$sSe"
          },
          {
            "kind": "Conformance",
            "name": "_HasContiguousBytes",
            "printedName": "_HasContiguousBytes",
            "usr": "s:s19_HasContiguousBytesP",
            "mangledName": "$ss19_HasContiguousBytesP"
          },
          {
            "kind": "Conformance",
            "name": "DataProtocol",
            "printedName": "DataProtocol",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Regions",
                "printedName": "Regions",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "CollectionOfOne",
                    "printedName": "Swift.CollectionOfOne<[Swift.UInt8]>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Array",
                        "printedName": "[Swift.UInt8]",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "UInt8",
                            "printedName": "Swift.UInt8",
                            "usr": "s:s5UInt8V"
                          }
                        ],
                        "usr": "s:Sa"
                      }
                    ],
                    "usr": "s:s15CollectionOfOneV"
                  }
                ]
              }
            ],
            "usr": "s:10Foundation12DataProtocolP",
            "mangledName": "$s10Foundation12DataProtocolP"
          },
          {
            "kind": "Conformance",
            "name": "MutableDataProtocol",
            "printedName": "MutableDataProtocol",
            "usr": "s:10Foundation19MutableDataProtocolP",
            "mangledName": "$s10Foundation19MutableDataProtocolP"
          },
          {
            "kind": "Conformance",
            "name": "EncodableWithConfiguration",
            "printedName": "EncodableWithConfiguration",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "EncodingConfiguration",
                "printedName": "EncodingConfiguration",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DependentMember",
                    "printedName": "τ_0_0.EncodingConfiguration"
                  }
                ]
              }
            ],
            "usr": "s:10Foundation26EncodableWithConfigurationP",
            "mangledName": "$s10Foundation26EncodableWithConfigurationP"
          },
          {
            "kind": "Conformance",
            "name": "DecodableWithConfiguration",
            "printedName": "DecodableWithConfiguration",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "DecodingConfiguration",
                "printedName": "DecodingConfiguration",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DependentMember",
                    "printedName": "τ_0_0.DecodingConfiguration"
                  }
                ]
              }
            ],
            "usr": "s:10Foundation26DecodableWithConfigurationP",
            "mangledName": "$s10Foundation26DecodableWithConfigurationP"
          },
          {
            "kind": "Conformance",
            "name": "_ObjectiveCBridgeable",
            "printedName": "_ObjectiveCBridgeable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "_ObjectiveCType",
                "printedName": "_ObjectiveCType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NSArray",
                    "printedName": "Foundation.NSArray",
                    "usr": "c:objc(cs)NSArray"
                  }
                ]
              }
            ],
            "usr": "s:s21_ObjectiveCBridgeableP",
            "mangledName": "$ss21_ObjectiveCBridgeableP"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "ContiguousBytes",
            "printedName": "ContiguousBytes",
            "usr": "s:10Foundation15ContiguousBytesP",
            "mangledName": "$s10Foundation15ContiguousBytesP"
          }
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "AnySequence",
        "printedName": "AnySequence",
        "children": [
          {
            "kind": "Var",
            "name": "testDescription",
            "printedName": "testDescription",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:s11AnySequenceV6NimbleE15testDescriptionSSvp",
            "mangledName": "$ss11AnySequenceV6NimbleE15testDescriptionSSvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:s11AnySequenceV6NimbleE15testDescriptionSSvg",
                "mangledName": "$ss11AnySequenceV6NimbleE15testDescriptionSSvg",
                "moduleName": "Nimble",
                "genericSig": "<τ_0_0>",
                "sugared_genericSig": "<Element>",
                "isFromExtension": true,
                "accessorKind": "get"
              }
            ]
          }
        ],
        "declKind": "Struct",
        "usr": "s:s11AnySequenceV",
        "mangledName": "$ss11AnySequenceV",
        "moduleName": "Swift",
        "genericSig": "<τ_0_0>",
        "sugared_genericSig": "<Element>",
        "declAttributes": [
          "Frozen"
        ],
        "isExternal": true,
        "conformances": [
          {
            "kind": "Conformance",
            "name": "TestOutputStringConvertible",
            "printedName": "TestOutputStringConvertible",
            "usr": "s:6Nimble27TestOutputStringConvertibleP",
            "mangledName": "$s6Nimble27TestOutputStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "Sequence",
            "printedName": "Sequence",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Element",
                "printedName": "Element",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "Iterator",
                "printedName": "Iterator",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "AnyIterator",
                    "printedName": "Swift.AnyIterator<τ_0_0>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_0_0"
                      }
                    ],
                    "usr": "s:s11AnyIteratorV"
                  }
                ]
              }
            ],
            "usr": "s:ST",
            "mangledName": "$sST"
          }
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "NSArray",
        "printedName": "NSArray",
        "children": [
          {
            "kind": "Var",
            "name": "testDescription",
            "printedName": "testDescription",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:So7NSArrayC6NimbleE15testDescriptionSSvp",
            "mangledName": "$sSo7NSArrayC6NimbleE15testDescriptionSSvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:So7NSArrayC6NimbleE15testDescriptionSSvg",
                "mangledName": "$sSo7NSArrayC6NimbleE15testDescriptionSSvg",
                "moduleName": "Nimble",
                "isFromExtension": true,
                "accessorKind": "get"
              }
            ]
          }
        ],
        "declKind": "Class",
        "usr": "c:objc(cs)NSArray",
        "moduleName": "Foundation",
        "isOpen": true,
        "objc_name": "NSArray",
        "declAttributes": [
          "ObjC",
          "NonSendable",
          "Dynamic"
        ],
        "superclassUsr": "c:objc(cs)NSObject",
        "isExternal": true,
        "inheritsConvenienceInitializers": true,
        "superclassNames": [
          "ObjectiveC.NSObject"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObservingPublishing",
            "printedName": "_KeyValueCodingAndObservingPublishing",
            "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
            "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObserving",
            "printedName": "_KeyValueCodingAndObserving",
            "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
            "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "TestOutputStringConvertible",
            "printedName": "TestOutputStringConvertible",
            "usr": "s:6Nimble27TestOutputStringConvertibleP",
            "mangledName": "$s6Nimble27TestOutputStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "NMBContainer",
            "printedName": "NMBContainer",
            "usr": "s:6Nimble12NMBContainerP",
            "mangledName": "$s6Nimble12NMBContainerP"
          },
          {
            "kind": "Conformance",
            "name": "NMBOrderedCollection",
            "printedName": "NMBOrderedCollection",
            "usr": "s:6Nimble20NMBOrderedCollectionP",
            "mangledName": "$s6Nimble20NMBOrderedCollectionP"
          },
          {
            "kind": "Conformance",
            "name": "NMBCollection",
            "printedName": "NMBCollection",
            "usr": "s:6Nimble13NMBCollectionP",
            "mangledName": "$s6Nimble13NMBCollectionP"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByArrayLiteral",
            "printedName": "ExpressibleByArrayLiteral",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "ArrayLiteralElement",
                "printedName": "ArrayLiteralElement",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "ProtocolComposition",
                    "printedName": "Any"
                  }
                ]
              }
            ],
            "usr": "s:s25ExpressibleByArrayLiteralP",
            "mangledName": "$ss25ExpressibleByArrayLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "_HasCustomAnyHashableRepresentation",
            "printedName": "_HasCustomAnyHashableRepresentation",
            "usr": "s:s35_HasCustomAnyHashableRepresentationP",
            "mangledName": "$ss35_HasCustomAnyHashableRepresentationP"
          },
          {
            "kind": "Conformance",
            "name": "Sequence",
            "printedName": "Sequence",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Element",
                "printedName": "Element",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "ProtocolComposition",
                    "printedName": "Any"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "Iterator",
                "printedName": "Iterator",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NSFastEnumerationIterator",
                    "printedName": "Foundation.NSFastEnumerationIterator",
                    "usr": "s:10Foundation25NSFastEnumerationIteratorV"
                  }
                ]
              }
            ],
            "usr": "s:ST",
            "mangledName": "$sST"
          },
          {
            "kind": "Conformance",
            "name": "CustomReflectable",
            "printedName": "CustomReflectable",
            "usr": "s:s17CustomReflectableP",
            "mangledName": "$ss17CustomReflectableP"
          }
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "NSIndexSet",
        "printedName": "NSIndexSet",
        "children": [
          {
            "kind": "Var",
            "name": "testDescription",
            "printedName": "testDescription",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:So10NSIndexSetC6NimbleE15testDescriptionSSvp",
            "mangledName": "$sSo10NSIndexSetC6NimbleE15testDescriptionSSvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:So10NSIndexSetC6NimbleE15testDescriptionSSvg",
                "mangledName": "$sSo10NSIndexSetC6NimbleE15testDescriptionSSvg",
                "moduleName": "Nimble",
                "isFromExtension": true,
                "accessorKind": "get"
              }
            ]
          }
        ],
        "declKind": "Class",
        "usr": "c:objc(cs)NSIndexSet",
        "moduleName": "Foundation",
        "isOpen": true,
        "objc_name": "NSIndexSet",
        "declAttributes": [
          "ObjC",
          "NonSendable",
          "Dynamic"
        ],
        "superclassUsr": "c:objc(cs)NSObject",
        "isExternal": true,
        "inheritsConvenienceInitializers": true,
        "superclassNames": [
          "ObjectiveC.NSObject"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObservingPublishing",
            "printedName": "_KeyValueCodingAndObservingPublishing",
            "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
            "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObserving",
            "printedName": "_KeyValueCodingAndObserving",
            "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
            "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "TestOutputStringConvertible",
            "printedName": "TestOutputStringConvertible",
            "usr": "s:6Nimble27TestOutputStringConvertibleP",
            "mangledName": "$s6Nimble27TestOutputStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "NMBCollection",
            "printedName": "NMBCollection",
            "usr": "s:6Nimble13NMBCollectionP",
            "mangledName": "$s6Nimble13NMBCollectionP"
          },
          {
            "kind": "Conformance",
            "name": "_HasCustomAnyHashableRepresentation",
            "printedName": "_HasCustomAnyHashableRepresentation",
            "usr": "s:s35_HasCustomAnyHashableRepresentationP",
            "mangledName": "$ss35_HasCustomAnyHashableRepresentationP"
          },
          {
            "kind": "Conformance",
            "name": "Sequence",
            "printedName": "Sequence",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Element",
                "printedName": "Element",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "Iterator",
                "printedName": "Iterator",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NSIndexSetIterator",
                    "printedName": "Foundation.NSIndexSetIterator",
                    "usr": "s:10Foundation18NSIndexSetIteratorV"
                  }
                ]
              }
            ],
            "usr": "s:ST",
            "mangledName": "$sST"
          }
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "String",
        "printedName": "String",
        "children": [
          {
            "kind": "Var",
            "name": "testDescription",
            "printedName": "testDescription",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:SS6NimbleE15testDescriptionSSvp",
            "mangledName": "$sSS6NimbleE15testDescriptionSSvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:SS6NimbleE15testDescriptionSSvg",
                "mangledName": "$sSS6NimbleE15testDescriptionSSvg",
                "moduleName": "Nimble",
                "isFromExtension": true,
                "accessorKind": "get"
              }
            ]
          }
        ],
        "declKind": "Struct",
        "usr": "s:SS",
        "mangledName": "$sSS",
        "moduleName": "Swift",
        "declAttributes": [
          "Frozen"
        ],
        "isExternal": true,
        "conformances": [
          {
            "kind": "Conformance",
            "name": "TestOutputStringConvertible",
            "printedName": "TestOutputStringConvertible",
            "usr": "s:6Nimble27TestOutputStringConvertibleP",
            "mangledName": "$s6Nimble27TestOutputStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "Decodable",
            "printedName": "Decodable",
            "usr": "s:Se",
            "mangledName": "$sSe"
          },
          {
            "kind": "Conformance",
            "name": "Encodable",
            "printedName": "Encodable",
            "usr": "s:SE",
            "mangledName": "$sSE"
          },
          {
            "kind": "Conformance",
            "name": "CodingKeyRepresentable",
            "printedName": "CodingKeyRepresentable",
            "usr": "s:s22CodingKeyRepresentableP",
            "mangledName": "$ss22CodingKeyRepresentableP"
          },
          {
            "kind": "Conformance",
            "name": "_HasContiguousBytes",
            "printedName": "_HasContiguousBytes",
            "usr": "s:s19_HasContiguousBytesP",
            "mangledName": "$ss19_HasContiguousBytesP"
          },
          {
            "kind": "Conformance",
            "name": "CustomReflectable",
            "printedName": "CustomReflectable",
            "usr": "s:s17CustomReflectableP",
            "mangledName": "$ss17CustomReflectableP"
          },
          {
            "kind": "Conformance",
            "name": "_CustomPlaygroundQuickLookable",
            "printedName": "_CustomPlaygroundQuickLookable",
            "usr": "s:s30_CustomPlaygroundQuickLookableP",
            "mangledName": "$ss30_CustomPlaygroundQuickLookableP"
          },
          {
            "kind": "Conformance",
            "name": "TextOutputStream",
            "printedName": "TextOutputStream",
            "usr": "s:s16TextOutputStreamP",
            "mangledName": "$ss16TextOutputStreamP"
          },
          {
            "kind": "Conformance",
            "name": "TextOutputStreamable",
            "printedName": "TextOutputStreamable",
            "usr": "s:s20TextOutputStreamableP",
            "mangledName": "$ss20TextOutputStreamableP"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "Sendable",
            "printedName": "Sendable",
            "usr": "s:s8SendableP",
            "mangledName": "$ss8SendableP"
          },
          {
            "kind": "Conformance",
            "name": "_ExpressibleByBuiltinUnicodeScalarLiteral",
            "printedName": "_ExpressibleByBuiltinUnicodeScalarLiteral",
            "usr": "s:s41_ExpressibleByBuiltinUnicodeScalarLiteralP",
            "mangledName": "$ss41_ExpressibleByBuiltinUnicodeScalarLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "_ExpressibleByBuiltinExtendedGraphemeClusterLiteral",
            "printedName": "_ExpressibleByBuiltinExtendedGraphemeClusterLiteral",
            "usr": "s:s51_ExpressibleByBuiltinExtendedGraphemeClusterLiteralP",
            "mangledName": "$ss51_ExpressibleByBuiltinExtendedGraphemeClusterLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "_ExpressibleByBuiltinStringLiteral",
            "printedName": "_ExpressibleByBuiltinStringLiteral",
            "usr": "s:s34_ExpressibleByBuiltinStringLiteralP",
            "mangledName": "$ss34_ExpressibleByBuiltinStringLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByStringLiteral",
            "printedName": "ExpressibleByStringLiteral",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "StringLiteralType",
                "printedName": "StringLiteralType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ]
              }
            ],
            "usr": "s:s26ExpressibleByStringLiteralP",
            "mangledName": "$ss26ExpressibleByStringLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByExtendedGraphemeClusterLiteral",
            "printedName": "ExpressibleByExtendedGraphemeClusterLiteral",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "ExtendedGraphemeClusterLiteralType",
                "printedName": "ExtendedGraphemeClusterLiteralType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ]
              }
            ],
            "usr": "s:s43ExpressibleByExtendedGraphemeClusterLiteralP",
            "mangledName": "$ss43ExpressibleByExtendedGraphemeClusterLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByUnicodeScalarLiteral",
            "printedName": "ExpressibleByUnicodeScalarLiteral",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "UnicodeScalarLiteralType",
                "printedName": "UnicodeScalarLiteralType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ]
              }
            ],
            "usr": "s:s33ExpressibleByUnicodeScalarLiteralP",
            "mangledName": "$ss33ExpressibleByUnicodeScalarLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "BidirectionalCollection",
            "printedName": "BidirectionalCollection",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Element",
                "printedName": "Element",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Character",
                    "printedName": "Swift.Character",
                    "usr": "s:SJ"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "Index",
                "printedName": "Index",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Index",
                    "printedName": "Swift.String.Index",
                    "usr": "s:SS5IndexV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SubSequence",
                "printedName": "SubSequence",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Substring",
                    "printedName": "Swift.Substring",
                    "usr": "s:Ss"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "Indices",
                "printedName": "Indices",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DefaultIndices",
                    "printedName": "Swift.DefaultIndices<Swift.String>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "String",
                        "printedName": "Swift.String",
                        "usr": "s:SS"
                      }
                    ],
                    "usr": "s:SI"
                  }
                ]
              }
            ],
            "usr": "s:SK",
            "mangledName": "$sSK"
          },
          {
            "kind": "Conformance",
            "name": "Collection",
            "printedName": "Collection",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Element",
                "printedName": "Element",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Character",
                    "printedName": "Swift.Character",
                    "usr": "s:SJ"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "Index",
                "printedName": "Index",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Index",
                    "printedName": "Swift.String.Index",
                    "usr": "s:SS5IndexV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "Iterator",
                "printedName": "Iterator",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Iterator",
                    "printedName": "Swift.String.Iterator",
                    "usr": "s:SS8IteratorV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SubSequence",
                "printedName": "SubSequence",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Substring",
                    "printedName": "Swift.Substring",
                    "usr": "s:Ss"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "Indices",
                "printedName": "Indices",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DefaultIndices",
                    "printedName": "Swift.DefaultIndices<Swift.String>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "String",
                        "printedName": "Swift.String",
                        "usr": "s:SS"
                      }
                    ],
                    "usr": "s:SI"
                  }
                ]
              }
            ],
            "usr": "s:Sl",
            "mangledName": "$sSl"
          },
          {
            "kind": "Conformance",
            "name": "Sequence",
            "printedName": "Sequence",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Element",
                "printedName": "Element",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Character",
                    "printedName": "Swift.Character",
                    "usr": "s:SJ"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "Iterator",
                "printedName": "Iterator",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Iterator",
                    "printedName": "Swift.String.Iterator",
                    "usr": "s:SS8IteratorV"
                  }
                ]
              }
            ],
            "usr": "s:ST",
            "mangledName": "$sST"
          },
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Comparable",
            "printedName": "Comparable",
            "usr": "s:SL",
            "mangledName": "$sSL"
          },
          {
            "kind": "Conformance",
            "name": "StringProtocol",
            "printedName": "StringProtocol",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "UTF8View",
                "printedName": "UTF8View",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UTF8View",
                    "printedName": "Swift.String.UTF8View",
                    "usr": "s:SS8UTF8ViewV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "UTF16View",
                "printedName": "UTF16View",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UTF16View",
                    "printedName": "Swift.String.UTF16View",
                    "usr": "s:SS9UTF16ViewV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "UnicodeScalarView",
                "printedName": "UnicodeScalarView",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UnicodeScalarView",
                    "printedName": "Swift.String.UnicodeScalarView",
                    "usr": "s:SS17UnicodeScalarViewV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SubSequence",
                "printedName": "SubSequence",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Substring",
                    "printedName": "Swift.Substring",
                    "usr": "s:Ss"
                  }
                ]
              }
            ],
            "usr": "s:Sy",
            "mangledName": "$sSy"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByStringInterpolation",
            "printedName": "ExpressibleByStringInterpolation",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "StringInterpolation",
                "printedName": "StringInterpolation",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DefaultStringInterpolation",
                    "printedName": "Swift.DefaultStringInterpolation",
                    "usr": "s:s26DefaultStringInterpolationV"
                  }
                ]
              }
            ],
            "usr": "s:s32ExpressibleByStringInterpolationP",
            "mangledName": "$ss32ExpressibleByStringInterpolationP"
          },
          {
            "kind": "Conformance",
            "name": "LosslessStringConvertible",
            "printedName": "LosslessStringConvertible",
            "usr": "s:s25LosslessStringConvertibleP",
            "mangledName": "$ss25LosslessStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "RangeReplaceableCollection",
            "printedName": "RangeReplaceableCollection",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "SubSequence",
                "printedName": "SubSequence",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Substring",
                    "printedName": "Swift.Substring",
                    "usr": "s:Ss"
                  }
                ]
              }
            ],
            "usr": "s:Sm",
            "mangledName": "$sSm"
          },
          {
            "kind": "Conformance",
            "name": "MirrorPath",
            "printedName": "MirrorPath",
            "usr": "s:s10MirrorPathP",
            "mangledName": "$ss10MirrorPathP"
          },
          {
            "kind": "Conformance",
            "name": "_ObjectiveCBridgeable",
            "printedName": "_ObjectiveCBridgeable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "_ObjectiveCType",
                "printedName": "_ObjectiveCType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NSString",
                    "printedName": "Foundation.NSString",
                    "usr": "c:objc(cs)NSString"
                  }
                ]
              }
            ],
            "usr": "s:s21_ObjectiveCBridgeableP",
            "mangledName": "$ss21_ObjectiveCBridgeableP"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          }
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "Data",
        "printedName": "Data",
        "children": [
          {
            "kind": "Var",
            "name": "testDescription",
            "printedName": "testDescription",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:10Foundation4DataV6NimbleE15testDescriptionSSvp",
            "mangledName": "$s10Foundation4DataV6NimbleE15testDescriptionSSvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:10Foundation4DataV6NimbleE15testDescriptionSSvg",
                "mangledName": "$s10Foundation4DataV6NimbleE15testDescriptionSSvg",
                "moduleName": "Nimble",
                "isFromExtension": true,
                "accessorKind": "get"
              }
            ]
          }
        ],
        "declKind": "Struct",
        "usr": "s:10Foundation4DataV",
        "mangledName": "$s10Foundation4DataV",
        "moduleName": "Foundation",
        "declAttributes": [
          "Frozen"
        ],
        "isExternal": true,
        "conformances": [
          {
            "kind": "Conformance",
            "name": "ReferenceConvertible",
            "printedName": "ReferenceConvertible",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "ReferenceType",
                "printedName": "ReferenceType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NSData",
                    "printedName": "Foundation.NSData",
                    "usr": "c:objc(cs)NSData"
                  }
                ]
              }
            ],
            "usr": "s:10Foundation20ReferenceConvertibleP",
            "mangledName": "$s10Foundation20ReferenceConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "RandomAccessCollection",
            "printedName": "RandomAccessCollection",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Element",
                "printedName": "Element",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt8",
                    "printedName": "Swift.UInt8",
                    "usr": "s:s5UInt8V"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "Index",
                "printedName": "Index",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SubSequence",
                "printedName": "SubSequence",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Data",
                    "printedName": "Foundation.Data",
                    "usr": "s:10Foundation4DataV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "Indices",
                "printedName": "Indices",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Range",
                    "printedName": "Swift.Range<Swift.Int>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Int",
                        "printedName": "Swift.Int",
                        "usr": "s:Si"
                      }
                    ],
                    "usr": "s:Sn"
                  }
                ]
              }
            ],
            "usr": "s:Sk",
            "mangledName": "$sSk"
          },
          {
            "kind": "Conformance",
            "name": "MutableCollection",
            "printedName": "MutableCollection",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Element",
                "printedName": "Element",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt8",
                    "printedName": "Swift.UInt8",
                    "usr": "s:s5UInt8V"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "Index",
                "printedName": "Index",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SubSequence",
                "printedName": "SubSequence",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Data",
                    "printedName": "Foundation.Data",
                    "usr": "s:10Foundation4DataV"
                  }
                ]
              }
            ],
            "usr": "s:SM",
            "mangledName": "$sSM"
          },
          {
            "kind": "Conformance",
            "name": "RangeReplaceableCollection",
            "printedName": "RangeReplaceableCollection",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "SubSequence",
                "printedName": "SubSequence",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Data",
                    "printedName": "Foundation.Data",
                    "usr": "s:10Foundation4DataV"
                  }
                ]
              }
            ],
            "usr": "s:Sm",
            "mangledName": "$sSm"
          },
          {
            "kind": "Conformance",
            "name": "MutableDataProtocol",
            "printedName": "MutableDataProtocol",
            "usr": "s:10Foundation19MutableDataProtocolP",
            "mangledName": "$s10Foundation19MutableDataProtocolP"
          },
          {
            "kind": "Conformance",
            "name": "ContiguousBytes",
            "printedName": "ContiguousBytes",
            "usr": "s:10Foundation15ContiguousBytesP",
            "mangledName": "$s10Foundation15ContiguousBytesP"
          },
          {
            "kind": "Conformance",
            "name": "Sendable",
            "printedName": "Sendable",
            "usr": "s:s8SendableP",
            "mangledName": "$ss8SendableP"
          },
          {
            "kind": "Conformance",
            "name": "BidirectionalCollection",
            "printedName": "BidirectionalCollection",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Element",
                "printedName": "Element",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt8",
                    "printedName": "Swift.UInt8",
                    "usr": "s:s5UInt8V"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "Index",
                "printedName": "Index",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SubSequence",
                "printedName": "SubSequence",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Data",
                    "printedName": "Foundation.Data",
                    "usr": "s:10Foundation4DataV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "Indices",
                "printedName": "Indices",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Range",
                    "printedName": "Swift.Range<Swift.Int>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Int",
                        "printedName": "Swift.Int",
                        "usr": "s:Si"
                      }
                    ],
                    "usr": "s:Sn"
                  }
                ]
              }
            ],
            "usr": "s:SK",
            "mangledName": "$sSK"
          },
          {
            "kind": "Conformance",
            "name": "Collection",
            "printedName": "Collection",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Element",
                "printedName": "Element",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt8",
                    "printedName": "Swift.UInt8",
                    "usr": "s:s5UInt8V"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "Index",
                "printedName": "Index",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "Iterator",
                "printedName": "Iterator",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Iterator",
                    "printedName": "Foundation.Data.Iterator",
                    "usr": "s:10Foundation4DataV8IteratorV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SubSequence",
                "printedName": "SubSequence",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Data",
                    "printedName": "Foundation.Data",
                    "usr": "s:10Foundation4DataV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "Indices",
                "printedName": "Indices",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Range",
                    "printedName": "Swift.Range<Swift.Int>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Int",
                        "printedName": "Swift.Int",
                        "usr": "s:Si"
                      }
                    ],
                    "usr": "s:Sn"
                  }
                ]
              }
            ],
            "usr": "s:Sl",
            "mangledName": "$sSl"
          },
          {
            "kind": "Conformance",
            "name": "DataProtocol",
            "printedName": "DataProtocol",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Regions",
                "printedName": "Regions",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "CollectionOfOne",
                    "printedName": "Swift.CollectionOfOne<Foundation.Data>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Data",
                        "printedName": "Foundation.Data",
                        "usr": "s:10Foundation4DataV"
                      }
                    ],
                    "usr": "s:s15CollectionOfOneV"
                  }
                ]
              }
            ],
            "usr": "s:10Foundation12DataProtocolP",
            "mangledName": "$s10Foundation12DataProtocolP"
          },
          {
            "kind": "Conformance",
            "name": "Sequence",
            "printedName": "Sequence",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Element",
                "printedName": "Element",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt8",
                    "printedName": "Swift.UInt8",
                    "usr": "s:s5UInt8V"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "Iterator",
                "printedName": "Iterator",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Iterator",
                    "printedName": "Foundation.Data.Iterator",
                    "usr": "s:10Foundation4DataV8IteratorV"
                  }
                ]
              }
            ],
            "usr": "s:ST",
            "mangledName": "$sST"
          },
          {
            "kind": "Conformance",
            "name": "TestOutputStringConvertible",
            "printedName": "TestOutputStringConvertible",
            "usr": "s:6Nimble27TestOutputStringConvertibleP",
            "mangledName": "$s6Nimble27TestOutputStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomReflectable",
            "printedName": "CustomReflectable",
            "usr": "s:s17CustomReflectableP",
            "mangledName": "$ss17CustomReflectableP"
          },
          {
            "kind": "Conformance",
            "name": "_ObjectiveCBridgeable",
            "printedName": "_ObjectiveCBridgeable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "_ObjectiveCType",
                "printedName": "_ObjectiveCType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NSData",
                    "printedName": "Foundation.NSData",
                    "usr": "c:objc(cs)NSData"
                  }
                ]
              }
            ],
            "usr": "s:s21_ObjectiveCBridgeableP",
            "mangledName": "$ss21_ObjectiveCBridgeableP"
          },
          {
            "kind": "Conformance",
            "name": "Decodable",
            "printedName": "Decodable",
            "usr": "s:Se",
            "mangledName": "$sSe"
          },
          {
            "kind": "Conformance",
            "name": "Encodable",
            "printedName": "Encodable",
            "usr": "s:SE",
            "mangledName": "$sSE"
          }
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "Int8",
        "printedName": "Int8",
        "children": [
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(booleanLiteral:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int8",
                "printedName": "Swift.Int8",
                "usr": "s:s4Int8V"
              },
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:s4Int8V6NimbleE14booleanLiteralABSb_tcfc",
            "mangledName": "$ss4Int8V6NimbleE14booleanLiteralABSb_tcfc",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "init_kind": "Designated"
          }
        ],
        "declKind": "Struct",
        "usr": "s:s4Int8V",
        "mangledName": "$ss4Int8V",
        "moduleName": "Swift",
        "declAttributes": [
          "Frozen"
        ],
        "isExternal": true,
        "conformances": [
          {
            "kind": "Conformance",
            "name": "FixedWidthInteger",
            "printedName": "FixedWidthInteger",
            "usr": "s:s17FixedWidthIntegerP",
            "mangledName": "$ss17FixedWidthIntegerP"
          },
          {
            "kind": "Conformance",
            "name": "SignedInteger",
            "printedName": "SignedInteger",
            "usr": "s:SZ",
            "mangledName": "$sSZ"
          },
          {
            "kind": "Conformance",
            "name": "_ExpressibleByBuiltinIntegerLiteral",
            "printedName": "_ExpressibleByBuiltinIntegerLiteral",
            "usr": "s:s35_ExpressibleByBuiltinIntegerLiteralP",
            "mangledName": "$ss35_ExpressibleByBuiltinIntegerLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "BinaryInteger",
            "printedName": "BinaryInteger",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Words",
                "printedName": "Words",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Words",
                    "printedName": "Swift.Int8.Words",
                    "usr": "s:s4Int8V5WordsV"
                  }
                ]
              }
            ],
            "usr": "s:Sz",
            "mangledName": "$sSz"
          },
          {
            "kind": "Conformance",
            "name": "LosslessStringConvertible",
            "printedName": "LosslessStringConvertible",
            "usr": "s:s25LosslessStringConvertibleP",
            "mangledName": "$ss25LosslessStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "SignedNumeric",
            "printedName": "SignedNumeric",
            "usr": "s:s13SignedNumericP",
            "mangledName": "$ss13SignedNumericP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "Numeric",
            "printedName": "Numeric",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Magnitude",
                "printedName": "Magnitude",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt8",
                    "printedName": "Swift.UInt8",
                    "usr": "s:s5UInt8V"
                  }
                ]
              }
            ],
            "usr": "s:Sj",
            "mangledName": "$sSj"
          },
          {
            "kind": "Conformance",
            "name": "Strideable",
            "printedName": "Strideable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Stride",
                "printedName": "Stride",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ]
              }
            ],
            "usr": "s:Sx",
            "mangledName": "$sSx"
          },
          {
            "kind": "Conformance",
            "name": "AdditiveArithmetic",
            "printedName": "AdditiveArithmetic",
            "usr": "s:s18AdditiveArithmeticP",
            "mangledName": "$ss18AdditiveArithmeticP"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByIntegerLiteral",
            "printedName": "ExpressibleByIntegerLiteral",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "IntegerLiteralType",
                "printedName": "IntegerLiteralType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int8",
                    "printedName": "Swift.Int8",
                    "usr": "s:s4Int8V"
                  }
                ]
              }
            ],
            "usr": "s:s27ExpressibleByIntegerLiteralP",
            "mangledName": "$ss27ExpressibleByIntegerLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "Comparable",
            "printedName": "Comparable",
            "usr": "s:SL",
            "mangledName": "$sSL"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByBooleanLiteral",
            "printedName": "ExpressibleByBooleanLiteral",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "BooleanLiteralType",
                "printedName": "BooleanLiteralType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Bool",
                    "printedName": "Swift.Bool",
                    "usr": "s:Sb"
                  }
                ]
              }
            ],
            "usr": "s:s27ExpressibleByBooleanLiteralP",
            "mangledName": "$ss27ExpressibleByBooleanLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "Decodable",
            "printedName": "Decodable",
            "usr": "s:Se",
            "mangledName": "$sSe"
          },
          {
            "kind": "Conformance",
            "name": "Encodable",
            "printedName": "Encodable",
            "usr": "s:SE",
            "mangledName": "$sSE"
          },
          {
            "kind": "Conformance",
            "name": "CustomReflectable",
            "printedName": "CustomReflectable",
            "usr": "s:s17CustomReflectableP",
            "mangledName": "$ss17CustomReflectableP"
          },
          {
            "kind": "Conformance",
            "name": "_CustomPlaygroundQuickLookable",
            "printedName": "_CustomPlaygroundQuickLookable",
            "usr": "s:s30_CustomPlaygroundQuickLookableP",
            "mangledName": "$ss30_CustomPlaygroundQuickLookableP"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "_HasCustomAnyHashableRepresentation",
            "printedName": "_HasCustomAnyHashableRepresentation",
            "usr": "s:s35_HasCustomAnyHashableRepresentationP",
            "mangledName": "$ss35_HasCustomAnyHashableRepresentationP"
          },
          {
            "kind": "Conformance",
            "name": "Sendable",
            "printedName": "Sendable",
            "usr": "s:s8SendableP",
            "mangledName": "$ss8SendableP"
          },
          {
            "kind": "Conformance",
            "name": "SIMDScalar",
            "printedName": "SIMDScalar",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "SIMDMaskScalar",
                "printedName": "SIMDMaskScalar",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int8",
                    "printedName": "Swift.Int8",
                    "usr": "s:s4Int8V"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD2Storage",
                "printedName": "SIMD2Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD2Storage",
                    "printedName": "Swift.Int8.SIMD2Storage",
                    "usr": "s:s4Int8V12SIMD2StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD4Storage",
                "printedName": "SIMD4Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD4Storage",
                    "printedName": "Swift.Int8.SIMD4Storage",
                    "usr": "s:s4Int8V12SIMD4StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD8Storage",
                "printedName": "SIMD8Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD8Storage",
                    "printedName": "Swift.Int8.SIMD8Storage",
                    "usr": "s:s4Int8V12SIMD8StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD16Storage",
                "printedName": "SIMD16Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD16Storage",
                    "printedName": "Swift.Int8.SIMD16Storage",
                    "usr": "s:s4Int8V13SIMD16StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD32Storage",
                "printedName": "SIMD32Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD32Storage",
                    "printedName": "Swift.Int8.SIMD32Storage",
                    "usr": "s:s4Int8V13SIMD32StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD64Storage",
                "printedName": "SIMD64Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD64Storage",
                    "printedName": "Swift.Int8.SIMD64Storage",
                    "usr": "s:s4Int8V13SIMD64StorageV"
                  }
                ]
              }
            ],
            "usr": "s:s10SIMDScalarP",
            "mangledName": "$ss10SIMDScalarP"
          },
          {
            "kind": "Conformance",
            "name": "_FormatSpecifiable",
            "printedName": "_FormatSpecifiable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "_Arg",
                "printedName": "_Arg",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int32",
                    "printedName": "Swift.Int32",
                    "usr": "s:s5Int32V"
                  }
                ]
              }
            ],
            "usr": "s:10Foundation18_FormatSpecifiableP",
            "mangledName": "$s10Foundation18_FormatSpecifiableP"
          },
          {
            "kind": "Conformance",
            "name": "_ObjectiveCBridgeable",
            "printedName": "_ObjectiveCBridgeable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "_ObjectiveCType",
                "printedName": "_ObjectiveCType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NSNumber",
                    "printedName": "Foundation.NSNumber",
                    "usr": "c:objc(cs)NSNumber"
                  }
                ]
              }
            ],
            "usr": "s:s21_ObjectiveCBridgeableP",
            "mangledName": "$ss21_ObjectiveCBridgeableP"
          }
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "UInt8",
        "printedName": "UInt8",
        "children": [
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(booleanLiteral:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "UInt8",
                "printedName": "Swift.UInt8",
                "usr": "s:s5UInt8V"
              },
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:s5UInt8V6NimbleE14booleanLiteralABSb_tcfc",
            "mangledName": "$ss5UInt8V6NimbleE14booleanLiteralABSb_tcfc",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "init_kind": "Designated"
          }
        ],
        "declKind": "Struct",
        "usr": "s:s5UInt8V",
        "mangledName": "$ss5UInt8V",
        "moduleName": "Swift",
        "declAttributes": [
          "Frozen"
        ],
        "isExternal": true,
        "conformances": [
          {
            "kind": "Conformance",
            "name": "FixedWidthInteger",
            "printedName": "FixedWidthInteger",
            "usr": "s:s17FixedWidthIntegerP",
            "mangledName": "$ss17FixedWidthIntegerP"
          },
          {
            "kind": "Conformance",
            "name": "UnsignedInteger",
            "printedName": "UnsignedInteger",
            "usr": "s:SU",
            "mangledName": "$sSU"
          },
          {
            "kind": "Conformance",
            "name": "_ExpressibleByBuiltinIntegerLiteral",
            "printedName": "_ExpressibleByBuiltinIntegerLiteral",
            "usr": "s:s35_ExpressibleByBuiltinIntegerLiteralP",
            "mangledName": "$ss35_ExpressibleByBuiltinIntegerLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "BinaryInteger",
            "printedName": "BinaryInteger",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Words",
                "printedName": "Words",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Words",
                    "printedName": "Swift.UInt8.Words",
                    "usr": "s:s5UInt8V5WordsV"
                  }
                ]
              }
            ],
            "usr": "s:Sz",
            "mangledName": "$sSz"
          },
          {
            "kind": "Conformance",
            "name": "LosslessStringConvertible",
            "printedName": "LosslessStringConvertible",
            "usr": "s:s25LosslessStringConvertibleP",
            "mangledName": "$ss25LosslessStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "Numeric",
            "printedName": "Numeric",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Magnitude",
                "printedName": "Magnitude",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt8",
                    "printedName": "Swift.UInt8",
                    "usr": "s:s5UInt8V"
                  }
                ]
              }
            ],
            "usr": "s:Sj",
            "mangledName": "$sSj"
          },
          {
            "kind": "Conformance",
            "name": "Strideable",
            "printedName": "Strideable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Stride",
                "printedName": "Stride",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ]
              }
            ],
            "usr": "s:Sx",
            "mangledName": "$sSx"
          },
          {
            "kind": "Conformance",
            "name": "AdditiveArithmetic",
            "printedName": "AdditiveArithmetic",
            "usr": "s:s18AdditiveArithmeticP",
            "mangledName": "$ss18AdditiveArithmeticP"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByIntegerLiteral",
            "printedName": "ExpressibleByIntegerLiteral",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "IntegerLiteralType",
                "printedName": "IntegerLiteralType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt8",
                    "printedName": "Swift.UInt8",
                    "usr": "s:s5UInt8V"
                  }
                ]
              }
            ],
            "usr": "s:s27ExpressibleByIntegerLiteralP",
            "mangledName": "$ss27ExpressibleByIntegerLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "Comparable",
            "printedName": "Comparable",
            "usr": "s:SL",
            "mangledName": "$sSL"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByBooleanLiteral",
            "printedName": "ExpressibleByBooleanLiteral",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "BooleanLiteralType",
                "printedName": "BooleanLiteralType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Bool",
                    "printedName": "Swift.Bool",
                    "usr": "s:Sb"
                  }
                ]
              }
            ],
            "usr": "s:s27ExpressibleByBooleanLiteralP",
            "mangledName": "$ss27ExpressibleByBooleanLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "Decodable",
            "printedName": "Decodable",
            "usr": "s:Se",
            "mangledName": "$sSe"
          },
          {
            "kind": "Conformance",
            "name": "Encodable",
            "printedName": "Encodable",
            "usr": "s:SE",
            "mangledName": "$sSE"
          },
          {
            "kind": "Conformance",
            "name": "CustomReflectable",
            "printedName": "CustomReflectable",
            "usr": "s:s17CustomReflectableP",
            "mangledName": "$ss17CustomReflectableP"
          },
          {
            "kind": "Conformance",
            "name": "_CustomPlaygroundQuickLookable",
            "printedName": "_CustomPlaygroundQuickLookable",
            "usr": "s:s30_CustomPlaygroundQuickLookableP",
            "mangledName": "$ss30_CustomPlaygroundQuickLookableP"
          },
          {
            "kind": "Conformance",
            "name": "_StringElement",
            "printedName": "_StringElement",
            "usr": "s:s14_StringElementP",
            "mangledName": "$ss14_StringElementP"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "_HasCustomAnyHashableRepresentation",
            "printedName": "_HasCustomAnyHashableRepresentation",
            "usr": "s:s35_HasCustomAnyHashableRepresentationP",
            "mangledName": "$ss35_HasCustomAnyHashableRepresentationP"
          },
          {
            "kind": "Conformance",
            "name": "Sendable",
            "printedName": "Sendable",
            "usr": "s:s8SendableP",
            "mangledName": "$ss8SendableP"
          },
          {
            "kind": "Conformance",
            "name": "SIMDScalar",
            "printedName": "SIMDScalar",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "SIMDMaskScalar",
                "printedName": "SIMDMaskScalar",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int8",
                    "printedName": "Swift.Int8",
                    "usr": "s:s4Int8V"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD2Storage",
                "printedName": "SIMD2Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD2Storage",
                    "printedName": "Swift.UInt8.SIMD2Storage",
                    "usr": "s:s5UInt8V12SIMD2StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD4Storage",
                "printedName": "SIMD4Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD4Storage",
                    "printedName": "Swift.UInt8.SIMD4Storage",
                    "usr": "s:s5UInt8V12SIMD4StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD8Storage",
                "printedName": "SIMD8Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD8Storage",
                    "printedName": "Swift.UInt8.SIMD8Storage",
                    "usr": "s:s5UInt8V12SIMD8StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD16Storage",
                "printedName": "SIMD16Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD16Storage",
                    "printedName": "Swift.UInt8.SIMD16Storage",
                    "usr": "s:s5UInt8V13SIMD16StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD32Storage",
                "printedName": "SIMD32Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD32Storage",
                    "printedName": "Swift.UInt8.SIMD32Storage",
                    "usr": "s:s5UInt8V13SIMD32StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD64Storage",
                "printedName": "SIMD64Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD64Storage",
                    "printedName": "Swift.UInt8.SIMD64Storage",
                    "usr": "s:s5UInt8V13SIMD64StorageV"
                  }
                ]
              }
            ],
            "usr": "s:s10SIMDScalarP",
            "mangledName": "$ss10SIMDScalarP"
          },
          {
            "kind": "Conformance",
            "name": "_FormatSpecifiable",
            "printedName": "_FormatSpecifiable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "_Arg",
                "printedName": "_Arg",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt32",
                    "printedName": "Swift.UInt32",
                    "usr": "s:s6UInt32V"
                  }
                ]
              }
            ],
            "usr": "s:10Foundation18_FormatSpecifiableP",
            "mangledName": "$s10Foundation18_FormatSpecifiableP"
          },
          {
            "kind": "Conformance",
            "name": "_ObjectiveCBridgeable",
            "printedName": "_ObjectiveCBridgeable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "_ObjectiveCType",
                "printedName": "_ObjectiveCType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NSNumber",
                    "printedName": "Foundation.NSNumber",
                    "usr": "c:objc(cs)NSNumber"
                  }
                ]
              }
            ],
            "usr": "s:s21_ObjectiveCBridgeableP",
            "mangledName": "$ss21_ObjectiveCBridgeableP"
          }
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "Int16",
        "printedName": "Int16",
        "children": [
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(booleanLiteral:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int16",
                "printedName": "Swift.Int16",
                "usr": "s:s5Int16V"
              },
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:s5Int16V6NimbleE14booleanLiteralABSb_tcfc",
            "mangledName": "$ss5Int16V6NimbleE14booleanLiteralABSb_tcfc",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "init_kind": "Designated"
          }
        ],
        "declKind": "Struct",
        "usr": "s:s5Int16V",
        "mangledName": "$ss5Int16V",
        "moduleName": "Swift",
        "declAttributes": [
          "Frozen"
        ],
        "isExternal": true,
        "conformances": [
          {
            "kind": "Conformance",
            "name": "FixedWidthInteger",
            "printedName": "FixedWidthInteger",
            "usr": "s:s17FixedWidthIntegerP",
            "mangledName": "$ss17FixedWidthIntegerP"
          },
          {
            "kind": "Conformance",
            "name": "SignedInteger",
            "printedName": "SignedInteger",
            "usr": "s:SZ",
            "mangledName": "$sSZ"
          },
          {
            "kind": "Conformance",
            "name": "_ExpressibleByBuiltinIntegerLiteral",
            "printedName": "_ExpressibleByBuiltinIntegerLiteral",
            "usr": "s:s35_ExpressibleByBuiltinIntegerLiteralP",
            "mangledName": "$ss35_ExpressibleByBuiltinIntegerLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "BinaryInteger",
            "printedName": "BinaryInteger",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Words",
                "printedName": "Words",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Words",
                    "printedName": "Swift.Int16.Words",
                    "usr": "s:s5Int16V5WordsV"
                  }
                ]
              }
            ],
            "usr": "s:Sz",
            "mangledName": "$sSz"
          },
          {
            "kind": "Conformance",
            "name": "LosslessStringConvertible",
            "printedName": "LosslessStringConvertible",
            "usr": "s:s25LosslessStringConvertibleP",
            "mangledName": "$ss25LosslessStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "SignedNumeric",
            "printedName": "SignedNumeric",
            "usr": "s:s13SignedNumericP",
            "mangledName": "$ss13SignedNumericP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "Numeric",
            "printedName": "Numeric",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Magnitude",
                "printedName": "Magnitude",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt16",
                    "printedName": "Swift.UInt16",
                    "usr": "s:s6UInt16V"
                  }
                ]
              }
            ],
            "usr": "s:Sj",
            "mangledName": "$sSj"
          },
          {
            "kind": "Conformance",
            "name": "Strideable",
            "printedName": "Strideable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Stride",
                "printedName": "Stride",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ]
              }
            ],
            "usr": "s:Sx",
            "mangledName": "$sSx"
          },
          {
            "kind": "Conformance",
            "name": "AdditiveArithmetic",
            "printedName": "AdditiveArithmetic",
            "usr": "s:s18AdditiveArithmeticP",
            "mangledName": "$ss18AdditiveArithmeticP"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByIntegerLiteral",
            "printedName": "ExpressibleByIntegerLiteral",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "IntegerLiteralType",
                "printedName": "IntegerLiteralType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int16",
                    "printedName": "Swift.Int16",
                    "usr": "s:s5Int16V"
                  }
                ]
              }
            ],
            "usr": "s:s27ExpressibleByIntegerLiteralP",
            "mangledName": "$ss27ExpressibleByIntegerLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "Comparable",
            "printedName": "Comparable",
            "usr": "s:SL",
            "mangledName": "$sSL"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByBooleanLiteral",
            "printedName": "ExpressibleByBooleanLiteral",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "BooleanLiteralType",
                "printedName": "BooleanLiteralType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Bool",
                    "printedName": "Swift.Bool",
                    "usr": "s:Sb"
                  }
                ]
              }
            ],
            "usr": "s:s27ExpressibleByBooleanLiteralP",
            "mangledName": "$ss27ExpressibleByBooleanLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "Decodable",
            "printedName": "Decodable",
            "usr": "s:Se",
            "mangledName": "$sSe"
          },
          {
            "kind": "Conformance",
            "name": "Encodable",
            "printedName": "Encodable",
            "usr": "s:SE",
            "mangledName": "$sSE"
          },
          {
            "kind": "Conformance",
            "name": "CustomReflectable",
            "printedName": "CustomReflectable",
            "usr": "s:s17CustomReflectableP",
            "mangledName": "$ss17CustomReflectableP"
          },
          {
            "kind": "Conformance",
            "name": "_CustomPlaygroundQuickLookable",
            "printedName": "_CustomPlaygroundQuickLookable",
            "usr": "s:s30_CustomPlaygroundQuickLookableP",
            "mangledName": "$ss30_CustomPlaygroundQuickLookableP"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "_HasCustomAnyHashableRepresentation",
            "printedName": "_HasCustomAnyHashableRepresentation",
            "usr": "s:s35_HasCustomAnyHashableRepresentationP",
            "mangledName": "$ss35_HasCustomAnyHashableRepresentationP"
          },
          {
            "kind": "Conformance",
            "name": "Sendable",
            "printedName": "Sendable",
            "usr": "s:s8SendableP",
            "mangledName": "$ss8SendableP"
          },
          {
            "kind": "Conformance",
            "name": "SIMDScalar",
            "printedName": "SIMDScalar",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "SIMDMaskScalar",
                "printedName": "SIMDMaskScalar",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int16",
                    "printedName": "Swift.Int16",
                    "usr": "s:s5Int16V"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD2Storage",
                "printedName": "SIMD2Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD2Storage",
                    "printedName": "Swift.Int16.SIMD2Storage",
                    "usr": "s:s5Int16V12SIMD2StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD4Storage",
                "printedName": "SIMD4Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD4Storage",
                    "printedName": "Swift.Int16.SIMD4Storage",
                    "usr": "s:s5Int16V12SIMD4StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD8Storage",
                "printedName": "SIMD8Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD8Storage",
                    "printedName": "Swift.Int16.SIMD8Storage",
                    "usr": "s:s5Int16V12SIMD8StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD16Storage",
                "printedName": "SIMD16Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD16Storage",
                    "printedName": "Swift.Int16.SIMD16Storage",
                    "usr": "s:s5Int16V13SIMD16StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD32Storage",
                "printedName": "SIMD32Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD32Storage",
                    "printedName": "Swift.Int16.SIMD32Storage",
                    "usr": "s:s5Int16V13SIMD32StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD64Storage",
                "printedName": "SIMD64Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD64Storage",
                    "printedName": "Swift.Int16.SIMD64Storage",
                    "usr": "s:s5Int16V13SIMD64StorageV"
                  }
                ]
              }
            ],
            "usr": "s:s10SIMDScalarP",
            "mangledName": "$ss10SIMDScalarP"
          },
          {
            "kind": "Conformance",
            "name": "_FormatSpecifiable",
            "printedName": "_FormatSpecifiable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "_Arg",
                "printedName": "_Arg",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int32",
                    "printedName": "Swift.Int32",
                    "usr": "s:s5Int32V"
                  }
                ]
              }
            ],
            "usr": "s:10Foundation18_FormatSpecifiableP",
            "mangledName": "$s10Foundation18_FormatSpecifiableP"
          },
          {
            "kind": "Conformance",
            "name": "_ObjectiveCBridgeable",
            "printedName": "_ObjectiveCBridgeable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "_ObjectiveCType",
                "printedName": "_ObjectiveCType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NSNumber",
                    "printedName": "Foundation.NSNumber",
                    "usr": "c:objc(cs)NSNumber"
                  }
                ]
              }
            ],
            "usr": "s:s21_ObjectiveCBridgeableP",
            "mangledName": "$ss21_ObjectiveCBridgeableP"
          }
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "UInt16",
        "printedName": "UInt16",
        "children": [
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(booleanLiteral:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "UInt16",
                "printedName": "Swift.UInt16",
                "usr": "s:s6UInt16V"
              },
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:s6UInt16V6NimbleE14booleanLiteralABSb_tcfc",
            "mangledName": "$ss6UInt16V6NimbleE14booleanLiteralABSb_tcfc",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "init_kind": "Designated"
          }
        ],
        "declKind": "Struct",
        "usr": "s:s6UInt16V",
        "mangledName": "$ss6UInt16V",
        "moduleName": "Swift",
        "declAttributes": [
          "Frozen"
        ],
        "isExternal": true,
        "conformances": [
          {
            "kind": "Conformance",
            "name": "FixedWidthInteger",
            "printedName": "FixedWidthInteger",
            "usr": "s:s17FixedWidthIntegerP",
            "mangledName": "$ss17FixedWidthIntegerP"
          },
          {
            "kind": "Conformance",
            "name": "UnsignedInteger",
            "printedName": "UnsignedInteger",
            "usr": "s:SU",
            "mangledName": "$sSU"
          },
          {
            "kind": "Conformance",
            "name": "_ExpressibleByBuiltinIntegerLiteral",
            "printedName": "_ExpressibleByBuiltinIntegerLiteral",
            "usr": "s:s35_ExpressibleByBuiltinIntegerLiteralP",
            "mangledName": "$ss35_ExpressibleByBuiltinIntegerLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "BinaryInteger",
            "printedName": "BinaryInteger",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Words",
                "printedName": "Words",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Words",
                    "printedName": "Swift.UInt16.Words",
                    "usr": "s:s6UInt16V5WordsV"
                  }
                ]
              }
            ],
            "usr": "s:Sz",
            "mangledName": "$sSz"
          },
          {
            "kind": "Conformance",
            "name": "LosslessStringConvertible",
            "printedName": "LosslessStringConvertible",
            "usr": "s:s25LosslessStringConvertibleP",
            "mangledName": "$ss25LosslessStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "Numeric",
            "printedName": "Numeric",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Magnitude",
                "printedName": "Magnitude",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt16",
                    "printedName": "Swift.UInt16",
                    "usr": "s:s6UInt16V"
                  }
                ]
              }
            ],
            "usr": "s:Sj",
            "mangledName": "$sSj"
          },
          {
            "kind": "Conformance",
            "name": "Strideable",
            "printedName": "Strideable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Stride",
                "printedName": "Stride",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ]
              }
            ],
            "usr": "s:Sx",
            "mangledName": "$sSx"
          },
          {
            "kind": "Conformance",
            "name": "AdditiveArithmetic",
            "printedName": "AdditiveArithmetic",
            "usr": "s:s18AdditiveArithmeticP",
            "mangledName": "$ss18AdditiveArithmeticP"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByIntegerLiteral",
            "printedName": "ExpressibleByIntegerLiteral",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "IntegerLiteralType",
                "printedName": "IntegerLiteralType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt16",
                    "printedName": "Swift.UInt16",
                    "usr": "s:s6UInt16V"
                  }
                ]
              }
            ],
            "usr": "s:s27ExpressibleByIntegerLiteralP",
            "mangledName": "$ss27ExpressibleByIntegerLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "Comparable",
            "printedName": "Comparable",
            "usr": "s:SL",
            "mangledName": "$sSL"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByBooleanLiteral",
            "printedName": "ExpressibleByBooleanLiteral",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "BooleanLiteralType",
                "printedName": "BooleanLiteralType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Bool",
                    "printedName": "Swift.Bool",
                    "usr": "s:Sb"
                  }
                ]
              }
            ],
            "usr": "s:s27ExpressibleByBooleanLiteralP",
            "mangledName": "$ss27ExpressibleByBooleanLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "Decodable",
            "printedName": "Decodable",
            "usr": "s:Se",
            "mangledName": "$sSe"
          },
          {
            "kind": "Conformance",
            "name": "Encodable",
            "printedName": "Encodable",
            "usr": "s:SE",
            "mangledName": "$sSE"
          },
          {
            "kind": "Conformance",
            "name": "CustomReflectable",
            "printedName": "CustomReflectable",
            "usr": "s:s17CustomReflectableP",
            "mangledName": "$ss17CustomReflectableP"
          },
          {
            "kind": "Conformance",
            "name": "_CustomPlaygroundQuickLookable",
            "printedName": "_CustomPlaygroundQuickLookable",
            "usr": "s:s30_CustomPlaygroundQuickLookableP",
            "mangledName": "$ss30_CustomPlaygroundQuickLookableP"
          },
          {
            "kind": "Conformance",
            "name": "_StringElement",
            "printedName": "_StringElement",
            "usr": "s:s14_StringElementP",
            "mangledName": "$ss14_StringElementP"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "_HasCustomAnyHashableRepresentation",
            "printedName": "_HasCustomAnyHashableRepresentation",
            "usr": "s:s35_HasCustomAnyHashableRepresentationP",
            "mangledName": "$ss35_HasCustomAnyHashableRepresentationP"
          },
          {
            "kind": "Conformance",
            "name": "Sendable",
            "printedName": "Sendable",
            "usr": "s:s8SendableP",
            "mangledName": "$ss8SendableP"
          },
          {
            "kind": "Conformance",
            "name": "SIMDScalar",
            "printedName": "SIMDScalar",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "SIMDMaskScalar",
                "printedName": "SIMDMaskScalar",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int16",
                    "printedName": "Swift.Int16",
                    "usr": "s:s5Int16V"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD2Storage",
                "printedName": "SIMD2Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD2Storage",
                    "printedName": "Swift.UInt16.SIMD2Storage",
                    "usr": "s:s6UInt16V12SIMD2StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD4Storage",
                "printedName": "SIMD4Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD4Storage",
                    "printedName": "Swift.UInt16.SIMD4Storage",
                    "usr": "s:s6UInt16V12SIMD4StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD8Storage",
                "printedName": "SIMD8Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD8Storage",
                    "printedName": "Swift.UInt16.SIMD8Storage",
                    "usr": "s:s6UInt16V12SIMD8StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD16Storage",
                "printedName": "SIMD16Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD16Storage",
                    "printedName": "Swift.UInt16.SIMD16Storage",
                    "usr": "s:s6UInt16V13SIMD16StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD32Storage",
                "printedName": "SIMD32Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD32Storage",
                    "printedName": "Swift.UInt16.SIMD32Storage",
                    "usr": "s:s6UInt16V13SIMD32StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD64Storage",
                "printedName": "SIMD64Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD64Storage",
                    "printedName": "Swift.UInt16.SIMD64Storage",
                    "usr": "s:s6UInt16V13SIMD64StorageV"
                  }
                ]
              }
            ],
            "usr": "s:s10SIMDScalarP",
            "mangledName": "$ss10SIMDScalarP"
          },
          {
            "kind": "Conformance",
            "name": "_FormatSpecifiable",
            "printedName": "_FormatSpecifiable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "_Arg",
                "printedName": "_Arg",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt32",
                    "printedName": "Swift.UInt32",
                    "usr": "s:s6UInt32V"
                  }
                ]
              }
            ],
            "usr": "s:10Foundation18_FormatSpecifiableP",
            "mangledName": "$s10Foundation18_FormatSpecifiableP"
          },
          {
            "kind": "Conformance",
            "name": "_ObjectiveCBridgeable",
            "printedName": "_ObjectiveCBridgeable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "_ObjectiveCType",
                "printedName": "_ObjectiveCType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NSNumber",
                    "printedName": "Foundation.NSNumber",
                    "usr": "c:objc(cs)NSNumber"
                  }
                ]
              }
            ],
            "usr": "s:s21_ObjectiveCBridgeableP",
            "mangledName": "$ss21_ObjectiveCBridgeableP"
          }
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "Int32",
        "printedName": "Int32",
        "children": [
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(booleanLiteral:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int32",
                "printedName": "Swift.Int32",
                "usr": "s:s5Int32V"
              },
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:s5Int32V6NimbleE14booleanLiteralABSb_tcfc",
            "mangledName": "$ss5Int32V6NimbleE14booleanLiteralABSb_tcfc",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "init_kind": "Designated"
          }
        ],
        "declKind": "Struct",
        "usr": "s:s5Int32V",
        "mangledName": "$ss5Int32V",
        "moduleName": "Swift",
        "declAttributes": [
          "Frozen"
        ],
        "isExternal": true,
        "conformances": [
          {
            "kind": "Conformance",
            "name": "FixedWidthInteger",
            "printedName": "FixedWidthInteger",
            "usr": "s:s17FixedWidthIntegerP",
            "mangledName": "$ss17FixedWidthIntegerP"
          },
          {
            "kind": "Conformance",
            "name": "SignedInteger",
            "printedName": "SignedInteger",
            "usr": "s:SZ",
            "mangledName": "$sSZ"
          },
          {
            "kind": "Conformance",
            "name": "_ExpressibleByBuiltinIntegerLiteral",
            "printedName": "_ExpressibleByBuiltinIntegerLiteral",
            "usr": "s:s35_ExpressibleByBuiltinIntegerLiteralP",
            "mangledName": "$ss35_ExpressibleByBuiltinIntegerLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "BinaryInteger",
            "printedName": "BinaryInteger",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Words",
                "printedName": "Words",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Words",
                    "printedName": "Swift.Int32.Words",
                    "usr": "s:s5Int32V5WordsV"
                  }
                ]
              }
            ],
            "usr": "s:Sz",
            "mangledName": "$sSz"
          },
          {
            "kind": "Conformance",
            "name": "LosslessStringConvertible",
            "printedName": "LosslessStringConvertible",
            "usr": "s:s25LosslessStringConvertibleP",
            "mangledName": "$ss25LosslessStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "SignedNumeric",
            "printedName": "SignedNumeric",
            "usr": "s:s13SignedNumericP",
            "mangledName": "$ss13SignedNumericP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "Numeric",
            "printedName": "Numeric",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Magnitude",
                "printedName": "Magnitude",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt32",
                    "printedName": "Swift.UInt32",
                    "usr": "s:s6UInt32V"
                  }
                ]
              }
            ],
            "usr": "s:Sj",
            "mangledName": "$sSj"
          },
          {
            "kind": "Conformance",
            "name": "Strideable",
            "printedName": "Strideable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Stride",
                "printedName": "Stride",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ]
              }
            ],
            "usr": "s:Sx",
            "mangledName": "$sSx"
          },
          {
            "kind": "Conformance",
            "name": "AdditiveArithmetic",
            "printedName": "AdditiveArithmetic",
            "usr": "s:s18AdditiveArithmeticP",
            "mangledName": "$ss18AdditiveArithmeticP"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByIntegerLiteral",
            "printedName": "ExpressibleByIntegerLiteral",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "IntegerLiteralType",
                "printedName": "IntegerLiteralType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int32",
                    "printedName": "Swift.Int32",
                    "usr": "s:s5Int32V"
                  }
                ]
              }
            ],
            "usr": "s:s27ExpressibleByIntegerLiteralP",
            "mangledName": "$ss27ExpressibleByIntegerLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "Comparable",
            "printedName": "Comparable",
            "usr": "s:SL",
            "mangledName": "$sSL"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByBooleanLiteral",
            "printedName": "ExpressibleByBooleanLiteral",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "BooleanLiteralType",
                "printedName": "BooleanLiteralType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Bool",
                    "printedName": "Swift.Bool",
                    "usr": "s:Sb"
                  }
                ]
              }
            ],
            "usr": "s:s27ExpressibleByBooleanLiteralP",
            "mangledName": "$ss27ExpressibleByBooleanLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "Decodable",
            "printedName": "Decodable",
            "usr": "s:Se",
            "mangledName": "$sSe"
          },
          {
            "kind": "Conformance",
            "name": "Encodable",
            "printedName": "Encodable",
            "usr": "s:SE",
            "mangledName": "$sSE"
          },
          {
            "kind": "Conformance",
            "name": "CustomReflectable",
            "printedName": "CustomReflectable",
            "usr": "s:s17CustomReflectableP",
            "mangledName": "$ss17CustomReflectableP"
          },
          {
            "kind": "Conformance",
            "name": "_CustomPlaygroundQuickLookable",
            "printedName": "_CustomPlaygroundQuickLookable",
            "usr": "s:s30_CustomPlaygroundQuickLookableP",
            "mangledName": "$ss30_CustomPlaygroundQuickLookableP"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "_HasCustomAnyHashableRepresentation",
            "printedName": "_HasCustomAnyHashableRepresentation",
            "usr": "s:s35_HasCustomAnyHashableRepresentationP",
            "mangledName": "$ss35_HasCustomAnyHashableRepresentationP"
          },
          {
            "kind": "Conformance",
            "name": "Sendable",
            "printedName": "Sendable",
            "usr": "s:s8SendableP",
            "mangledName": "$ss8SendableP"
          },
          {
            "kind": "Conformance",
            "name": "SIMDScalar",
            "printedName": "SIMDScalar",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "SIMDMaskScalar",
                "printedName": "SIMDMaskScalar",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int32",
                    "printedName": "Swift.Int32",
                    "usr": "s:s5Int32V"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD2Storage",
                "printedName": "SIMD2Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD2Storage",
                    "printedName": "Swift.Int32.SIMD2Storage",
                    "usr": "s:s5Int32V12SIMD2StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD4Storage",
                "printedName": "SIMD4Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD4Storage",
                    "printedName": "Swift.Int32.SIMD4Storage",
                    "usr": "s:s5Int32V12SIMD4StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD8Storage",
                "printedName": "SIMD8Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD8Storage",
                    "printedName": "Swift.Int32.SIMD8Storage",
                    "usr": "s:s5Int32V12SIMD8StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD16Storage",
                "printedName": "SIMD16Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD16Storage",
                    "printedName": "Swift.Int32.SIMD16Storage",
                    "usr": "s:s5Int32V13SIMD16StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD32Storage",
                "printedName": "SIMD32Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD32Storage",
                    "printedName": "Swift.Int32.SIMD32Storage",
                    "usr": "s:s5Int32V13SIMD32StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD64Storage",
                "printedName": "SIMD64Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD64Storage",
                    "printedName": "Swift.Int32.SIMD64Storage",
                    "usr": "s:s5Int32V13SIMD64StorageV"
                  }
                ]
              }
            ],
            "usr": "s:s10SIMDScalarP",
            "mangledName": "$ss10SIMDScalarP"
          },
          {
            "kind": "Conformance",
            "name": "_FormatSpecifiable",
            "printedName": "_FormatSpecifiable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "_Arg",
                "printedName": "_Arg",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int32",
                    "printedName": "Swift.Int32",
                    "usr": "s:s5Int32V"
                  }
                ]
              }
            ],
            "usr": "s:10Foundation18_FormatSpecifiableP",
            "mangledName": "$s10Foundation18_FormatSpecifiableP"
          },
          {
            "kind": "Conformance",
            "name": "_ObjectiveCBridgeable",
            "printedName": "_ObjectiveCBridgeable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "_ObjectiveCType",
                "printedName": "_ObjectiveCType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NSNumber",
                    "printedName": "Foundation.NSNumber",
                    "usr": "c:objc(cs)NSNumber"
                  }
                ]
              }
            ],
            "usr": "s:s21_ObjectiveCBridgeableP",
            "mangledName": "$ss21_ObjectiveCBridgeableP"
          }
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "UInt32",
        "printedName": "UInt32",
        "children": [
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(booleanLiteral:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "UInt32",
                "printedName": "Swift.UInt32",
                "usr": "s:s6UInt32V"
              },
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:s6UInt32V6NimbleE14booleanLiteralABSb_tcfc",
            "mangledName": "$ss6UInt32V6NimbleE14booleanLiteralABSb_tcfc",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "init_kind": "Designated"
          }
        ],
        "declKind": "Struct",
        "usr": "s:s6UInt32V",
        "mangledName": "$ss6UInt32V",
        "moduleName": "Swift",
        "declAttributes": [
          "Frozen"
        ],
        "isExternal": true,
        "conformances": [
          {
            "kind": "Conformance",
            "name": "FixedWidthInteger",
            "printedName": "FixedWidthInteger",
            "usr": "s:s17FixedWidthIntegerP",
            "mangledName": "$ss17FixedWidthIntegerP"
          },
          {
            "kind": "Conformance",
            "name": "UnsignedInteger",
            "printedName": "UnsignedInteger",
            "usr": "s:SU",
            "mangledName": "$sSU"
          },
          {
            "kind": "Conformance",
            "name": "_ExpressibleByBuiltinIntegerLiteral",
            "printedName": "_ExpressibleByBuiltinIntegerLiteral",
            "usr": "s:s35_ExpressibleByBuiltinIntegerLiteralP",
            "mangledName": "$ss35_ExpressibleByBuiltinIntegerLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "BinaryInteger",
            "printedName": "BinaryInteger",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Words",
                "printedName": "Words",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Words",
                    "printedName": "Swift.UInt32.Words",
                    "usr": "s:s6UInt32V5WordsV"
                  }
                ]
              }
            ],
            "usr": "s:Sz",
            "mangledName": "$sSz"
          },
          {
            "kind": "Conformance",
            "name": "LosslessStringConvertible",
            "printedName": "LosslessStringConvertible",
            "usr": "s:s25LosslessStringConvertibleP",
            "mangledName": "$ss25LosslessStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "Numeric",
            "printedName": "Numeric",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Magnitude",
                "printedName": "Magnitude",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt32",
                    "printedName": "Swift.UInt32",
                    "usr": "s:s6UInt32V"
                  }
                ]
              }
            ],
            "usr": "s:Sj",
            "mangledName": "$sSj"
          },
          {
            "kind": "Conformance",
            "name": "Strideable",
            "printedName": "Strideable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Stride",
                "printedName": "Stride",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ]
              }
            ],
            "usr": "s:Sx",
            "mangledName": "$sSx"
          },
          {
            "kind": "Conformance",
            "name": "AdditiveArithmetic",
            "printedName": "AdditiveArithmetic",
            "usr": "s:s18AdditiveArithmeticP",
            "mangledName": "$ss18AdditiveArithmeticP"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByIntegerLiteral",
            "printedName": "ExpressibleByIntegerLiteral",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "IntegerLiteralType",
                "printedName": "IntegerLiteralType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt32",
                    "printedName": "Swift.UInt32",
                    "usr": "s:s6UInt32V"
                  }
                ]
              }
            ],
            "usr": "s:s27ExpressibleByIntegerLiteralP",
            "mangledName": "$ss27ExpressibleByIntegerLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "Comparable",
            "printedName": "Comparable",
            "usr": "s:SL",
            "mangledName": "$sSL"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByBooleanLiteral",
            "printedName": "ExpressibleByBooleanLiteral",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "BooleanLiteralType",
                "printedName": "BooleanLiteralType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Bool",
                    "printedName": "Swift.Bool",
                    "usr": "s:Sb"
                  }
                ]
              }
            ],
            "usr": "s:s27ExpressibleByBooleanLiteralP",
            "mangledName": "$ss27ExpressibleByBooleanLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "Decodable",
            "printedName": "Decodable",
            "usr": "s:Se",
            "mangledName": "$sSe"
          },
          {
            "kind": "Conformance",
            "name": "Encodable",
            "printedName": "Encodable",
            "usr": "s:SE",
            "mangledName": "$sSE"
          },
          {
            "kind": "Conformance",
            "name": "CustomReflectable",
            "printedName": "CustomReflectable",
            "usr": "s:s17CustomReflectableP",
            "mangledName": "$ss17CustomReflectableP"
          },
          {
            "kind": "Conformance",
            "name": "_CustomPlaygroundQuickLookable",
            "printedName": "_CustomPlaygroundQuickLookable",
            "usr": "s:s30_CustomPlaygroundQuickLookableP",
            "mangledName": "$ss30_CustomPlaygroundQuickLookableP"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "_HasCustomAnyHashableRepresentation",
            "printedName": "_HasCustomAnyHashableRepresentation",
            "usr": "s:s35_HasCustomAnyHashableRepresentationP",
            "mangledName": "$ss35_HasCustomAnyHashableRepresentationP"
          },
          {
            "kind": "Conformance",
            "name": "Sendable",
            "printedName": "Sendable",
            "usr": "s:s8SendableP",
            "mangledName": "$ss8SendableP"
          },
          {
            "kind": "Conformance",
            "name": "SIMDScalar",
            "printedName": "SIMDScalar",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "SIMDMaskScalar",
                "printedName": "SIMDMaskScalar",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int32",
                    "printedName": "Swift.Int32",
                    "usr": "s:s5Int32V"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD2Storage",
                "printedName": "SIMD2Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD2Storage",
                    "printedName": "Swift.UInt32.SIMD2Storage",
                    "usr": "s:s6UInt32V12SIMD2StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD4Storage",
                "printedName": "SIMD4Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD4Storage",
                    "printedName": "Swift.UInt32.SIMD4Storage",
                    "usr": "s:s6UInt32V12SIMD4StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD8Storage",
                "printedName": "SIMD8Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD8Storage",
                    "printedName": "Swift.UInt32.SIMD8Storage",
                    "usr": "s:s6UInt32V12SIMD8StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD16Storage",
                "printedName": "SIMD16Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD16Storage",
                    "printedName": "Swift.UInt32.SIMD16Storage",
                    "usr": "s:s6UInt32V13SIMD16StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD32Storage",
                "printedName": "SIMD32Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD32Storage",
                    "printedName": "Swift.UInt32.SIMD32Storage",
                    "usr": "s:s6UInt32V13SIMD32StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD64Storage",
                "printedName": "SIMD64Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD64Storage",
                    "printedName": "Swift.UInt32.SIMD64Storage",
                    "usr": "s:s6UInt32V13SIMD64StorageV"
                  }
                ]
              }
            ],
            "usr": "s:s10SIMDScalarP",
            "mangledName": "$ss10SIMDScalarP"
          },
          {
            "kind": "Conformance",
            "name": "_FormatSpecifiable",
            "printedName": "_FormatSpecifiable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "_Arg",
                "printedName": "_Arg",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt32",
                    "printedName": "Swift.UInt32",
                    "usr": "s:s6UInt32V"
                  }
                ]
              }
            ],
            "usr": "s:10Foundation18_FormatSpecifiableP",
            "mangledName": "$s10Foundation18_FormatSpecifiableP"
          },
          {
            "kind": "Conformance",
            "name": "_ObjectiveCBridgeable",
            "printedName": "_ObjectiveCBridgeable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "_ObjectiveCType",
                "printedName": "_ObjectiveCType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NSNumber",
                    "printedName": "Foundation.NSNumber",
                    "usr": "c:objc(cs)NSNumber"
                  }
                ]
              }
            ],
            "usr": "s:s21_ObjectiveCBridgeableP",
            "mangledName": "$ss21_ObjectiveCBridgeableP"
          }
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "Int64",
        "printedName": "Int64",
        "children": [
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(booleanLiteral:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int64",
                "printedName": "Swift.Int64",
                "usr": "s:s5Int64V"
              },
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:s5Int64V6NimbleE14booleanLiteralABSb_tcfc",
            "mangledName": "$ss5Int64V6NimbleE14booleanLiteralABSb_tcfc",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "init_kind": "Designated"
          }
        ],
        "declKind": "Struct",
        "usr": "s:s5Int64V",
        "mangledName": "$ss5Int64V",
        "moduleName": "Swift",
        "declAttributes": [
          "Frozen"
        ],
        "isExternal": true,
        "conformances": [
          {
            "kind": "Conformance",
            "name": "_ExpressibleByBuiltinIntegerLiteral",
            "printedName": "_ExpressibleByBuiltinIntegerLiteral",
            "usr": "s:s35_ExpressibleByBuiltinIntegerLiteralP",
            "mangledName": "$ss35_ExpressibleByBuiltinIntegerLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "FixedWidthInteger",
            "printedName": "FixedWidthInteger",
            "usr": "s:s17FixedWidthIntegerP",
            "mangledName": "$ss17FixedWidthIntegerP"
          },
          {
            "kind": "Conformance",
            "name": "SignedInteger",
            "printedName": "SignedInteger",
            "usr": "s:SZ",
            "mangledName": "$sSZ"
          },
          {
            "kind": "Conformance",
            "name": "BinaryInteger",
            "printedName": "BinaryInteger",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Words",
                "printedName": "Words",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Words",
                    "printedName": "Swift.Int64.Words",
                    "usr": "s:s5Int64V5WordsV"
                  }
                ]
              }
            ],
            "usr": "s:Sz",
            "mangledName": "$sSz"
          },
          {
            "kind": "Conformance",
            "name": "LosslessStringConvertible",
            "printedName": "LosslessStringConvertible",
            "usr": "s:s25LosslessStringConvertibleP",
            "mangledName": "$ss25LosslessStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "SignedNumeric",
            "printedName": "SignedNumeric",
            "usr": "s:s13SignedNumericP",
            "mangledName": "$ss13SignedNumericP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "Numeric",
            "printedName": "Numeric",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Magnitude",
                "printedName": "Magnitude",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt64",
                    "printedName": "Swift.UInt64",
                    "usr": "s:s6UInt64V"
                  }
                ]
              }
            ],
            "usr": "s:Sj",
            "mangledName": "$sSj"
          },
          {
            "kind": "Conformance",
            "name": "Strideable",
            "printedName": "Strideable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Stride",
                "printedName": "Stride",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ]
              }
            ],
            "usr": "s:Sx",
            "mangledName": "$sSx"
          },
          {
            "kind": "Conformance",
            "name": "AdditiveArithmetic",
            "printedName": "AdditiveArithmetic",
            "usr": "s:s18AdditiveArithmeticP",
            "mangledName": "$ss18AdditiveArithmeticP"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByIntegerLiteral",
            "printedName": "ExpressibleByIntegerLiteral",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "IntegerLiteralType",
                "printedName": "IntegerLiteralType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int64",
                    "printedName": "Swift.Int64",
                    "usr": "s:s5Int64V"
                  }
                ]
              }
            ],
            "usr": "s:s27ExpressibleByIntegerLiteralP",
            "mangledName": "$ss27ExpressibleByIntegerLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "Comparable",
            "printedName": "Comparable",
            "usr": "s:SL",
            "mangledName": "$sSL"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByBooleanLiteral",
            "printedName": "ExpressibleByBooleanLiteral",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "BooleanLiteralType",
                "printedName": "BooleanLiteralType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Bool",
                    "printedName": "Swift.Bool",
                    "usr": "s:Sb"
                  }
                ]
              }
            ],
            "usr": "s:s27ExpressibleByBooleanLiteralP",
            "mangledName": "$ss27ExpressibleByBooleanLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "Decodable",
            "printedName": "Decodable",
            "usr": "s:Se",
            "mangledName": "$sSe"
          },
          {
            "kind": "Conformance",
            "name": "Encodable",
            "printedName": "Encodable",
            "usr": "s:SE",
            "mangledName": "$sSE"
          },
          {
            "kind": "Conformance",
            "name": "CustomReflectable",
            "printedName": "CustomReflectable",
            "usr": "s:s17CustomReflectableP",
            "mangledName": "$ss17CustomReflectableP"
          },
          {
            "kind": "Conformance",
            "name": "_CustomPlaygroundQuickLookable",
            "printedName": "_CustomPlaygroundQuickLookable",
            "usr": "s:s30_CustomPlaygroundQuickLookableP",
            "mangledName": "$ss30_CustomPlaygroundQuickLookableP"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "_CVarArgAligned",
            "printedName": "_CVarArgAligned",
            "usr": "s:s15_CVarArgAlignedP",
            "mangledName": "$ss15_CVarArgAlignedP"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "_HasCustomAnyHashableRepresentation",
            "printedName": "_HasCustomAnyHashableRepresentation",
            "usr": "s:s35_HasCustomAnyHashableRepresentationP",
            "mangledName": "$ss35_HasCustomAnyHashableRepresentationP"
          },
          {
            "kind": "Conformance",
            "name": "Sendable",
            "printedName": "Sendable",
            "usr": "s:s8SendableP",
            "mangledName": "$ss8SendableP"
          },
          {
            "kind": "Conformance",
            "name": "SIMDScalar",
            "printedName": "SIMDScalar",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "SIMDMaskScalar",
                "printedName": "SIMDMaskScalar",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int64",
                    "printedName": "Swift.Int64",
                    "usr": "s:s5Int64V"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD2Storage",
                "printedName": "SIMD2Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD2Storage",
                    "printedName": "Swift.Int64.SIMD2Storage",
                    "usr": "s:s5Int64V12SIMD2StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD4Storage",
                "printedName": "SIMD4Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD4Storage",
                    "printedName": "Swift.Int64.SIMD4Storage",
                    "usr": "s:s5Int64V12SIMD4StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD8Storage",
                "printedName": "SIMD8Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD8Storage",
                    "printedName": "Swift.Int64.SIMD8Storage",
                    "usr": "s:s5Int64V12SIMD8StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD16Storage",
                "printedName": "SIMD16Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD16Storage",
                    "printedName": "Swift.Int64.SIMD16Storage",
                    "usr": "s:s5Int64V13SIMD16StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD32Storage",
                "printedName": "SIMD32Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD32Storage",
                    "printedName": "Swift.Int64.SIMD32Storage",
                    "usr": "s:s5Int64V13SIMD32StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD64Storage",
                "printedName": "SIMD64Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD64Storage",
                    "printedName": "Swift.Int64.SIMD64Storage",
                    "usr": "s:s5Int64V13SIMD64StorageV"
                  }
                ]
              }
            ],
            "usr": "s:s10SIMDScalarP",
            "mangledName": "$ss10SIMDScalarP"
          },
          {
            "kind": "Conformance",
            "name": "_FormatSpecifiable",
            "printedName": "_FormatSpecifiable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "_Arg",
                "printedName": "_Arg",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int64",
                    "printedName": "Swift.Int64",
                    "usr": "s:s5Int64V"
                  }
                ]
              }
            ],
            "usr": "s:10Foundation18_FormatSpecifiableP",
            "mangledName": "$s10Foundation18_FormatSpecifiableP"
          },
          {
            "kind": "Conformance",
            "name": "_ObjectiveCBridgeable",
            "printedName": "_ObjectiveCBridgeable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "_ObjectiveCType",
                "printedName": "_ObjectiveCType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NSNumber",
                    "printedName": "Foundation.NSNumber",
                    "usr": "c:objc(cs)NSNumber"
                  }
                ]
              }
            ],
            "usr": "s:s21_ObjectiveCBridgeableP",
            "mangledName": "$ss21_ObjectiveCBridgeableP"
          }
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "UInt64",
        "printedName": "UInt64",
        "children": [
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(booleanLiteral:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "UInt64",
                "printedName": "Swift.UInt64",
                "usr": "s:s6UInt64V"
              },
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:s6UInt64V6NimbleE14booleanLiteralABSb_tcfc",
            "mangledName": "$ss6UInt64V6NimbleE14booleanLiteralABSb_tcfc",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "init_kind": "Designated"
          }
        ],
        "declKind": "Struct",
        "usr": "s:s6UInt64V",
        "mangledName": "$ss6UInt64V",
        "moduleName": "Swift",
        "declAttributes": [
          "Frozen"
        ],
        "isExternal": true,
        "conformances": [
          {
            "kind": "Conformance",
            "name": "FixedWidthInteger",
            "printedName": "FixedWidthInteger",
            "usr": "s:s17FixedWidthIntegerP",
            "mangledName": "$ss17FixedWidthIntegerP"
          },
          {
            "kind": "Conformance",
            "name": "UnsignedInteger",
            "printedName": "UnsignedInteger",
            "usr": "s:SU",
            "mangledName": "$sSU"
          },
          {
            "kind": "Conformance",
            "name": "_ExpressibleByBuiltinIntegerLiteral",
            "printedName": "_ExpressibleByBuiltinIntegerLiteral",
            "usr": "s:s35_ExpressibleByBuiltinIntegerLiteralP",
            "mangledName": "$ss35_ExpressibleByBuiltinIntegerLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "BinaryInteger",
            "printedName": "BinaryInteger",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Words",
                "printedName": "Words",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Words",
                    "printedName": "Swift.UInt64.Words",
                    "usr": "s:s6UInt64V5WordsV"
                  }
                ]
              }
            ],
            "usr": "s:Sz",
            "mangledName": "$sSz"
          },
          {
            "kind": "Conformance",
            "name": "LosslessStringConvertible",
            "printedName": "LosslessStringConvertible",
            "usr": "s:s25LosslessStringConvertibleP",
            "mangledName": "$ss25LosslessStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "Numeric",
            "printedName": "Numeric",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Magnitude",
                "printedName": "Magnitude",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt64",
                    "printedName": "Swift.UInt64",
                    "usr": "s:s6UInt64V"
                  }
                ]
              }
            ],
            "usr": "s:Sj",
            "mangledName": "$sSj"
          },
          {
            "kind": "Conformance",
            "name": "Strideable",
            "printedName": "Strideable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Stride",
                "printedName": "Stride",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ]
              }
            ],
            "usr": "s:Sx",
            "mangledName": "$sSx"
          },
          {
            "kind": "Conformance",
            "name": "AdditiveArithmetic",
            "printedName": "AdditiveArithmetic",
            "usr": "s:s18AdditiveArithmeticP",
            "mangledName": "$ss18AdditiveArithmeticP"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByIntegerLiteral",
            "printedName": "ExpressibleByIntegerLiteral",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "IntegerLiteralType",
                "printedName": "IntegerLiteralType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt64",
                    "printedName": "Swift.UInt64",
                    "usr": "s:s6UInt64V"
                  }
                ]
              }
            ],
            "usr": "s:s27ExpressibleByIntegerLiteralP",
            "mangledName": "$ss27ExpressibleByIntegerLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "Comparable",
            "printedName": "Comparable",
            "usr": "s:SL",
            "mangledName": "$sSL"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByBooleanLiteral",
            "printedName": "ExpressibleByBooleanLiteral",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "BooleanLiteralType",
                "printedName": "BooleanLiteralType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Bool",
                    "printedName": "Swift.Bool",
                    "usr": "s:Sb"
                  }
                ]
              }
            ],
            "usr": "s:s27ExpressibleByBooleanLiteralP",
            "mangledName": "$ss27ExpressibleByBooleanLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "Decodable",
            "printedName": "Decodable",
            "usr": "s:Se",
            "mangledName": "$sSe"
          },
          {
            "kind": "Conformance",
            "name": "Encodable",
            "printedName": "Encodable",
            "usr": "s:SE",
            "mangledName": "$sSE"
          },
          {
            "kind": "Conformance",
            "name": "CustomReflectable",
            "printedName": "CustomReflectable",
            "usr": "s:s17CustomReflectableP",
            "mangledName": "$ss17CustomReflectableP"
          },
          {
            "kind": "Conformance",
            "name": "_CustomPlaygroundQuickLookable",
            "printedName": "_CustomPlaygroundQuickLookable",
            "usr": "s:s30_CustomPlaygroundQuickLookableP",
            "mangledName": "$ss30_CustomPlaygroundQuickLookableP"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "_CVarArgAligned",
            "printedName": "_CVarArgAligned",
            "usr": "s:s15_CVarArgAlignedP",
            "mangledName": "$ss15_CVarArgAlignedP"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "_HasCustomAnyHashableRepresentation",
            "printedName": "_HasCustomAnyHashableRepresentation",
            "usr": "s:s35_HasCustomAnyHashableRepresentationP",
            "mangledName": "$ss35_HasCustomAnyHashableRepresentationP"
          },
          {
            "kind": "Conformance",
            "name": "Sendable",
            "printedName": "Sendable",
            "usr": "s:s8SendableP",
            "mangledName": "$ss8SendableP"
          },
          {
            "kind": "Conformance",
            "name": "SIMDScalar",
            "printedName": "SIMDScalar",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "SIMDMaskScalar",
                "printedName": "SIMDMaskScalar",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int64",
                    "printedName": "Swift.Int64",
                    "usr": "s:s5Int64V"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD2Storage",
                "printedName": "SIMD2Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD2Storage",
                    "printedName": "Swift.UInt64.SIMD2Storage",
                    "usr": "s:s6UInt64V12SIMD2StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD4Storage",
                "printedName": "SIMD4Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD4Storage",
                    "printedName": "Swift.UInt64.SIMD4Storage",
                    "usr": "s:s6UInt64V12SIMD4StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD8Storage",
                "printedName": "SIMD8Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD8Storage",
                    "printedName": "Swift.UInt64.SIMD8Storage",
                    "usr": "s:s6UInt64V12SIMD8StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD16Storage",
                "printedName": "SIMD16Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD16Storage",
                    "printedName": "Swift.UInt64.SIMD16Storage",
                    "usr": "s:s6UInt64V13SIMD16StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD32Storage",
                "printedName": "SIMD32Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD32Storage",
                    "printedName": "Swift.UInt64.SIMD32Storage",
                    "usr": "s:s6UInt64V13SIMD32StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD64Storage",
                "printedName": "SIMD64Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD64Storage",
                    "printedName": "Swift.UInt64.SIMD64Storage",
                    "usr": "s:s6UInt64V13SIMD64StorageV"
                  }
                ]
              }
            ],
            "usr": "s:s10SIMDScalarP",
            "mangledName": "$ss10SIMDScalarP"
          },
          {
            "kind": "Conformance",
            "name": "_FormatSpecifiable",
            "printedName": "_FormatSpecifiable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "_Arg",
                "printedName": "_Arg",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt64",
                    "printedName": "Swift.UInt64",
                    "usr": "s:s6UInt64V"
                  }
                ]
              }
            ],
            "usr": "s:10Foundation18_FormatSpecifiableP",
            "mangledName": "$s10Foundation18_FormatSpecifiableP"
          },
          {
            "kind": "Conformance",
            "name": "_ObjectiveCBridgeable",
            "printedName": "_ObjectiveCBridgeable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "_ObjectiveCType",
                "printedName": "_ObjectiveCType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NSNumber",
                    "printedName": "Foundation.NSNumber",
                    "usr": "c:objc(cs)NSNumber"
                  }
                ]
              }
            ],
            "usr": "s:s21_ObjectiveCBridgeableP",
            "mangledName": "$ss21_ObjectiveCBridgeableP"
          }
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "Int",
        "printedName": "Int",
        "children": [
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(booleanLiteral:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              },
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:Si6NimbleE14booleanLiteralSiSb_tcfc",
            "mangledName": "$sSi6NimbleE14booleanLiteralSiSb_tcfc",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "init_kind": "Designated"
          }
        ],
        "declKind": "Struct",
        "usr": "s:Si",
        "mangledName": "$sSi",
        "moduleName": "Swift",
        "declAttributes": [
          "Frozen"
        ],
        "isExternal": true,
        "conformances": [
          {
            "kind": "Conformance",
            "name": "FixedWidthInteger",
            "printedName": "FixedWidthInteger",
            "usr": "s:s17FixedWidthIntegerP",
            "mangledName": "$ss17FixedWidthIntegerP"
          },
          {
            "kind": "Conformance",
            "name": "SignedInteger",
            "printedName": "SignedInteger",
            "usr": "s:SZ",
            "mangledName": "$sSZ"
          },
          {
            "kind": "Conformance",
            "name": "_ExpressibleByBuiltinIntegerLiteral",
            "printedName": "_ExpressibleByBuiltinIntegerLiteral",
            "usr": "s:s35_ExpressibleByBuiltinIntegerLiteralP",
            "mangledName": "$ss35_ExpressibleByBuiltinIntegerLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "BinaryInteger",
            "printedName": "BinaryInteger",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Words",
                "printedName": "Words",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Words",
                    "printedName": "Swift.Int.Words",
                    "usr": "s:Si5WordsV"
                  }
                ]
              }
            ],
            "usr": "s:Sz",
            "mangledName": "$sSz"
          },
          {
            "kind": "Conformance",
            "name": "LosslessStringConvertible",
            "printedName": "LosslessStringConvertible",
            "usr": "s:s25LosslessStringConvertibleP",
            "mangledName": "$ss25LosslessStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "SignedNumeric",
            "printedName": "SignedNumeric",
            "usr": "s:s13SignedNumericP",
            "mangledName": "$ss13SignedNumericP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "Numeric",
            "printedName": "Numeric",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Magnitude",
                "printedName": "Magnitude",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt",
                    "printedName": "Swift.UInt",
                    "usr": "s:Su"
                  }
                ]
              }
            ],
            "usr": "s:Sj",
            "mangledName": "$sSj"
          },
          {
            "kind": "Conformance",
            "name": "Strideable",
            "printedName": "Strideable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Stride",
                "printedName": "Stride",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ]
              }
            ],
            "usr": "s:Sx",
            "mangledName": "$sSx"
          },
          {
            "kind": "Conformance",
            "name": "AdditiveArithmetic",
            "printedName": "AdditiveArithmetic",
            "usr": "s:s18AdditiveArithmeticP",
            "mangledName": "$ss18AdditiveArithmeticP"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByIntegerLiteral",
            "printedName": "ExpressibleByIntegerLiteral",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "IntegerLiteralType",
                "printedName": "IntegerLiteralType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ]
              }
            ],
            "usr": "s:s27ExpressibleByIntegerLiteralP",
            "mangledName": "$ss27ExpressibleByIntegerLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "Comparable",
            "printedName": "Comparable",
            "usr": "s:SL",
            "mangledName": "$sSL"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByBooleanLiteral",
            "printedName": "ExpressibleByBooleanLiteral",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "BooleanLiteralType",
                "printedName": "BooleanLiteralType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Bool",
                    "printedName": "Swift.Bool",
                    "usr": "s:Sb"
                  }
                ]
              }
            ],
            "usr": "s:s27ExpressibleByBooleanLiteralP",
            "mangledName": "$ss27ExpressibleByBooleanLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "Decodable",
            "printedName": "Decodable",
            "usr": "s:Se",
            "mangledName": "$sSe"
          },
          {
            "kind": "Conformance",
            "name": "Encodable",
            "printedName": "Encodable",
            "usr": "s:SE",
            "mangledName": "$sSE"
          },
          {
            "kind": "Conformance",
            "name": "CodingKeyRepresentable",
            "printedName": "CodingKeyRepresentable",
            "usr": "s:s22CodingKeyRepresentableP",
            "mangledName": "$ss22CodingKeyRepresentableP"
          },
          {
            "kind": "Conformance",
            "name": "CustomReflectable",
            "printedName": "CustomReflectable",
            "usr": "s:s17CustomReflectableP",
            "mangledName": "$ss17CustomReflectableP"
          },
          {
            "kind": "Conformance",
            "name": "_CustomPlaygroundQuickLookable",
            "printedName": "_CustomPlaygroundQuickLookable",
            "usr": "s:s30_CustomPlaygroundQuickLookableP",
            "mangledName": "$ss30_CustomPlaygroundQuickLookableP"
          },
          {
            "kind": "Conformance",
            "name": "MirrorPath",
            "printedName": "MirrorPath",
            "usr": "s:s10MirrorPathP",
            "mangledName": "$ss10MirrorPathP"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "_HasCustomAnyHashableRepresentation",
            "printedName": "_HasCustomAnyHashableRepresentation",
            "usr": "s:s35_HasCustomAnyHashableRepresentationP",
            "mangledName": "$ss35_HasCustomAnyHashableRepresentationP"
          },
          {
            "kind": "Conformance",
            "name": "Sendable",
            "printedName": "Sendable",
            "usr": "s:s8SendableP",
            "mangledName": "$ss8SendableP"
          },
          {
            "kind": "Conformance",
            "name": "SIMDScalar",
            "printedName": "SIMDScalar",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "SIMDMaskScalar",
                "printedName": "SIMDMaskScalar",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD2Storage",
                "printedName": "SIMD2Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD2Storage",
                    "printedName": "Swift.Int.SIMD2Storage",
                    "usr": "s:Si12SIMD2StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD4Storage",
                "printedName": "SIMD4Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD4Storage",
                    "printedName": "Swift.Int.SIMD4Storage",
                    "usr": "s:Si12SIMD4StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD8Storage",
                "printedName": "SIMD8Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD8Storage",
                    "printedName": "Swift.Int.SIMD8Storage",
                    "usr": "s:Si12SIMD8StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD16Storage",
                "printedName": "SIMD16Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD16Storage",
                    "printedName": "Swift.Int.SIMD16Storage",
                    "usr": "s:Si13SIMD16StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD32Storage",
                "printedName": "SIMD32Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD32Storage",
                    "printedName": "Swift.Int.SIMD32Storage",
                    "usr": "s:Si13SIMD32StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD64Storage",
                "printedName": "SIMD64Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD64Storage",
                    "printedName": "Swift.Int.SIMD64Storage",
                    "usr": "s:Si13SIMD64StorageV"
                  }
                ]
              }
            ],
            "usr": "s:s10SIMDScalarP",
            "mangledName": "$ss10SIMDScalarP"
          },
          {
            "kind": "Conformance",
            "name": "_FormatSpecifiable",
            "printedName": "_FormatSpecifiable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "_Arg",
                "printedName": "_Arg",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int64",
                    "printedName": "Swift.Int64",
                    "usr": "s:s5Int64V"
                  }
                ]
              }
            ],
            "usr": "s:10Foundation18_FormatSpecifiableP",
            "mangledName": "$s10Foundation18_FormatSpecifiableP"
          },
          {
            "kind": "Conformance",
            "name": "_ObjectiveCBridgeable",
            "printedName": "_ObjectiveCBridgeable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "_ObjectiveCType",
                "printedName": "_ObjectiveCType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NSNumber",
                    "printedName": "Foundation.NSNumber",
                    "usr": "c:objc(cs)NSNumber"
                  }
                ]
              }
            ],
            "usr": "s:s21_ObjectiveCBridgeableP",
            "mangledName": "$ss21_ObjectiveCBridgeableP"
          }
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "UInt",
        "printedName": "UInt",
        "children": [
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(booleanLiteral:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "UInt",
                "printedName": "Swift.UInt",
                "usr": "s:Su"
              },
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:Su6NimbleE14booleanLiteralSuSb_tcfc",
            "mangledName": "$sSu6NimbleE14booleanLiteralSuSb_tcfc",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "init_kind": "Designated"
          }
        ],
        "declKind": "Struct",
        "usr": "s:Su",
        "mangledName": "$sSu",
        "moduleName": "Swift",
        "declAttributes": [
          "Frozen"
        ],
        "isExternal": true,
        "conformances": [
          {
            "kind": "Conformance",
            "name": "FixedWidthInteger",
            "printedName": "FixedWidthInteger",
            "usr": "s:s17FixedWidthIntegerP",
            "mangledName": "$ss17FixedWidthIntegerP"
          },
          {
            "kind": "Conformance",
            "name": "UnsignedInteger",
            "printedName": "UnsignedInteger",
            "usr": "s:SU",
            "mangledName": "$sSU"
          },
          {
            "kind": "Conformance",
            "name": "_ExpressibleByBuiltinIntegerLiteral",
            "printedName": "_ExpressibleByBuiltinIntegerLiteral",
            "usr": "s:s35_ExpressibleByBuiltinIntegerLiteralP",
            "mangledName": "$ss35_ExpressibleByBuiltinIntegerLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "BinaryInteger",
            "printedName": "BinaryInteger",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Words",
                "printedName": "Words",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Words",
                    "printedName": "Swift.UInt.Words",
                    "usr": "s:Su5WordsV"
                  }
                ]
              }
            ],
            "usr": "s:Sz",
            "mangledName": "$sSz"
          },
          {
            "kind": "Conformance",
            "name": "LosslessStringConvertible",
            "printedName": "LosslessStringConvertible",
            "usr": "s:s25LosslessStringConvertibleP",
            "mangledName": "$ss25LosslessStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "Numeric",
            "printedName": "Numeric",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Magnitude",
                "printedName": "Magnitude",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt",
                    "printedName": "Swift.UInt",
                    "usr": "s:Su"
                  }
                ]
              }
            ],
            "usr": "s:Sj",
            "mangledName": "$sSj"
          },
          {
            "kind": "Conformance",
            "name": "Strideable",
            "printedName": "Strideable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Stride",
                "printedName": "Stride",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ]
              }
            ],
            "usr": "s:Sx",
            "mangledName": "$sSx"
          },
          {
            "kind": "Conformance",
            "name": "AdditiveArithmetic",
            "printedName": "AdditiveArithmetic",
            "usr": "s:s18AdditiveArithmeticP",
            "mangledName": "$ss18AdditiveArithmeticP"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByIntegerLiteral",
            "printedName": "ExpressibleByIntegerLiteral",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "IntegerLiteralType",
                "printedName": "IntegerLiteralType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt",
                    "printedName": "Swift.UInt",
                    "usr": "s:Su"
                  }
                ]
              }
            ],
            "usr": "s:s27ExpressibleByIntegerLiteralP",
            "mangledName": "$ss27ExpressibleByIntegerLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "Comparable",
            "printedName": "Comparable",
            "usr": "s:SL",
            "mangledName": "$sSL"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByBooleanLiteral",
            "printedName": "ExpressibleByBooleanLiteral",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "BooleanLiteralType",
                "printedName": "BooleanLiteralType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Bool",
                    "printedName": "Swift.Bool",
                    "usr": "s:Sb"
                  }
                ]
              }
            ],
            "usr": "s:s27ExpressibleByBooleanLiteralP",
            "mangledName": "$ss27ExpressibleByBooleanLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "Decodable",
            "printedName": "Decodable",
            "usr": "s:Se",
            "mangledName": "$sSe"
          },
          {
            "kind": "Conformance",
            "name": "Encodable",
            "printedName": "Encodable",
            "usr": "s:SE",
            "mangledName": "$sSE"
          },
          {
            "kind": "Conformance",
            "name": "CustomReflectable",
            "printedName": "CustomReflectable",
            "usr": "s:s17CustomReflectableP",
            "mangledName": "$ss17CustomReflectableP"
          },
          {
            "kind": "Conformance",
            "name": "_CustomPlaygroundQuickLookable",
            "printedName": "_CustomPlaygroundQuickLookable",
            "usr": "s:s30_CustomPlaygroundQuickLookableP",
            "mangledName": "$ss30_CustomPlaygroundQuickLookableP"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "_HasCustomAnyHashableRepresentation",
            "printedName": "_HasCustomAnyHashableRepresentation",
            "usr": "s:s35_HasCustomAnyHashableRepresentationP",
            "mangledName": "$ss35_HasCustomAnyHashableRepresentationP"
          },
          {
            "kind": "Conformance",
            "name": "Sendable",
            "printedName": "Sendable",
            "usr": "s:s8SendableP",
            "mangledName": "$ss8SendableP"
          },
          {
            "kind": "Conformance",
            "name": "SIMDScalar",
            "printedName": "SIMDScalar",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "SIMDMaskScalar",
                "printedName": "SIMDMaskScalar",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD2Storage",
                "printedName": "SIMD2Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD2Storage",
                    "printedName": "Swift.UInt.SIMD2Storage",
                    "usr": "s:Su12SIMD2StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD4Storage",
                "printedName": "SIMD4Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD4Storage",
                    "printedName": "Swift.UInt.SIMD4Storage",
                    "usr": "s:Su12SIMD4StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD8Storage",
                "printedName": "SIMD8Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD8Storage",
                    "printedName": "Swift.UInt.SIMD8Storage",
                    "usr": "s:Su12SIMD8StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD16Storage",
                "printedName": "SIMD16Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD16Storage",
                    "printedName": "Swift.UInt.SIMD16Storage",
                    "usr": "s:Su13SIMD16StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD32Storage",
                "printedName": "SIMD32Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD32Storage",
                    "printedName": "Swift.UInt.SIMD32Storage",
                    "usr": "s:Su13SIMD32StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD64Storage",
                "printedName": "SIMD64Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD64Storage",
                    "printedName": "Swift.UInt.SIMD64Storage",
                    "usr": "s:Su13SIMD64StorageV"
                  }
                ]
              }
            ],
            "usr": "s:s10SIMDScalarP",
            "mangledName": "$ss10SIMDScalarP"
          },
          {
            "kind": "Conformance",
            "name": "_FormatSpecifiable",
            "printedName": "_FormatSpecifiable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "_Arg",
                "printedName": "_Arg",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt64",
                    "printedName": "Swift.UInt64",
                    "usr": "s:s6UInt64V"
                  }
                ]
              }
            ],
            "usr": "s:10Foundation18_FormatSpecifiableP",
            "mangledName": "$s10Foundation18_FormatSpecifiableP"
          },
          {
            "kind": "Conformance",
            "name": "_ObjectiveCBridgeable",
            "printedName": "_ObjectiveCBridgeable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "_ObjectiveCType",
                "printedName": "_ObjectiveCType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NSNumber",
                    "printedName": "Foundation.NSNumber",
                    "usr": "c:objc(cs)NSNumber"
                  }
                ]
              }
            ],
            "usr": "s:s21_ObjectiveCBridgeableP",
            "mangledName": "$ss21_ObjectiveCBridgeableP"
          }
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "NSSet",
        "printedName": "NSSet",
        "declKind": "Class",
        "usr": "c:objc(cs)NSSet",
        "moduleName": "Foundation",
        "isOpen": true,
        "objc_name": "NSSet",
        "declAttributes": [
          "ObjC",
          "NonSendable",
          "Dynamic"
        ],
        "superclassUsr": "c:objc(cs)NSObject",
        "isExternal": true,
        "inheritsConvenienceInitializers": true,
        "superclassNames": [
          "ObjectiveC.NSObject"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObservingPublishing",
            "printedName": "_KeyValueCodingAndObservingPublishing",
            "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
            "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObserving",
            "printedName": "_KeyValueCodingAndObserving",
            "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
            "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "NMBContainer",
            "printedName": "NMBContainer",
            "usr": "s:6Nimble12NMBContainerP",
            "mangledName": "$s6Nimble12NMBContainerP"
          },
          {
            "kind": "Conformance",
            "name": "NMBCollection",
            "printedName": "NMBCollection",
            "usr": "s:6Nimble13NMBCollectionP",
            "mangledName": "$s6Nimble13NMBCollectionP"
          },
          {
            "kind": "Conformance",
            "name": "Sequence",
            "printedName": "Sequence",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Element",
                "printedName": "Element",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "ProtocolComposition",
                    "printedName": "Any"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "Iterator",
                "printedName": "Iterator",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NSFastEnumerationIterator",
                    "printedName": "Foundation.NSFastEnumerationIterator",
                    "usr": "s:10Foundation25NSFastEnumerationIteratorV"
                  }
                ]
              }
            ],
            "usr": "s:ST",
            "mangledName": "$sST"
          },
          {
            "kind": "Conformance",
            "name": "_HasCustomAnyHashableRepresentation",
            "printedName": "_HasCustomAnyHashableRepresentation",
            "usr": "s:s35_HasCustomAnyHashableRepresentationP",
            "mangledName": "$ss35_HasCustomAnyHashableRepresentationP"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByArrayLiteral",
            "printedName": "ExpressibleByArrayLiteral",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "ArrayLiteralElement",
                "printedName": "ArrayLiteralElement",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "ProtocolComposition",
                    "printedName": "Any"
                  }
                ]
              }
            ],
            "usr": "s:s25ExpressibleByArrayLiteralP",
            "mangledName": "$ss25ExpressibleByArrayLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "CustomReflectable",
            "printedName": "CustomReflectable",
            "usr": "s:s17CustomReflectableP",
            "mangledName": "$ss17CustomReflectableP"
          }
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "NSHashTable",
        "printedName": "NSHashTable",
        "declKind": "Class",
        "usr": "c:objc(cs)NSHashTable",
        "moduleName": "Foundation",
        "genericSig": "<τ_0_0 where τ_0_0 : AnyObject>",
        "sugared_genericSig": "<ObjectType where ObjectType : AnyObject>",
        "isOpen": true,
        "intro_iOS": "6.0",
        "objc_name": "NSHashTable",
        "declAttributes": [
          "Available",
          "ObjC",
          "NonSendable",
          "Dynamic"
        ],
        "superclassUsr": "c:objc(cs)NSObject",
        "isExternal": true,
        "inheritsConvenienceInitializers": true,
        "superclassNames": [
          "ObjectiveC.NSObject"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObservingPublishing",
            "printedName": "_KeyValueCodingAndObservingPublishing",
            "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
            "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObserving",
            "printedName": "_KeyValueCodingAndObserving",
            "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
            "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "NMBCollection",
            "printedName": "NMBCollection",
            "usr": "s:6Nimble13NMBCollectionP",
            "mangledName": "$s6Nimble13NMBCollectionP"
          }
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "NSMapTable",
        "printedName": "NSMapTable",
        "declKind": "Class",
        "usr": "c:objc(cs)NSMapTable",
        "moduleName": "Foundation",
        "genericSig": "<τ_0_0, τ_0_1 where τ_0_0 : AnyObject, τ_0_1 : AnyObject>",
        "sugared_genericSig": "<KeyType, ObjectType where KeyType : AnyObject, ObjectType : AnyObject>",
        "isOpen": true,
        "intro_iOS": "6.0",
        "objc_name": "NSMapTable",
        "declAttributes": [
          "Available",
          "ObjC",
          "NonSendable",
          "Dynamic"
        ],
        "superclassUsr": "c:objc(cs)NSObject",
        "isExternal": true,
        "inheritsConvenienceInitializers": true,
        "superclassNames": [
          "ObjectiveC.NSObject"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObservingPublishing",
            "printedName": "_KeyValueCodingAndObservingPublishing",
            "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
            "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObserving",
            "printedName": "_KeyValueCodingAndObserving",
            "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
            "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "NMBCollection",
            "printedName": "NMBCollection",
            "usr": "s:6Nimble13NMBCollectionP",
            "mangledName": "$s6Nimble13NMBCollectionP"
          }
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "NSDictionary",
        "printedName": "NSDictionary",
        "declKind": "Class",
        "usr": "c:objc(cs)NSDictionary",
        "moduleName": "Foundation",
        "isOpen": true,
        "objc_name": "NSDictionary",
        "declAttributes": [
          "ObjC",
          "NonSendable",
          "Dynamic"
        ],
        "superclassUsr": "c:objc(cs)NSObject",
        "isExternal": true,
        "inheritsConvenienceInitializers": true,
        "superclassNames": [
          "ObjectiveC.NSObject"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObservingPublishing",
            "printedName": "_KeyValueCodingAndObservingPublishing",
            "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
            "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObserving",
            "printedName": "_KeyValueCodingAndObserving",
            "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
            "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "NMBCollection",
            "printedName": "NMBCollection",
            "usr": "s:6Nimble13NMBCollectionP",
            "mangledName": "$s6Nimble13NMBCollectionP"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByDictionaryLiteral",
            "printedName": "ExpressibleByDictionaryLiteral",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Key",
                "printedName": "Key",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "ProtocolComposition",
                    "printedName": "Any"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "Value",
                "printedName": "Value",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "ProtocolComposition",
                    "printedName": "Any"
                  }
                ]
              }
            ],
            "usr": "s:s30ExpressibleByDictionaryLiteralP",
            "mangledName": "$ss30ExpressibleByDictionaryLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "_HasCustomAnyHashableRepresentation",
            "printedName": "_HasCustomAnyHashableRepresentation",
            "usr": "s:s35_HasCustomAnyHashableRepresentationP",
            "mangledName": "$ss35_HasCustomAnyHashableRepresentationP"
          },
          {
            "kind": "Conformance",
            "name": "Sequence",
            "printedName": "Sequence",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Element",
                "printedName": "Element",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Tuple",
                    "printedName": "(key: Any, value: Any)",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ProtocolComposition",
                        "printedName": "Any"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "ProtocolComposition",
                        "printedName": "Any"
                      }
                    ]
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "Iterator",
                "printedName": "Iterator",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Iterator",
                    "printedName": "Foundation.NSDictionary.Iterator",
                    "usr": "s:So12NSDictionaryC10FoundationE8IteratorC"
                  }
                ]
              }
            ],
            "usr": "s:ST",
            "mangledName": "$sST"
          },
          {
            "kind": "Conformance",
            "name": "CustomReflectable",
            "printedName": "CustomReflectable",
            "usr": "s:s17CustomReflectableP",
            "mangledName": "$ss17CustomReflectableP"
          }
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "Date",
        "printedName": "Date",
        "children": [
          {
            "kind": "Var",
            "name": "doubleValue",
            "printedName": "doubleValue",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Double",
                "printedName": "Swift.Double",
                "usr": "s:Sd"
              }
            ],
            "declKind": "Var",
            "usr": "s:10Foundation4DateV6NimbleE11doubleValueSdvp",
            "mangledName": "$s10Foundation4DateV6NimbleE11doubleValueSdvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Double",
                    "printedName": "Swift.Double",
                    "usr": "s:Sd"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:10Foundation4DateV6NimbleE11doubleValueSdvg",
                "mangledName": "$s10Foundation4DateV6NimbleE11doubleValueSdvg",
                "moduleName": "Nimble",
                "isFromExtension": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "testDescription",
            "printedName": "testDescription",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:10Foundation4DateV6NimbleE15testDescriptionSSvp",
            "mangledName": "$s10Foundation4DateV6NimbleE15testDescriptionSSvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:10Foundation4DateV6NimbleE15testDescriptionSSvg",
                "mangledName": "$s10Foundation4DateV6NimbleE15testDescriptionSSvg",
                "moduleName": "Nimble",
                "isFromExtension": true,
                "accessorKind": "get"
              }
            ]
          }
        ],
        "declKind": "Struct",
        "usr": "s:10Foundation4DateV",
        "mangledName": "$s10Foundation4DateV",
        "moduleName": "Foundation",
        "isExternal": true,
        "conformances": [
          {
            "kind": "Conformance",
            "name": "ReferenceConvertible",
            "printedName": "ReferenceConvertible",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "ReferenceType",
                "printedName": "ReferenceType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NSDate",
                    "printedName": "Foundation.NSDate",
                    "usr": "c:objc(cs)NSDate"
                  }
                ]
              }
            ],
            "usr": "s:10Foundation20ReferenceConvertibleP",
            "mangledName": "$s10Foundation20ReferenceConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "Comparable",
            "printedName": "Comparable",
            "usr": "s:SL",
            "mangledName": "$sSL"
          },
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Sendable",
            "printedName": "Sendable",
            "usr": "s:s8SendableP",
            "mangledName": "$ss8SendableP"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "NMBDoubleConvertible",
            "printedName": "NMBDoubleConvertible",
            "usr": "s:6Nimble20NMBDoubleConvertibleP",
            "mangledName": "$s6Nimble20NMBDoubleConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "TestOutputStringConvertible",
            "printedName": "TestOutputStringConvertible",
            "usr": "s:6Nimble27TestOutputStringConvertibleP",
            "mangledName": "$s6Nimble27TestOutputStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "Strideable",
            "printedName": "Strideable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Stride",
                "printedName": "Stride",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Double",
                    "printedName": "Swift.Double",
                    "usr": "s:Sd"
                  }
                ]
              }
            ],
            "usr": "s:Sx",
            "mangledName": "$sSx"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomReflectable",
            "printedName": "CustomReflectable",
            "usr": "s:s17CustomReflectableP",
            "mangledName": "$ss17CustomReflectableP"
          },
          {
            "kind": "Conformance",
            "name": "_ObjectiveCBridgeable",
            "printedName": "_ObjectiveCBridgeable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "_ObjectiveCType",
                "printedName": "_ObjectiveCType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NSDate",
                    "printedName": "Foundation.NSDate",
                    "usr": "c:objc(cs)NSDate"
                  }
                ]
              }
            ],
            "usr": "s:s21_ObjectiveCBridgeableP",
            "mangledName": "$ss21_ObjectiveCBridgeableP"
          },
          {
            "kind": "Conformance",
            "name": "_CustomPlaygroundQuickLookable",
            "printedName": "_CustomPlaygroundQuickLookable",
            "usr": "s:s30_CustomPlaygroundQuickLookableP",
            "mangledName": "$ss30_CustomPlaygroundQuickLookableP"
          },
          {
            "kind": "Conformance",
            "name": "Decodable",
            "printedName": "Decodable",
            "usr": "s:Se",
            "mangledName": "$sSe"
          },
          {
            "kind": "Conformance",
            "name": "Encodable",
            "printedName": "Encodable",
            "usr": "s:SE",
            "mangledName": "$sSE"
          }
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "NSDate",
        "printedName": "NSDate",
        "children": [
          {
            "kind": "Var",
            "name": "doubleValue",
            "printedName": "doubleValue",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Double",
                "printedName": "Swift.Double",
                "usr": "s:Sd"
              }
            ],
            "declKind": "Var",
            "usr": "s:So6NSDateC6NimbleE11doubleValueSdvp",
            "mangledName": "$sSo6NSDateC6NimbleE11doubleValueSdvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Double",
                    "printedName": "Swift.Double",
                    "usr": "s:Sd"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:So6NSDateC6NimbleE11doubleValueSdvg",
                "mangledName": "$sSo6NSDateC6NimbleE11doubleValueSdvg",
                "moduleName": "Nimble",
                "isFromExtension": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "testDescription",
            "printedName": "testDescription",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:So6NSDateC6NimbleE15testDescriptionSSvp",
            "mangledName": "$sSo6NSDateC6NimbleE15testDescriptionSSvp",
            "moduleName": "Nimble",
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:So6NSDateC6NimbleE15testDescriptionSSvg",
                "mangledName": "$sSo6NSDateC6NimbleE15testDescriptionSSvg",
                "moduleName": "Nimble",
                "isFromExtension": true,
                "accessorKind": "get"
              }
            ]
          }
        ],
        "declKind": "Class",
        "usr": "c:objc(cs)NSDate",
        "moduleName": "Foundation",
        "isOpen": true,
        "objc_name": "NSDate",
        "declAttributes": [
          "ObjC",
          "SynthesizedProtocol",
          "NonSendable",
          "Sendable",
          "Dynamic"
        ],
        "superclassUsr": "c:objc(cs)NSObject",
        "isExternal": true,
        "inheritsConvenienceInitializers": true,
        "superclassNames": [
          "ObjectiveC.NSObject"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Sendable",
            "printedName": "Sendable",
            "usr": "s:s8SendableP",
            "mangledName": "$ss8SendableP"
          },
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObservingPublishing",
            "printedName": "_KeyValueCodingAndObservingPublishing",
            "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
            "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObserving",
            "printedName": "_KeyValueCodingAndObserving",
            "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
            "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "NMBDoubleConvertible",
            "printedName": "NMBDoubleConvertible",
            "usr": "s:6Nimble20NMBDoubleConvertibleP",
            "mangledName": "$s6Nimble20NMBDoubleConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "TestOutputStringConvertible",
            "printedName": "TestOutputStringConvertible",
            "usr": "s:6Nimble27TestOutputStringConvertibleP",
            "mangledName": "$s6Nimble27TestOutputStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "_CustomPlaygroundQuickLookable",
            "printedName": "_CustomPlaygroundQuickLookable",
            "usr": "s:s30_CustomPlaygroundQuickLookableP",
            "mangledName": "$ss30_CustomPlaygroundQuickLookableP"
          },
          {
            "kind": "Conformance",
            "name": "_HasCustomAnyHashableRepresentation",
            "printedName": "_HasCustomAnyHashableRepresentation",
            "usr": "s:s35_HasCustomAnyHashableRepresentationP",
            "mangledName": "$ss35_HasCustomAnyHashableRepresentationP"
          }
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "NSString",
        "printedName": "NSString",
        "children": [
          {
            "kind": "Function",
            "name": "NMB_compare",
            "printedName": "NMB_compare(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "ComparisonResult",
                "printedName": "Foundation.ComparisonResult",
                "usr": "c:@E@NSComparisonResult"
              },
              {
                "kind": "TypeNominal",
                "name": "ImplicitlyUnwrappedOptional",
                "printedName": "Nimble.NMBComparable?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NMBComparable",
                    "printedName": "Nimble.NMBComparable",
                    "usr": "c:@M@Nimble@objc(pl)NMBComparable"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "c:@CM@Nimble@@objc(cs)NSString(im)NMB_compare:",
            "mangledName": "$sSo8NSStringC6NimbleE11NMB_compareySo18NSComparisonResultVAC13NMBComparable_pSgF",
            "moduleName": "Nimble",
            "objc_name": "NMB_compare:",
            "declAttributes": [
              "Dynamic",
              "ObjC",
              "AccessControl"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Class",
        "usr": "c:objc(cs)NSString",
        "moduleName": "Foundation",
        "isOpen": true,
        "objc_name": "NSString",
        "declAttributes": [
          "ObjC",
          "NonSendable",
          "Dynamic"
        ],
        "superclassUsr": "c:objc(cs)NSObject",
        "isExternal": true,
        "inheritsConvenienceInitializers": true,
        "superclassNames": [
          "ObjectiveC.NSObject"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObservingPublishing",
            "printedName": "_KeyValueCodingAndObservingPublishing",
            "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
            "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObserving",
            "printedName": "_KeyValueCodingAndObserving",
            "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
            "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "NMBComparable",
            "printedName": "NMBComparable",
            "usr": "c:@M@Nimble@objc(pl)NMBComparable",
            "mangledName": "$s6Nimble13NMBComparableP"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByStringLiteral",
            "printedName": "ExpressibleByStringLiteral",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "StringLiteralType",
                "printedName": "StringLiteralType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "StaticString",
                    "printedName": "Swift.StaticString",
                    "usr": "s:s12StaticStringV"
                  }
                ]
              }
            ],
            "usr": "s:s26ExpressibleByStringLiteralP",
            "mangledName": "$ss26ExpressibleByStringLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByExtendedGraphemeClusterLiteral",
            "printedName": "ExpressibleByExtendedGraphemeClusterLiteral",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "ExtendedGraphemeClusterLiteralType",
                "printedName": "ExtendedGraphemeClusterLiteralType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "StaticString",
                    "printedName": "Swift.StaticString",
                    "usr": "s:s12StaticStringV"
                  }
                ]
              }
            ],
            "usr": "s:s43ExpressibleByExtendedGraphemeClusterLiteralP",
            "mangledName": "$ss43ExpressibleByExtendedGraphemeClusterLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByUnicodeScalarLiteral",
            "printedName": "ExpressibleByUnicodeScalarLiteral",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "UnicodeScalarLiteralType",
                "printedName": "UnicodeScalarLiteralType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "StaticString",
                    "printedName": "Swift.StaticString",
                    "usr": "s:s12StaticStringV"
                  }
                ]
              }
            ],
            "usr": "s:s33ExpressibleByUnicodeScalarLiteralP",
            "mangledName": "$ss33ExpressibleByUnicodeScalarLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "_HasCustomAnyHashableRepresentation",
            "printedName": "_HasCustomAnyHashableRepresentation",
            "usr": "s:s35_HasCustomAnyHashableRepresentationP",
            "mangledName": "$ss35_HasCustomAnyHashableRepresentationP"
          },
          {
            "kind": "Conformance",
            "name": "_CustomPlaygroundQuickLookable",
            "printedName": "_CustomPlaygroundQuickLookable",
            "usr": "s:s30_CustomPlaygroundQuickLookableP",
            "mangledName": "$ss30_CustomPlaygroundQuickLookableP"
          }
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "Optional",
        "printedName": "Optional",
        "declKind": "Enum",
        "usr": "s:Sq",
        "mangledName": "$sSq",
        "moduleName": "Swift",
        "genericSig": "<τ_0_0>",
        "sugared_genericSig": "<Wrapped>",
        "declAttributes": [
          "Frozen"
        ],
        "isExternal": true,
        "isEnumExhaustive": true,
        "conformances": [
          {
            "kind": "Conformance",
            "name": "ExpressibleByNilLiteral",
            "printedName": "ExpressibleByNilLiteral",
            "usr": "s:s23ExpressibleByNilLiteralP",
            "mangledName": "$ss23ExpressibleByNilLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "Encodable",
            "printedName": "Encodable",
            "usr": "s:SE",
            "mangledName": "$sSE"
          },
          {
            "kind": "Conformance",
            "name": "Decodable",
            "printedName": "Decodable",
            "usr": "s:Se",
            "mangledName": "$sSe"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomReflectable",
            "printedName": "CustomReflectable",
            "usr": "s:s17CustomReflectableP",
            "mangledName": "$ss17CustomReflectableP"
          },
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "_ObjectiveCBridgeable",
            "printedName": "_ObjectiveCBridgeable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "_ObjectiveCType",
                "printedName": "_ObjectiveCType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "ProtocolComposition",
                    "printedName": "AnyObject"
                  }
                ]
              }
            ],
            "usr": "s:s21_ObjectiveCBridgeableP",
            "mangledName": "$ss21_ObjectiveCBridgeableP"
          },
          {
            "kind": "Conformance",
            "name": "Sendable",
            "printedName": "Sendable",
            "usr": "s:s8SendableP",
            "mangledName": "$ss8SendableP"
          },
          {
            "kind": "Conformance",
            "name": "EncodableWithConfiguration",
            "printedName": "EncodableWithConfiguration",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "EncodingConfiguration",
                "printedName": "EncodingConfiguration",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DependentMember",
                    "printedName": "τ_0_0.EncodingConfiguration"
                  }
                ]
              }
            ],
            "usr": "s:10Foundation26EncodableWithConfigurationP",
            "mangledName": "$s10Foundation26EncodableWithConfigurationP"
          },
          {
            "kind": "Conformance",
            "name": "DecodableWithConfiguration",
            "printedName": "DecodableWithConfiguration",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "DecodingConfiguration",
                "printedName": "DecodingConfiguration",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DependentMember",
                    "printedName": "τ_0_0.DecodingConfiguration"
                  }
                ]
              }
            ],
            "usr": "s:10Foundation26DecodableWithConfigurationP",
            "mangledName": "$s10Foundation26DecodableWithConfigurationP"
          }
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "NSException",
        "printedName": "NSException",
        "children": [
          {
            "kind": "Function",
            "name": "catchException",
            "printedName": "catchException(in:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Self?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DynamicSelf",
                    "printedName": "Self"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "() -> ()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ]
              }
            ],
            "declKind": "Func",
            "usr": "s:So11NSExceptionC6NimbleE14catchException2inABXDSgyyc_tFZ",
            "mangledName": "$sSo11NSExceptionC6NimbleE14catchException2inABXDSgyyc_tFZ",
            "moduleName": "Nimble",
            "static": true,
            "declAttributes": [
              "Final",
              "AccessControl"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Class",
        "usr": "c:objc(cs)NSException",
        "moduleName": "Foundation",
        "isOpen": true,
        "objc_name": "NSException",
        "declAttributes": [
          "ObjC",
          "NonSendable",
          "Dynamic"
        ],
        "superclassUsr": "c:objc(cs)NSObject",
        "isExternal": true,
        "inheritsConvenienceInitializers": true,
        "superclassNames": [
          "ObjectiveC.NSObject"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObservingPublishing",
            "printedName": "_KeyValueCodingAndObservingPublishing",
            "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
            "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObserving",
            "printedName": "_KeyValueCodingAndObserving",
            "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
            "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "Sendable",
            "printedName": "Sendable",
            "usr": "s:s8SendableP",
            "mangledName": "$ss8SendableP"
          }
        ]
      }
    ],
    "json_format_version": 8
  },
  "ConstValues": [
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Carthage\/Checkouts\/CwlPreconditionTesting\/Sources\/CwlPreconditionTesting\/CwlDarwinDefinitions.swift",
      "kind": "IntegerLiteral",
      "offset": 1352,
      "length": 2,
      "value": "20"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Carthage\/Checkouts\/CwlPreconditionTesting\/Sources\/CwlPreconditionTesting\/CwlDarwinDefinitions.swift",
      "kind": "IntegerLiteral",
      "offset": 1573,
      "length": 1,
      "value": "8"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Carthage\/Checkouts\/CwlPreconditionTesting\/Sources\/CwlPreconditionTesting\/CwlDarwinDefinitions.swift",
      "kind": "IntegerLiteral",
      "offset": 2634,
      "length": 2,
      "value": "14"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeCloseTo.swift",
      "kind": "FloatLiteral",
      "offset": 95,
      "length": 6,
      "value": "0.0001"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeCloseTo.swift",
      "kind": "IntegerLiteral",
      "offset": 155,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeCloseTo.swift",
      "kind": "IntegerLiteral",
      "offset": 157,
      "length": 5,
      "value": "10000"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeCloseTo.swift",
      "kind": "StringLiteral",
      "offset": 342,
      "length": 72,
      "value": "\"be close to <\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeCloseTo.swift",
      "kind": "StringLiteral",
      "offset": 383,
      "length": 1,
      "value": "\"> (within \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeCloseTo.swift",
      "kind": "StringLiteral",
      "offset": 412,
      "length": 1,
      "value": "\")\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeCloseTo.swift",
      "kind": "StringLiteral",
      "offset": 596,
      "length": 29,
      "value": "\"<\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeCloseTo.swift",
      "kind": "StringLiteral",
      "offset": 623,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeCloseTo.swift",
      "kind": "StringLiteral",
      "offset": 808,
      "length": 72,
      "value": "\"be close to <\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeCloseTo.swift",
      "kind": "StringLiteral",
      "offset": 849,
      "length": 1,
      "value": "\"> (within \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeCloseTo.swift",
      "kind": "StringLiteral",
      "offset": 878,
      "length": 1,
      "value": "\")\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeCloseTo.swift",
      "kind": "StringLiteral",
      "offset": 1086,
      "length": 29,
      "value": "\"<\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeCloseTo.swift",
      "kind": "StringLiteral",
      "offset": 1113,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeCloseTo.swift",
      "kind": "StringLiteral",
      "offset": 2462,
      "length": 25,
      "value": "\"Nimble.NMBObjCBeCloseToPredicate\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeCloseTo.swift",
      "kind": "StringLiteral",
      "offset": 3637,
      "length": 78,
      "value": "\"be close to <\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeCloseTo.swift",
      "kind": "StringLiteral",
      "offset": 3679,
      "length": 1,
      "value": "\"> (each within \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeCloseTo.swift",
      "kind": "StringLiteral",
      "offset": 3713,
      "length": 1,
      "value": "\")\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeResult.swift",
      "kind": "StringLiteral",
      "offset": 445,
      "length": 31,
      "value": "\"be <success(\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeResult.swift",
      "kind": "StringLiteral",
      "offset": 473,
      "length": 1,
      "value": "\")>\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeResult.swift",
      "kind": "StringLiteral",
      "offset": 528,
      "length": 23,
      "value": "\" that satisfies block\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeResult.swift",
      "kind": "BooleanLiteral",
      "offset": 822,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeResult.swift",
      "kind": "BooleanLiteral",
      "offset": 1073,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeResult.swift",
      "kind": "StringLiteral",
      "offset": 1603,
      "length": 31,
      "value": "\"be <failure(\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeResult.swift",
      "kind": "StringLiteral",
      "offset": 1631,
      "length": 1,
      "value": "\")>\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeResult.swift",
      "kind": "StringLiteral",
      "offset": 1686,
      "length": 23,
      "value": "\" that satisfies block\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeResult.swift",
      "kind": "BooleanLiteral",
      "offset": 1980,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeResult.swift",
      "kind": "BooleanLiteral",
      "offset": 2231,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Expectation.swift",
      "kind": "BooleanLiteral",
      "offset": 168,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Expectation.swift",
      "kind": "StringLiteral",
      "offset": 505,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Expectation.swift",
      "kind": "StringLiteral",
      "offset": 544,
      "length": 43,
      "value": "\"<\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Expectation.swift",
      "kind": "StringLiteral",
      "offset": 585,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Expectation.swift",
      "kind": "StringLiteral",
      "offset": 723,
      "length": 37,
      "value": "\"unexpected error thrown: <\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Expectation.swift",
      "kind": "StringLiteral",
      "offset": 758,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Expectation.swift",
      "kind": "BooleanLiteral",
      "offset": 781,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Expectation.swift",
      "kind": "BooleanLiteral",
      "offset": 852,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Expectation.swift",
      "kind": "StringLiteral",
      "offset": 1048,
      "length": 43,
      "value": "\"unexpected exception raised: \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Expectation.swift",
      "kind": "StringLiteral",
      "offset": 1090,
      "length": 1,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Expectation.swift",
      "kind": "BooleanLiteral",
      "offset": 1114,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Expectation.swift",
      "kind": "StringLiteral",
      "offset": 4239,
      "length": 204,
      "value": "\"Attempted to call `Expectation.onFailure(throw:) before a predicate has been applied.\nTry using `expect(...).to(...).onFailure(throw: ...`) instead.\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Expectation.swift",
      "kind": "BooleanLiteral",
      "offset": 4548,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Expectation.swift",
      "kind": "StringLiteral",
      "offset": 6538,
      "length": 4,
      "value": "\"to\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Expectation.swift",
      "kind": "StringLiteral",
      "offset": 6859,
      "length": 8,
      "value": "\"to not\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Expectation.swift",
      "kind": "StringLiteral",
      "offset": 9229,
      "length": 4,
      "value": "\"to\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Expectation.swift",
      "kind": "StringLiteral",
      "offset": 9588,
      "length": 8,
      "value": "\"to not\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/AsyncAwait.swift",
      "kind": "IntegerLiteral",
      "offset": 132,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/AsyncAwait.swift",
      "kind": "IntegerLiteral",
      "offset": 192,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/AsyncAwait.swift",
      "kind": "IntegerLiteral",
      "offset": 2950,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/AsyncAwait.swift",
      "kind": "IntegerLiteral",
      "offset": 3017,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/AsyncAwait.swift",
      "kind": "IntegerLiteral",
      "offset": 5789,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/AsyncAwait.swift",
      "kind": "IntegerLiteral",
      "offset": 5971,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/AsyncAwait.swift",
      "kind": "IntegerLiteral",
      "offset": 6014,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/AsyncAwait.swift",
      "kind": "StringLiteral",
      "offset": 6142,
      "length": 69,
      "value": "\"waitUntil(..) expects its completion closure to be only called once\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/AsyncAwait.swift",
      "kind": "BooleanLiteral",
      "offset": 8225,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Adapters\/NimbleXCTestHandler.swift",
      "kind": "StringLiteral",
      "offset": 323,
      "length": 26,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Adapters\/NimbleXCTestHandler.swift",
      "kind": "StringLiteral",
      "offset": 346,
      "length": 1,
      "value": "\"\n\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Adapters\/NimbleXCTestHandler.swift",
      "kind": "StringLiteral",
      "offset": 812,
      "length": 41,
      "value": "\"got: \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Adapters\/NimbleXCTestHandler.swift",
      "kind": "StringLiteral",
      "offset": 827,
      "length": 1,
      "value": "\" \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Adapters\/NimbleXCTestHandler.swift",
      "kind": "StringLiteral",
      "offset": 852,
      "length": 1,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Adapters\/NimbleXCTestHandler.swift",
      "kind": "StringLiteral",
      "offset": 897,
      "length": 50,
      "value": "\"expected \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Adapters\/NimbleXCTestHandler.swift",
      "kind": "StringLiteral",
      "offset": 920,
      "length": 1,
      "value": "\" \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Adapters\/NimbleXCTestHandler.swift",
      "kind": "StringLiteral",
      "offset": 946,
      "length": 1,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Adapters\/NimbleXCTestHandler.swift",
      "kind": "StringLiteral",
      "offset": 988,
      "length": 10,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Adapters\/NimbleXCTestHandler.swift",
      "kind": "StringLiteral",
      "offset": 995,
      "length": 1,
      "value": "\"\n\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Adapters\/NimbleXCTestHandler.swift",
      "kind": "StringLiteral",
      "offset": 1323,
      "length": 83,
      "value": "\"XCTest is not available and no custom assertion handler was configured. Aborting.\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Adapters\/NimbleXCTestHandler.swift",
      "kind": "BooleanLiteral",
      "offset": 1795,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Adapters\/NimbleXCTestHandler.swift",
      "kind": "BooleanLiteral",
      "offset": 2053,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Adapters\/NimbleXCTestHandler.swift",
      "kind": "StringLiteral",
      "offset": 2528,
      "length": 12,
      "value": "\"XCTestCase\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Adapters\/NimbleXCTestHandler.swift",
      "kind": "StringLiteral",
      "offset": 3211,
      "length": 214,
      "value": "\"Attempted to report a test failure to XCTest while no test case was running. The failure was:\n\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Adapters\/NimbleXCTestHandler.swift",
      "kind": "StringLiteral",
      "offset": 3345,
      "length": 1,
      "value": "\"\"\nIt occurred at: \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Adapters\/NimbleXCTestHandler.swift",
      "kind": "StringLiteral",
      "offset": 3392,
      "length": 1,
      "value": "\":\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Adapters\/NimbleXCTestHandler.swift",
      "kind": "StringLiteral",
      "offset": 3409,
      "length": 114,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/Stringers.swift",
      "kind": "StringLiteral",
      "offset": 180,
      "length": 6,
      "value": "\"<%p>\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/Stringers.swift",
      "kind": "StringLiteral",
      "offset": 264,
      "length": 5,
      "value": "\"nil\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/Stringers.swift",
      "kind": "StringLiteral",
      "offset": 341,
      "length": 4,
      "value": "\", \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/Stringers.swift",
      "kind": "StringLiteral",
      "offset": 383,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/Stringers.swift",
      "kind": "StringLiteral",
      "offset": 442,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/Stringers.swift",
      "kind": "StringLiteral",
      "offset": 487,
      "length": 20,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/Stringers.swift",
      "kind": "StringLiteral",
      "offset": 506,
      "length": 1,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/Stringers.swift",
      "kind": "StringLiteral",
      "offset": 1352,
      "length": 3,
      "value": "\".\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/Stringers.swift",
      "kind": "StringLiteral",
      "offset": 1420,
      "length": 3,
      "value": "\".\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/Stringers.swift",
      "kind": "IntegerLiteral",
      "offset": 1425,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/Stringers.swift",
      "kind": "IntegerLiteral",
      "offset": 1486,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/Stringers.swift",
      "kind": "StringLiteral",
      "offset": 1527,
      "length": 7,
      "value": "\"%0.1f\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/Stringers.swift",
      "kind": "IntegerLiteral",
      "offset": 1566,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/Stringers.swift",
      "kind": "StringLiteral",
      "offset": 1607,
      "length": 7,
      "value": "\"%0.2f\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/Stringers.swift",
      "kind": "IntegerLiteral",
      "offset": 1646,
      "length": 1,
      "value": "3"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/Stringers.swift",
      "kind": "StringLiteral",
      "offset": 1687,
      "length": 7,
      "value": "\"%0.3f\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/Stringers.swift",
      "kind": "StringLiteral",
      "offset": 1768,
      "length": 7,
      "value": "\"%0.4f\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/Stringers.swift",
      "kind": "StringLiteral",
      "offset": 2003,
      "length": 4,
      "value": "\", \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/Stringers.swift",
      "kind": "StringLiteral",
      "offset": 2024,
      "length": 11,
      "value": "\"[\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/Stringers.swift",
      "kind": "StringLiteral",
      "offset": 2033,
      "length": 1,
      "value": "\"]\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/Stringers.swift",
      "kind": "StringLiteral",
      "offset": 2484,
      "length": 4,
      "value": "\", \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/Stringers.swift",
      "kind": "StringLiteral",
      "offset": 2505,
      "length": 11,
      "value": "\"[\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/Stringers.swift",
      "kind": "StringLiteral",
      "offset": 2514,
      "length": 1,
      "value": "\"]\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/Stringers.swift",
      "kind": "StringLiteral",
      "offset": 2687,
      "length": 4,
      "value": "\", \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/Stringers.swift",
      "kind": "StringLiteral",
      "offset": 2708,
      "length": 11,
      "value": "\"(\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/Stringers.swift",
      "kind": "StringLiteral",
      "offset": 2717,
      "length": 1,
      "value": "\")\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/Stringers.swift",
      "kind": "StringLiteral",
      "offset": 2893,
      "length": 4,
      "value": "\", \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/Stringers.swift",
      "kind": "StringLiteral",
      "offset": 2914,
      "length": 11,
      "value": "\"(\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/Stringers.swift",
      "kind": "StringLiteral",
      "offset": 2923,
      "length": 1,
      "value": "\")\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/Stringers.swift",
      "kind": "StringLiteral",
      "offset": 3155,
      "length": 53,
      "value": "\"Data<hash=\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/Stringers.swift",
      "kind": "StringLiteral",
      "offset": 3190,
      "length": 1,
      "value": "\",length=\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/Stringers.swift",
      "kind": "StringLiteral",
      "offset": 3206,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/Stringers.swift",
      "kind": "StringLiteral",
      "offset": 3967,
      "length": 5,
      "value": "\"nil\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/SourceLocation.swift",
      "kind": "StringLiteral",
      "offset": 701,
      "length": 14,
      "value": "\"Unknown File\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/SourceLocation.swift",
      "kind": "IntegerLiteral",
      "offset": 731,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/SourceLocation.swift",
      "kind": "StringLiteral",
      "offset": 899,
      "length": 17,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/SourceLocation.swift",
      "kind": "StringLiteral",
      "offset": 907,
      "length": 1,
      "value": "\":\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/SourceLocation.swift",
      "kind": "StringLiteral",
      "offset": 915,
      "length": 1,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeLessThanOrEqual.swift",
      "kind": "StringLiteral",
      "offset": 220,
      "length": 56,
      "value": "\"be less than or equal to <\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeLessThanOrEqual.swift",
      "kind": "StringLiteral",
      "offset": 274,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeLessThanOrEqual.swift",
      "kind": "StringLiteral",
      "offset": 987,
      "length": 56,
      "value": "\"be less than or equal to <\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeLessThanOrEqual.swift",
      "kind": "StringLiteral",
      "offset": 1041,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeLessThanOrEqual.swift",
      "kind": "BooleanLiteral",
      "offset": 1222,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/Errors.swift",
      "kind": "StringLiteral",
      "offset": 86,
      "length": 7,
      "value": "\"throw\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/Errors.swift",
      "kind": "StringLiteral",
      "offset": 252,
      "length": 29,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/Errors.swift",
      "kind": "StringLiteral",
      "offset": 274,
      "length": 5,
      "value": "\" error\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/Errors.swift",
      "kind": "StringLiteral",
      "offset": 332,
      "length": 13,
      "value": "\" <\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/Errors.swift",
      "kind": "StringLiteral",
      "offset": 343,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/Errors.swift",
      "kind": "StringLiteral",
      "offset": 419,
      "length": 24,
      "value": "\" from type <\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/Errors.swift",
      "kind": "StringLiteral",
      "offset": 441,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/Errors.swift",
      "kind": "StringLiteral",
      "offset": 496,
      "length": 23,
      "value": "\" that satisfies block\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/Errors.swift",
      "kind": "StringLiteral",
      "offset": 607,
      "length": 33,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/Errors.swift",
      "kind": "StringLiteral",
      "offset": 629,
      "length": 3,
      "value": "\" any error\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/Errors.swift",
      "kind": "StringLiteral",
      "offset": 727,
      "length": 18,
      "value": "\"<\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/Errors.swift",
      "kind": "StringLiteral",
      "offset": 743,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/Errors.swift",
      "kind": "StringLiteral",
      "offset": 776,
      "length": 10,
      "value": "\"no error\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/Errors.swift",
      "kind": "StringLiteral",
      "offset": 1232,
      "length": 13,
      "value": "\"throw error\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/Errors.swift",
      "kind": "StringLiteral",
      "offset": 1293,
      "length": 23,
      "value": "\" that satisfies block\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/Errors.swift",
      "kind": "StringLiteral",
      "offset": 1351,
      "length": 17,
      "value": "\"throw any error\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/Errors.swift",
      "kind": "StringLiteral",
      "offset": 1455,
      "length": 18,
      "value": "\"<\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/Errors.swift",
      "kind": "StringLiteral",
      "offset": 1471,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/Errors.swift",
      "kind": "StringLiteral",
      "offset": 1504,
      "length": 10,
      "value": "\"no error\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeAnInstanceOf.swift",
      "kind": "StringLiteral",
      "offset": 216,
      "length": 55,
      "value": "\"be an instance of \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeAnInstanceOf.swift",
      "kind": "StringLiteral",
      "offset": 270,
      "length": 1,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeAnInstanceOf.swift",
      "kind": "StringLiteral",
      "offset": 616,
      "length": 59,
      "value": "\"<\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeAnInstanceOf.swift",
      "kind": "StringLiteral",
      "offset": 664,
      "length": 8,
      "value": "\" instance>\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeAnInstanceOf.swift",
      "kind": "StringLiteral",
      "offset": 1145,
      "length": 56,
      "value": "\"be an instance of \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeAnInstanceOf.swift",
      "kind": "StringLiteral",
      "offset": 1200,
      "length": 1,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeAnInstanceOf.swift",
      "kind": "StringLiteral",
      "offset": 1409,
      "length": 59,
      "value": "\"<\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeAnInstanceOf.swift",
      "kind": "StringLiteral",
      "offset": 1457,
      "length": 8,
      "value": "\" instance>\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeAnInstanceOf.swift",
      "kind": "StringLiteral",
      "offset": 1513,
      "length": 7,
      "value": "\"<nil>\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/AsyncExpression.swift",
      "kind": "BooleanLiteral",
      "offset": 2059,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/AsyncExpression.swift",
      "kind": "BooleanLiteral",
      "offset": 2186,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/AsyncExpression.swift",
      "kind": "BooleanLiteral",
      "offset": 3356,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/AsyncExpression.swift",
      "kind": "BooleanLiteral",
      "offset": 4008,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/AsyncExpression.swift",
      "kind": "BooleanLiteral",
      "offset": 5049,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/NimbleTimeInterval.swift",
      "kind": "IntegerLiteral",
      "offset": 1017,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/NimbleTimeInterval.swift",
      "kind": "IntegerLiteral",
      "offset": 1050,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/NimbleTimeInterval.swift",
      "kind": "IntegerLiteral",
      "offset": 1052,
      "length": 4,
      "value": "1000"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/NimbleTimeInterval.swift",
      "kind": "IntegerLiteral",
      "offset": 1074,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/NimbleTimeInterval.swift",
      "kind": "IntegerLiteral",
      "offset": 1139,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/NimbleTimeInterval.swift",
      "kind": "IntegerLiteral",
      "offset": 1204,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/NimbleTimeInterval.swift",
      "kind": "IntegerLiteral",
      "offset": 1267,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/NimbleTimeInterval.swift",
      "kind": "IntegerLiteral",
      "offset": 1392,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/NimbleTimeInterval.swift",
      "kind": "StringLiteral",
      "offset": 1396,
      "length": 22,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/NimbleTimeInterval.swift",
      "kind": "StringLiteral",
      "offset": 1410,
      "length": 6,
      "value": "\" second\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/NimbleTimeInterval.swift",
      "kind": "StringLiteral",
      "offset": 1421,
      "length": 23,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/NimbleTimeInterval.swift",
      "kind": "StringLiteral",
      "offset": 1435,
      "length": 7,
      "value": "\" seconds\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/NimbleTimeInterval.swift",
      "kind": "StringLiteral",
      "offset": 1489,
      "length": 29,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/NimbleTimeInterval.swift",
      "kind": "IntegerLiteral",
      "offset": 1503,
      "length": 5,
      "value": "1000"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/NimbleTimeInterval.swift",
      "kind": "StringLiteral",
      "offset": 1509,
      "length": 7,
      "value": "\" seconds\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/NimbleTimeInterval.swift",
      "kind": "StringLiteral",
      "offset": 1563,
      "length": 33,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/NimbleTimeInterval.swift",
      "kind": "IntegerLiteral",
      "offset": 1577,
      "length": 9,
      "value": "1000000"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/NimbleTimeInterval.swift",
      "kind": "StringLiteral",
      "offset": 1587,
      "length": 7,
      "value": "\" seconds\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/NimbleTimeInterval.swift",
      "kind": "StringLiteral",
      "offset": 1640,
      "length": 37,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/NimbleTimeInterval.swift",
      "kind": "IntegerLiteral",
      "offset": 1654,
      "length": 13,
      "value": "1000000000"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/NimbleTimeInterval.swift",
      "kind": "StringLiteral",
      "offset": 1668,
      "length": 7,
      "value": "\" seconds\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/ToSucceed.swift",
      "kind": "StringLiteral",
      "offset": 621,
      "length": 39,
      "value": "\"expected a ToSucceedResult, got <nil>\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/ToSucceed.swift",
      "kind": "BooleanLiteral",
      "offset": 781,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/ToSucceed.swift",
      "kind": "StringLiteral",
      "offset": 835,
      "length": 9,
      "value": "\"succeed\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/ToSucceed.swift",
      "kind": "StringLiteral",
      "offset": 854,
      "length": 13,
      "value": "\"<succeeded>\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/ToSucceed.swift",
      "kind": "BooleanLiteral",
      "offset": 975,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/ToSucceed.swift",
      "kind": "StringLiteral",
      "offset": 1030,
      "length": 9,
      "value": "\"succeed\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/ToSucceed.swift",
      "kind": "StringLiteral",
      "offset": 1049,
      "length": 30,
      "value": "\"<failed> because <\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/ToSucceed.swift",
      "kind": "StringLiteral",
      "offset": 1077,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeLogical.swift",
      "kind": "BooleanLiteral",
      "offset": 2358,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeLogical.swift",
      "kind": "StringLiteral",
      "offset": 2404,
      "length": 9,
      "value": "\"be true\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeLogical.swift",
      "kind": "BooleanLiteral",
      "offset": 2607,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeLogical.swift",
      "kind": "StringLiteral",
      "offset": 2654,
      "length": 10,
      "value": "\"be false\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeLogical.swift",
      "kind": "StringLiteral",
      "offset": 2904,
      "length": 11,
      "value": "\"be truthy\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeLogical.swift",
      "kind": "BooleanLiteral",
      "offset": 3050,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeLogical.swift",
      "kind": "StringLiteral",
      "offset": 3309,
      "length": 10,
      "value": "\"be falsy\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeLogical.swift",
      "kind": "BooleanLiteral",
      "offset": 3454,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeLogical.swift",
      "kind": "BooleanLiteral",
      "offset": 3715,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeLogical.swift",
      "kind": "BooleanLiteral",
      "offset": 3997,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeLogical.swift",
      "kind": "BooleanLiteral",
      "offset": 4277,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeLogical.swift",
      "kind": "BooleanLiteral",
      "offset": 4661,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Adapters\/NMBExpectation.swift",
      "kind": "IntegerLiteral",
      "offset": 744,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Adapters\/NMBExpectation.swift",
      "kind": "StringLiteral",
      "offset": 516,
      "length": 14,
      "value": "\"Nimble.NMBExpectation\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/DSL+Wait.swift",
      "kind": "StringLiteral",
      "offset": 2492,
      "length": 16,
      "value": "\"waitUntil(...)\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/DSL+Wait.swift",
      "kind": "StringLiteral",
      "offset": 2607,
      "length": 47,
      "value": "\"Reached .incomplete state for waitUntil(...).\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/DSL+Wait.swift",
      "kind": "StringLiteral",
      "offset": 2741,
      "length": 14,
      "value": "\"-waitUntil()\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/DSL+Wait.swift",
      "kind": "StringLiteral",
      "offset": 2867,
      "length": 41,
      "value": "\"Waited more than \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/DSL+Wait.swift",
      "kind": "StringLiteral",
      "offset": 2907,
      "length": 26,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/DSL+Wait.swift",
      "kind": "StringLiteral",
      "offset": 3005,
      "length": 43,
      "value": "\"Unexpected exception raised: \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/DSL+Wait.swift",
      "kind": "StringLiteral",
      "offset": 3047,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/DSL+Wait.swift",
      "kind": "StringLiteral",
      "offset": 3113,
      "length": 35,
      "value": "\"Unexpected error thrown: \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/DSL+Wait.swift",
      "kind": "StringLiteral",
      "offset": 3147,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/DSL+Wait.swift",
      "kind": "StringLiteral",
      "offset": 3227,
      "length": 43,
      "value": "\"Unexpected exception raised: \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/DSL+Wait.swift",
      "kind": "StringLiteral",
      "offset": 3269,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/DSL+Wait.swift",
      "kind": "StringLiteral",
      "offset": 3341,
      "length": 35,
      "value": "\"Unexpected error thrown: \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/DSL+Wait.swift",
      "kind": "StringLiteral",
      "offset": 3375,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/DSL+Wait.swift",
      "kind": "IntegerLiteral",
      "offset": 3709,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/DSL+Wait.swift",
      "kind": "StringLiteral",
      "offset": 4165,
      "length": 374,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/DSL+Wait.swift",
      "kind": "StringLiteral",
      "offset": 4175,
      "length": 5,
      "value": "\" timed out but was unable to run the timeout handler because the main thread is unresponsive (\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/DSL+Wait.swift",
      "kind": "StringLiteral",
      "offset": 4290,
      "length": 2,
      "value": "\" is allow after the wait times out). Conditions that may cause this include processing blocking IO on the main thread, calls to sleep(), deadlocks, and synchronous IPC. Nimble forcefully stopped run loop which may cause future failures in test run.\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/AllPass.swift",
      "kind": "StringLiteral",
      "offset": 153,
      "length": 18,
      "value": "\"pass a condition\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/AllPass.swift",
      "kind": "StringLiteral",
      "offset": 1422,
      "length": 10,
      "value": "\"all pass\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/AllPass.swift",
      "kind": "StringLiteral",
      "offset": 1435,
      "length": 30,
      "value": "\" (use beNil() to match nils)\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/AllPass.swift",
      "kind": "StringLiteral",
      "offset": 1546,
      "length": 10,
      "value": "\"all pass\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/AllPass.swift",
      "kind": "StringLiteral",
      "offset": 1943,
      "length": 6,
      "value": "\"all \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/AllPass.swift",
      "kind": "StringLiteral",
      "offset": 2173,
      "length": 6,
      "value": "\"all \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/AllPass.swift",
      "kind": "StringLiteral",
      "offset": 2212,
      "length": 62,
      "value": "\", but failed first at element <\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/AllPass.swift",
      "kind": "StringLiteral",
      "offset": 2272,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/AllPass.swift",
      "kind": "StringLiteral",
      "offset": 2305,
      "length": 33,
      "value": "\" in <\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/AllPass.swift",
      "kind": "StringLiteral",
      "offset": 2336,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/AllPass.swift",
      "kind": "BooleanLiteral",
      "offset": 3180,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/AllPass.swift",
      "kind": "BooleanLiteral",
      "offset": 3546,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/AllPass.swift",
      "kind": "BooleanLiteral",
      "offset": 3680,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/AllPass.swift",
      "kind": "StringLiteral",
      "offset": 3978,
      "length": 175,
      "value": "\"allPass can only be used with types which implement NSFastEnumeration (NSArray, NSSet, ...), and whose elements subclass NSObject, got <\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/AllPass.swift",
      "kind": "StringLiteral",
      "offset": 4145,
      "length": 5,
      "value": "\"nil\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/AllPass.swift",
      "kind": "StringLiteral",
      "offset": 4151,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeAKindOf.swift",
      "kind": "StringLiteral",
      "offset": 84,
      "length": 50,
      "value": "\"be a kind of \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeAKindOf.swift",
      "kind": "StringLiteral",
      "offset": 133,
      "length": 1,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeAKindOf.swift",
      "kind": "StringLiteral",
      "offset": 222,
      "length": 51,
      "value": "\"be a kind of \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeAKindOf.swift",
      "kind": "StringLiteral",
      "offset": 272,
      "length": 1,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeAKindOf.swift",
      "kind": "StringLiteral",
      "offset": 726,
      "length": 7,
      "value": "\"<nil>\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeAKindOf.swift",
      "kind": "StringLiteral",
      "offset": 867,
      "length": 50,
      "value": "\"be a kind of \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeAKindOf.swift",
      "kind": "StringLiteral",
      "offset": 916,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeAKindOf.swift",
      "kind": "StringLiteral",
      "offset": 939,
      "length": 59,
      "value": "\"<\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeAKindOf.swift",
      "kind": "StringLiteral",
      "offset": 987,
      "length": 8,
      "value": "\" instance>\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeAKindOf.swift",
      "kind": "StringLiteral",
      "offset": 1869,
      "length": 59,
      "value": "\"<\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeAKindOf.swift",
      "kind": "StringLiteral",
      "offset": 1917,
      "length": 8,
      "value": "\" instance>\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeAKindOf.swift",
      "kind": "StringLiteral",
      "offset": 2114,
      "length": 7,
      "value": "\"<nil>\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/Match.swift",
      "kind": "StringLiteral",
      "offset": 224,
      "length": 37,
      "value": "\"match <\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/Match.swift",
      "kind": "StringLiteral",
      "offset": 259,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeVoid.swift",
      "kind": "StringLiteral",
      "offset": 141,
      "length": 9,
      "value": "\"be void\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/ContainElementSatisfying.swift",
      "kind": "StringLiteral",
      "offset": 134,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/ContainElementSatisfying.swift",
      "kind": "StringLiteral",
      "offset": 282,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/ContainElementSatisfying.swift",
      "kind": "StringLiteral",
      "offset": 321,
      "length": 52,
      "value": "\"find object in collection that satisfies predicate\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/ContainElementSatisfying.swift",
      "kind": "StringLiteral",
      "offset": 426,
      "length": 51,
      "value": "\"find object in collection \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/ContainElementSatisfying.swift",
      "kind": "StringLiteral",
      "offset": 476,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/ContainElementSatisfying.swift",
      "kind": "BooleanLiteral",
      "offset": 656,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/ContainElementSatisfying.swift",
      "kind": "BooleanLiteral",
      "offset": 736,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/ContainElementSatisfying.swift",
      "kind": "StringLiteral",
      "offset": 1397,
      "length": 71,
      "value": "\"containElementSatisfying must be provided an NSFastEnumeration object\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/ContainElementSatisfying.swift",
      "kind": "StringLiteral",
      "offset": 1665,
      "length": 52,
      "value": "\"find object in collection that satisfies predicate\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/ElementsEqual.swift",
      "kind": "StringLiteral",
      "offset": 454,
      "length": 45,
      "value": "\"elementsEqual <\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/ElementsEqual.swift",
      "kind": "StringLiteral",
      "offset": 497,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/ElementsEqual.swift",
      "kind": "StringLiteral",
      "offset": 1541,
      "length": 45,
      "value": "\"elementsEqual <\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/ElementsEqual.swift",
      "kind": "StringLiteral",
      "offset": 1584,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/PostNotification.swift",
      "kind": "Array",
      "offset": 457,
      "length": 2,
      "value": "[]"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/PostNotification.swift",
      "kind": "Array",
      "offset": 553,
      "length": 2,
      "value": "[]"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/PostNotification.swift",
      "kind": "Array",
      "offset": 604,
      "length": 2,
      "value": "[]"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/PostNotification.swift",
      "kind": "Array",
      "offset": 656,
      "length": 2,
      "value": "[]"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/PostNotification.swift",
      "kind": "Array",
      "offset": 1668,
      "length": 2,
      "value": "[]"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/PostNotification.swift",
      "kind": "BooleanLiteral",
      "offset": 1884,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/PostNotification.swift",
      "kind": "BooleanLiteral",
      "offset": 2179,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/PostNotification.swift",
      "kind": "StringLiteral",
      "offset": 2231,
      "length": 56,
      "value": "\"Only expecting closure to be evaluated on main thread.\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/PostNotification.swift",
      "kind": "BooleanLiteral",
      "offset": 2327,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/PostNotification.swift",
      "kind": "StringLiteral",
      "offset": 2502,
      "length": 18,
      "value": "\"no notifications\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/PostNotification.swift",
      "kind": "StringLiteral",
      "offset": 2564,
      "length": 60,
      "value": "\"<\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/PostNotification.swift",
      "kind": "StringLiteral",
      "offset": 2622,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Adapters\/AssertionRecorder.swift",
      "kind": "StringLiteral",
      "offset": 581,
      "length": 96,
      "value": "\"AssertionRecord { success=\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Adapters\/AssertionRecorder.swift",
      "kind": "StringLiteral",
      "offset": 618,
      "length": 1,
      "value": "\", message='\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Adapters\/AssertionRecorder.swift",
      "kind": "StringLiteral",
      "offset": 651,
      "length": 26,
      "value": "\"', location=\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Adapters\/AssertionRecorder.swift",
      "kind": "StringLiteral",
      "offset": 674,
      "length": 1,
      "value": "\" }\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Adapters\/AssertionRecorder.swift",
      "kind": "StringLiteral",
      "offset": 2851,
      "length": 37,
      "value": "\"unexpected error thrown: <\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Adapters\/AssertionRecorder.swift",
      "kind": "StringLiteral",
      "offset": 2886,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Adapters\/AssertionRecorder.swift",
      "kind": "BooleanLiteral",
      "offset": 2987,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Adapters\/AssertionRecorder.swift",
      "kind": "BooleanLiteral",
      "offset": 3742,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Adapters\/AssertionRecorder.swift",
      "kind": "BooleanLiteral",
      "offset": 4990,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/ThrowError.swift",
      "kind": "BooleanLiteral",
      "offset": 889,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/ThrowError.swift",
      "kind": "StringLiteral",
      "offset": 943,
      "length": 17,
      "value": "\"throw any error\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/ThrowError.swift",
      "kind": "StringLiteral",
      "offset": 970,
      "length": 18,
      "value": "\"<\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/ThrowError.swift",
      "kind": "StringLiteral",
      "offset": 986,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/ThrowError.swift",
      "kind": "BooleanLiteral",
      "offset": 1079,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/ThrowError.swift",
      "kind": "StringLiteral",
      "offset": 1134,
      "length": 17,
      "value": "\"throw any error\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/ThrowError.swift",
      "kind": "StringLiteral",
      "offset": 1161,
      "length": 10,
      "value": "\"no error\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/ThrowError.swift",
      "kind": "BooleanLiteral",
      "offset": 2243,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/ThrowError.swift",
      "kind": "BooleanLiteral",
      "offset": 2376,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/ThrowError.swift",
      "kind": "BooleanLiteral",
      "offset": 2671,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/ThrowError.swift",
      "kind": "BooleanLiteral",
      "offset": 3838,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/ThrowError.swift",
      "kind": "BooleanLiteral",
      "offset": 3937,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/ThrowError.swift",
      "kind": "BooleanLiteral",
      "offset": 4232,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/ThrowError.swift",
      "kind": "BooleanLiteral",
      "offset": 5408,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/ThrowError.swift",
      "kind": "BooleanLiteral",
      "offset": 5479,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/ThrowError.swift",
      "kind": "BooleanLiteral",
      "offset": 5855,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/ThrowError.swift",
      "kind": "BooleanLiteral",
      "offset": 6519,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/ThrowError.swift",
      "kind": "BooleanLiteral",
      "offset": 7403,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/ThrowError.swift",
      "kind": "BooleanLiteral",
      "offset": 7474,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/ThrowError.swift",
      "kind": "BooleanLiteral",
      "offset": 7706,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/ThrowError.swift",
      "kind": "BooleanLiteral",
      "offset": 8556,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/ThrowError.swift",
      "kind": "BooleanLiteral",
      "offset": 8633,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/ThrowError.swift",
      "kind": "BooleanLiteral",
      "offset": 8865,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeginWithPrefix.swift",
      "kind": "StringLiteral",
      "offset": 410,
      "length": 43,
      "value": "\"begin with <\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeginWithPrefix.swift",
      "kind": "StringLiteral",
      "offset": 451,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeginWithPrefix.swift",
      "kind": "StringLiteral",
      "offset": 1454,
      "length": 43,
      "value": "\"begin with <\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeginWithPrefix.swift",
      "kind": "StringLiteral",
      "offset": 1495,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/Equal.swift",
      "kind": "StringLiteral",
      "offset": 137,
      "length": 37,
      "value": "\"equal <\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/Equal.swift",
      "kind": "StringLiteral",
      "offset": 172,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/Equal.swift",
      "kind": "StringLiteral",
      "offset": 1201,
      "length": 37,
      "value": "\"equal <\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/Equal.swift",
      "kind": "StringLiteral",
      "offset": 1236,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/Equal.swift",
      "kind": "StringLiteral",
      "offset": 3065,
      "length": 37,
      "value": "\"equal <\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/Equal.swift",
      "kind": "StringLiteral",
      "offset": 3100,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/Equal.swift",
      "kind": "StringLiteral",
      "offset": 3590,
      "length": 37,
      "value": "\"equal <\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/Equal.swift",
      "kind": "StringLiteral",
      "offset": 3625,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/Equal.swift",
      "kind": "StringLiteral",
      "offset": 3649,
      "length": 29,
      "value": "\"<\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/Equal.swift",
      "kind": "StringLiteral",
      "offset": 3676,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/Equal.swift",
      "kind": "IntegerLiteral",
      "offset": 3953,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/Equal.swift",
      "kind": "StringLiteral",
      "offset": 4015,
      "length": 35,
      "value": "\", missing <\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/Equal.swift",
      "kind": "StringLiteral",
      "offset": 4048,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/Equal.swift",
      "kind": "IntegerLiteral",
      "offset": 4147,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/Equal.swift",
      "kind": "StringLiteral",
      "offset": 4209,
      "length": 31,
      "value": "\", extra <\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/Equal.swift",
      "kind": "StringLiteral",
      "offset": 4238,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/Equal.swift",
      "kind": "StringLiteral",
      "offset": 4586,
      "length": 37,
      "value": "\"equal <\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/Equal.swift",
      "kind": "StringLiteral",
      "offset": 4621,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeWithin.swift",
      "kind": "StringLiteral",
      "offset": 176,
      "length": 63,
      "value": "\"be within range <(\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeWithin.swift",
      "kind": "StringLiteral",
      "offset": 214,
      "length": 3,
      "value": "\"..<\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeWithin.swift",
      "kind": "StringLiteral",
      "offset": 236,
      "length": 1,
      "value": "\")>\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeWithin.swift",
      "kind": "StringLiteral",
      "offset": 649,
      "length": 63,
      "value": "\"be within range <(\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeWithin.swift",
      "kind": "StringLiteral",
      "offset": 687,
      "length": 3,
      "value": "\"...\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeWithin.swift",
      "kind": "StringLiteral",
      "offset": 709,
      "length": 1,
      "value": "\")>\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeLessThan.swift",
      "kind": "StringLiteral",
      "offset": 185,
      "length": 44,
      "value": "\"be less than <\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeLessThan.swift",
      "kind": "StringLiteral",
      "offset": 227,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeLessThan.swift",
      "kind": "StringLiteral",
      "offset": 920,
      "length": 44,
      "value": "\"be less than <\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeLessThan.swift",
      "kind": "StringLiteral",
      "offset": 962,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeGreaterThan.swift",
      "kind": "StringLiteral",
      "offset": 196,
      "length": 47,
      "value": "\"be greater than <\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeGreaterThan.swift",
      "kind": "StringLiteral",
      "offset": 241,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeGreaterThan.swift",
      "kind": "StringLiteral",
      "offset": 956,
      "length": 47,
      "value": "\"be greater than <\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeGreaterThan.swift",
      "kind": "StringLiteral",
      "offset": 1001,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Adapters\/AssertionRecorder+Async.swift",
      "kind": "StringLiteral",
      "offset": 1056,
      "length": 37,
      "value": "\"unexpected error thrown: <\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Adapters\/AssertionRecorder+Async.swift",
      "kind": "StringLiteral",
      "offset": 1091,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Adapters\/AssertionRecorder+Async.swift",
      "kind": "BooleanLiteral",
      "offset": 1192,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Adapters\/AssertionRecorder+Async.swift",
      "kind": "BooleanLiteral",
      "offset": 1871,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Adapters\/AssertionRecorder+Async.swift",
      "kind": "BooleanLiteral",
      "offset": 3048,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/MatchError.swift",
      "kind": "StringLiteral",
      "offset": 502,
      "length": 7,
      "value": "\"match\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/MatchError.swift",
      "kind": "BooleanLiteral",
      "offset": 607,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/MatchError.swift",
      "kind": "BooleanLiteral",
      "offset": 740,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/MatchError.swift",
      "kind": "StringLiteral",
      "offset": 1344,
      "length": 7,
      "value": "\"match\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/MatchError.swift",
      "kind": "BooleanLiteral",
      "offset": 1449,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/MatchError.swift",
      "kind": "BooleanLiteral",
      "offset": 1548,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/MatchError.swift",
      "kind": "StringLiteral",
      "offset": 2003,
      "length": 7,
      "value": "\"match\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/MatchError.swift",
      "kind": "BooleanLiteral",
      "offset": 2116,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/MatchError.swift",
      "kind": "BooleanLiteral",
      "offset": 2182,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Adapters\/NimbleEnvironment.swift",
      "kind": "StringLiteral",
      "offset": 482,
      "length": 19,
      "value": "\"NimbleEnvironment\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Adapters\/NimbleEnvironment.swift",
      "kind": "StringLiteral",
      "offset": 810,
      "length": 19,
      "value": "\"NimbleEnvironment\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Adapters\/NimbleEnvironment.swift",
      "kind": "BooleanLiteral",
      "offset": 1167,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Adapters\/NimbleEnvironment.swift",
      "kind": "BooleanLiteral",
      "offset": 1221,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/MatcherProtocols.swift",
      "kind": "StringLiteral",
      "offset": 1482,
      "length": 26,
      "value": "\"yyyy-MM-dd HH:mm:ss.SSSS\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/MatcherProtocols.swift",
      "kind": "StringLiteral",
      "offset": 1551,
      "length": 13,
      "value": "\"en_US_POSIX\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/RaisesException.swift",
      "kind": "StringLiteral",
      "offset": 1960,
      "length": 37,
      "value": "\"unexpected error thrown: <\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/RaisesException.swift",
      "kind": "StringLiteral",
      "offset": 1995,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/RaisesException.swift",
      "kind": "StringLiteral",
      "offset": 2723,
      "length": 17,
      "value": "\"raise exception\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/RaisesException.swift",
      "kind": "StringLiteral",
      "offset": 2791,
      "length": 23,
      "value": "\" with name <\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/RaisesException.swift",
      "kind": "StringLiteral",
      "offset": 2812,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/RaisesException.swift",
      "kind": "StringLiteral",
      "offset": 2872,
      "length": 26,
      "value": "\" with reason <\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/RaisesException.swift",
      "kind": "StringLiteral",
      "offset": 2896,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/RaisesException.swift",
      "kind": "StringLiteral",
      "offset": 2960,
      "length": 30,
      "value": "\" with userInfo <\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/RaisesException.swift",
      "kind": "StringLiteral",
      "offset": 2988,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/RaisesException.swift",
      "kind": "StringLiteral",
      "offset": 3043,
      "length": 23,
      "value": "\" that satisfies block\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/RaisesException.swift",
      "kind": "StringLiteral",
      "offset": 3170,
      "length": 21,
      "value": "\"raise any exception\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/RaisesException.swift",
      "kind": "StringLiteral",
      "offset": 3320,
      "length": 155,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/RaisesException.swift",
      "kind": "StringLiteral",
      "offset": 3363,
      "length": 1,
      "value": "\" { name=\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/RaisesException.swift",
      "kind": "StringLiteral",
      "offset": 3388,
      "length": 1,
      "value": "\", reason='\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/RaisesException.swift",
      "kind": "StringLiteral",
      "offset": 3428,
      "length": 47,
      "value": "\"', userInfo=\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/RaisesException.swift",
      "kind": "StringLiteral",
      "offset": 3472,
      "length": 1,
      "value": "\" }\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/RaisesException.swift",
      "kind": "StringLiteral",
      "offset": 3506,
      "length": 14,
      "value": "\"no exception\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/RaisesException.swift",
      "kind": "BooleanLiteral",
      "offset": 3818,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/RaisesException.swift",
      "kind": "BooleanLiteral",
      "offset": 3886,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/RaisesException.swift",
      "kind": "BooleanLiteral",
      "offset": 3987,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/RaisesException.swift",
      "kind": "BooleanLiteral",
      "offset": 4094,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/RaisesException.swift",
      "kind": "BooleanLiteral",
      "offset": 4290,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/RaisesException.swift",
      "kind": "IntegerLiteral",
      "offset": 4564,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/RaisesException.swift",
      "kind": "BooleanLiteral",
      "offset": 4598,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/RaisesException.swift",
      "kind": "StringLiteral",
      "offset": 4686,
      "length": 30,
      "value": "\"Nimble.NMBObjCRaiseExceptionPredicate\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/Contain.swift",
      "kind": "StringLiteral",
      "offset": 490,
      "length": 35,
      "value": "\"contain <\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/Contain.swift",
      "kind": "StringLiteral",
      "offset": 523,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/Contain.swift",
      "kind": "StringLiteral",
      "offset": 1208,
      "length": 35,
      "value": "\"contain <\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/Contain.swift",
      "kind": "StringLiteral",
      "offset": 1241,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/Contain.swift",
      "kind": "StringLiteral",
      "offset": 1948,
      "length": 35,
      "value": "\"contain <\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/Contain.swift",
      "kind": "StringLiteral",
      "offset": 1981,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/Contain.swift",
      "kind": "StringLiteral",
      "offset": 2522,
      "length": 40,
      "value": "\"contain <\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/Contain.swift",
      "kind": "StringLiteral",
      "offset": 2560,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/Contain.swift",
      "kind": "StringLiteral",
      "offset": 3197,
      "length": 40,
      "value": "\"contain <\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/Contain.swift",
      "kind": "StringLiteral",
      "offset": 3235,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/Contain.swift",
      "kind": "IntegerLiteral",
      "offset": 3432,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/Contain.swift",
      "kind": "StringLiteral",
      "offset": 3780,
      "length": 35,
      "value": "\"contain <\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/Contain.swift",
      "kind": "StringLiteral",
      "offset": 3813,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/Contain.swift",
      "kind": "BooleanLiteral",
      "offset": 4025,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/Contain.swift",
      "kind": "StringLiteral",
      "offset": 5309,
      "length": 101,
      "value": "\"contain <\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/Contain.swift",
      "kind": "StringLiteral",
      "offset": 5345,
      "length": 1,
      "value": "\"> (only works for NSArrays, NSSets, NSHashTables, and NSStrings)\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/Contain.swift",
      "kind": "StringLiteral",
      "offset": 5538,
      "length": 38,
      "value": "\"contain <\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/Contain.swift",
      "kind": "StringLiteral",
      "offset": 5574,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling+AsyncAwait.swift",
      "kind": "StringLiteral",
      "offset": 475,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling+AsyncAwait.swift",
      "kind": "StringLiteral",
      "offset": 510,
      "length": 49,
      "value": "\"<\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling+AsyncAwait.swift",
      "kind": "StringLiteral",
      "offset": 557,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling+AsyncAwait.swift",
      "kind": "StringLiteral",
      "offset": 679,
      "length": 37,
      "value": "\"unexpected error thrown: <\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling+AsyncAwait.swift",
      "kind": "StringLiteral",
      "offset": 714,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling+AsyncAwait.swift",
      "kind": "BooleanLiteral",
      "offset": 733,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling+AsyncAwait.swift",
      "kind": "StringLiteral",
      "offset": 1226,
      "length": 28,
      "value": "\"expect(...).\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling+AsyncAwait.swift",
      "kind": "StringLiteral",
      "offset": 1248,
      "length": 1,
      "value": "\"(...)\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling+AsyncAwait.swift",
      "kind": "StringLiteral",
      "offset": 3315,
      "length": 21,
      "value": "\"NimbleInternalError\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling+AsyncAwait.swift",
      "kind": "StringLiteral",
      "offset": 3562,
      "length": 15,
      "value": "\"to eventually\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling+AsyncAwait.swift",
      "kind": "StringLiteral",
      "offset": 3884,
      "length": 14,
      "value": "\"toEventually\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling+AsyncAwait.swift",
      "kind": "StringLiteral",
      "offset": 4512,
      "length": 21,
      "value": "\"NimbleInternalError\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling+AsyncAwait.swift",
      "kind": "StringLiteral",
      "offset": 4762,
      "length": 19,
      "value": "\"to eventually not\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling+AsyncAwait.swift",
      "kind": "StringLiteral",
      "offset": 5091,
      "length": 17,
      "value": "\"toEventuallyNot\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling+AsyncAwait.swift",
      "kind": "StringLiteral",
      "offset": 6278,
      "length": 21,
      "value": "\"NimbleInternalError\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling+AsyncAwait.swift",
      "kind": "StringLiteral",
      "offset": 6527,
      "length": 10,
      "value": "\"to never\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling+AsyncAwait.swift",
      "kind": "StringLiteral",
      "offset": 6837,
      "length": 9,
      "value": "\"toNever\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling+AsyncAwait.swift",
      "kind": "StringLiteral",
      "offset": 7989,
      "length": 21,
      "value": "\"NimbleInternalError\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling+AsyncAwait.swift",
      "kind": "StringLiteral",
      "offset": 8235,
      "length": 11,
      "value": "\"to always\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling+AsyncAwait.swift",
      "kind": "StringLiteral",
      "offset": 8550,
      "length": 10,
      "value": "\"toAlways\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling+AsyncAwait.swift",
      "kind": "StringLiteral",
      "offset": 9737,
      "length": 21,
      "value": "\"NimbleInternalError\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling+AsyncAwait.swift",
      "kind": "StringLiteral",
      "offset": 9917,
      "length": 15,
      "value": "\"to eventually\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling+AsyncAwait.swift",
      "kind": "StringLiteral",
      "offset": 10234,
      "length": 14,
      "value": "\"toEventually\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling+AsyncAwait.swift",
      "kind": "StringLiteral",
      "offset": 10880,
      "length": 21,
      "value": "\"NimbleInternalError\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling+AsyncAwait.swift",
      "kind": "StringLiteral",
      "offset": 11063,
      "length": 19,
      "value": "\"to eventually not\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling+AsyncAwait.swift",
      "kind": "StringLiteral",
      "offset": 11387,
      "length": 17,
      "value": "\"toEventuallyNot\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling+AsyncAwait.swift",
      "kind": "StringLiteral",
      "offset": 12592,
      "length": 21,
      "value": "\"NimbleInternalError\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling+AsyncAwait.swift",
      "kind": "StringLiteral",
      "offset": 12775,
      "length": 10,
      "value": "\"to never\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling+AsyncAwait.swift",
      "kind": "StringLiteral",
      "offset": 13080,
      "length": 9,
      "value": "\"toNever\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling+AsyncAwait.swift",
      "kind": "StringLiteral",
      "offset": 14250,
      "length": 21,
      "value": "\"NimbleInternalError\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling+AsyncAwait.swift",
      "kind": "StringLiteral",
      "offset": 14430,
      "length": 11,
      "value": "\"to always\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling+AsyncAwait.swift",
      "kind": "StringLiteral",
      "offset": 14740,
      "length": 10,
      "value": "\"toAlways\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/DSL+AsyncAwait.swift",
      "kind": "BooleanLiteral",
      "offset": 460,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/DSL+AsyncAwait.swift",
      "kind": "BooleanLiteral",
      "offset": 885,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/DSL+AsyncAwait.swift",
      "kind": "BooleanLiteral",
      "offset": 1311,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/DSL+AsyncAwait.swift",
      "kind": "BooleanLiteral",
      "offset": 1739,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/DSL+AsyncAwait.swift",
      "kind": "BooleanLiteral",
      "offset": 2302,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/DSL+AsyncAwait.swift",
      "kind": "BooleanLiteral",
      "offset": 2858,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/DSL+AsyncAwait.swift",
      "kind": "BooleanLiteral",
      "offset": 3415,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/DSL+AsyncAwait.swift",
      "kind": "BooleanLiteral",
      "offset": 3974,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/DSL+AsyncAwait.swift",
      "kind": "StringLiteral",
      "offset": 5931,
      "length": 16,
      "value": "\"waitUntil(...)\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/DSL+AsyncAwait.swift",
      "kind": "StringLiteral",
      "offset": 6038,
      "length": 47,
      "value": "\"Reached .incomplete state for waitUntil(...).\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/DSL+AsyncAwait.swift",
      "kind": "StringLiteral",
      "offset": 6164,
      "length": 14,
      "value": "\"-waitUntil()\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/DSL+AsyncAwait.swift",
      "kind": "StringLiteral",
      "offset": 6279,
      "length": 41,
      "value": "\"Waited more than \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/DSL+AsyncAwait.swift",
      "kind": "StringLiteral",
      "offset": 6319,
      "length": 26,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/DSL+AsyncAwait.swift",
      "kind": "StringLiteral",
      "offset": 6409,
      "length": 43,
      "value": "\"Unexpected exception raised: \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/DSL+AsyncAwait.swift",
      "kind": "StringLiteral",
      "offset": 6451,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/DSL+AsyncAwait.swift",
      "kind": "StringLiteral",
      "offset": 6509,
      "length": 35,
      "value": "\"Unexpected error thrown: \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/DSL+AsyncAwait.swift",
      "kind": "StringLiteral",
      "offset": 6543,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/DSL+AsyncAwait.swift",
      "kind": "StringLiteral",
      "offset": 6607,
      "length": 35,
      "value": "\"Unexpected error thrown: \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/DSL+AsyncAwait.swift",
      "kind": "StringLiteral",
      "offset": 6641,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Carthage\/Checkouts\/CwlPreconditionTesting\/Sources\/CwlPreconditionTesting\/CwlCatchBadInstruction.swift",
      "kind": "IntegerLiteral",
      "offset": 1742,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Carthage\/Checkouts\/CwlPreconditionTesting\/Sources\/CwlPreconditionTesting\/CwlCatchBadInstruction.swift",
      "kind": "IntegerLiteral",
      "offset": 2072,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Carthage\/Checkouts\/CwlPreconditionTesting\/Sources\/CwlPreconditionTesting\/CwlCatchBadInstruction.swift",
      "kind": "IntegerLiteral",
      "offset": 2321,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Carthage\/Checkouts\/CwlPreconditionTesting\/Sources\/CwlPreconditionTesting\/CwlCatchBadInstruction.swift",
      "kind": "IntegerLiteral",
      "offset": 2533,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Carthage\/Checkouts\/CwlPreconditionTesting\/Sources\/CwlPreconditionTesting\/CwlCatchBadInstruction.swift",
      "kind": "IntegerLiteral",
      "offset": 3233,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Carthage\/Checkouts\/CwlPreconditionTesting\/Sources\/CwlPreconditionTesting\/CwlCatchBadInstruction.swift",
      "kind": "IntegerLiteral",
      "offset": 3323,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Carthage\/Checkouts\/CwlPreconditionTesting\/Sources\/CwlPreconditionTesting\/CwlCatchBadInstruction.swift",
      "kind": "IntegerLiteral",
      "offset": 3403,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Carthage\/Checkouts\/CwlPreconditionTesting\/Sources\/CwlPreconditionTesting\/CwlCatchBadInstruction.swift",
      "kind": "IntegerLiteral",
      "offset": 3493,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Carthage\/Checkouts\/CwlPreconditionTesting\/Sources\/CwlPreconditionTesting\/CwlCatchBadInstruction.swift",
      "kind": "IntegerLiteral",
      "offset": 3589,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Carthage\/Checkouts\/CwlPreconditionTesting\/Sources\/CwlPreconditionTesting\/CwlCatchBadInstruction.swift",
      "kind": "BooleanLiteral",
      "offset": 4543,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Carthage\/Checkouts\/CwlPreconditionTesting\/Sources\/CwlPreconditionTesting\/CwlCatchBadInstruction.swift",
      "kind": "IntegerLiteral",
      "offset": 4925,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Carthage\/Checkouts\/CwlPreconditionTesting\/Sources\/CwlPreconditionTesting\/CwlCatchBadInstruction.swift",
      "kind": "IntegerLiteral",
      "offset": 4971,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Carthage\/Checkouts\/CwlPreconditionTesting\/Sources\/CwlPreconditionTesting\/CwlCatchBadInstruction.swift",
      "kind": "IntegerLiteral",
      "offset": 5127,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Carthage\/Checkouts\/CwlPreconditionTesting\/Sources\/CwlPreconditionTesting\/CwlCatchBadInstruction.swift",
      "kind": "IntegerLiteral",
      "offset": 5667,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Carthage\/Checkouts\/CwlPreconditionTesting\/Sources\/CwlPreconditionTesting\/CwlCatchBadInstruction.swift",
      "kind": "BooleanLiteral",
      "offset": 5749,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Carthage\/Checkouts\/CwlPreconditionTesting\/Sources\/CwlPreconditionTesting\/CwlCatchBadInstruction.swift",
      "kind": "IntegerLiteral",
      "offset": 6062,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Carthage\/Checkouts\/CwlPreconditionTesting\/Sources\/CwlPreconditionTesting\/CwlCatchBadInstruction.swift",
      "kind": "IntegerLiteral",
      "offset": 6089,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Carthage\/Checkouts\/CwlPreconditionTesting\/Sources\/CwlPreconditionTesting\/CwlCatchBadInstruction.swift",
      "kind": "StringLiteral",
      "offset": 6543,
      "length": 30,
      "value": "\"Mach message error: \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Carthage\/Checkouts\/CwlPreconditionTesting\/Sources\/CwlPreconditionTesting\/CwlCatchBadInstruction.swift",
      "kind": "StringLiteral",
      "offset": 6572,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Carthage\/Checkouts\/CwlPreconditionTesting\/Sources\/CwlPreconditionTesting\/CwlCatchBadInstruction.swift",
      "kind": "BooleanLiteral",
      "offset": 6586,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Carthage\/Checkouts\/CwlPreconditionTesting\/Sources\/CwlPreconditionTesting\/CwlCatchBadInstruction.swift",
      "kind": "BooleanLiteral",
      "offset": 7854,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Carthage\/Checkouts\/CwlPreconditionTesting\/Sources\/CwlPreconditionTesting\/CwlCatchBadInstruction.swift",
      "kind": "BooleanLiteral",
      "offset": 7897,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Carthage\/Checkouts\/CwlPreconditionTesting\/Sources\/CwlPreconditionTesting\/CwlCatchBadInstruction.swift",
      "kind": "IntegerLiteral",
      "offset": 9559,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Carthage\/Checkouts\/CwlPreconditionTesting\/Sources\/CwlPreconditionTesting\/CwlCatchBadInstruction.swift",
      "kind": "IntegerLiteral",
      "offset": 9835,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Carthage\/Checkouts\/CwlPreconditionTesting\/Sources\/CwlPreconditionTesting\/CwlCatchBadInstruction.swift",
      "kind": "StringLiteral",
      "offset": 10078,
      "length": 27,
      "value": "\"Mach port error: \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Carthage\/Checkouts\/CwlPreconditionTesting\/Sources\/CwlPreconditionTesting\/CwlCatchBadInstruction.swift",
      "kind": "StringLiteral",
      "offset": 10104,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeGreaterThanOrEqualTo.swift",
      "kind": "StringLiteral",
      "offset": 216,
      "length": 59,
      "value": "\"be greater than or equal to <\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeGreaterThanOrEqualTo.swift",
      "kind": "StringLiteral",
      "offset": 273,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeGreaterThanOrEqualTo.swift",
      "kind": "StringLiteral",
      "offset": 1024,
      "length": 59,
      "value": "\"be greater than or equal to <\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeGreaterThanOrEqualTo.swift",
      "kind": "StringLiteral",
      "offset": 1081,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeginWith.swift",
      "kind": "StringLiteral",
      "offset": 269,
      "length": 33,
      "value": "\"begin with <\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeginWith.swift",
      "kind": "StringLiteral",
      "offset": 300,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeginWith.swift",
      "kind": "StringLiteral",
      "offset": 785,
      "length": 33,
      "value": "\"begin with <\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeginWith.swift",
      "kind": "StringLiteral",
      "offset": 816,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeginWith.swift",
      "kind": "IntegerLiteral",
      "offset": 960,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeginWith.swift",
      "kind": "IntegerLiteral",
      "offset": 1108,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeginWith.swift",
      "kind": "StringLiteral",
      "offset": 1610,
      "length": 35,
      "value": "\"begin with <\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeginWith.swift",
      "kind": "StringLiteral",
      "offset": 1643,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeIdenticalTo.swift",
      "kind": "StringLiteral",
      "offset": 462,
      "length": 47,
      "value": "\"be identical to \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeIdenticalTo.swift",
      "kind": "StringLiteral",
      "offset": 508,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeIdenticalTo.swift",
      "kind": "StringLiteral",
      "offset": 535,
      "length": 29,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeIdenticalTo.swift",
      "kind": "StringLiteral",
      "offset": 563,
      "length": 1,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/ExpectationMessage.swift",
      "kind": "StringLiteral",
      "offset": 1762,
      "length": 38,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/ExpectationMessage.swift",
      "kind": "StringLiteral",
      "offset": 1793,
      "length": 1,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/ExpectationMessage.swift",
      "kind": "StringLiteral",
      "offset": 1799,
      "length": 1,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/ExpectationMessage.swift",
      "kind": "StringLiteral",
      "offset": 2523,
      "length": 30,
      "value": "\" (use beNil() to match nils)\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/ExpectationMessage.swift",
      "kind": "StringLiteral",
      "offset": 5473,
      "length": 10,
      "value": "\"expected\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/ExpectationMessage.swift",
      "kind": "StringLiteral",
      "offset": 5498,
      "length": 4,
      "value": "\"to\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/ExpectationMessage.swift",
      "kind": "StringLiteral",
      "offset": 5644,
      "length": 26,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/ExpectationMessage.swift",
      "kind": "StringLiteral",
      "offset": 5656,
      "length": 1,
      "value": "\" \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/ExpectationMessage.swift",
      "kind": "StringLiteral",
      "offset": 5662,
      "length": 1,
      "value": "\" \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/ExpectationMessage.swift",
      "kind": "StringLiteral",
      "offset": 5669,
      "length": 1,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/ExpectationMessage.swift",
      "kind": "StringLiteral",
      "offset": 5736,
      "length": 41,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/ExpectationMessage.swift",
      "kind": "StringLiteral",
      "offset": 5748,
      "length": 1,
      "value": "\" \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/ExpectationMessage.swift",
      "kind": "StringLiteral",
      "offset": 5754,
      "length": 1,
      "value": "\" \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/ExpectationMessage.swift",
      "kind": "StringLiteral",
      "offset": 5761,
      "length": 1,
      "value": "\", got \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/ExpectationMessage.swift",
      "kind": "StringLiteral",
      "offset": 5776,
      "length": 1,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/ExpectationMessage.swift",
      "kind": "StringLiteral",
      "offset": 5851,
      "length": 41,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/ExpectationMessage.swift",
      "kind": "StringLiteral",
      "offset": 5863,
      "length": 1,
      "value": "\" \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/ExpectationMessage.swift",
      "kind": "StringLiteral",
      "offset": 5869,
      "length": 1,
      "value": "\" \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/ExpectationMessage.swift",
      "kind": "StringLiteral",
      "offset": 5876,
      "length": 1,
      "value": "\", got \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/ExpectationMessage.swift",
      "kind": "StringLiteral",
      "offset": 5891,
      "length": 1,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/ExpectationMessage.swift",
      "kind": "StringLiteral",
      "offset": 5958,
      "length": 75,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/ExpectationMessage.swift",
      "kind": "StringLiteral",
      "offset": 5965,
      "length": 1,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/ExpectationMessage.swift",
      "kind": "StringLiteral",
      "offset": 6032,
      "length": 1,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/ExpectationMessage.swift",
      "kind": "StringLiteral",
      "offset": 6098,
      "length": 75,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/ExpectationMessage.swift",
      "kind": "StringLiteral",
      "offset": 6166,
      "length": 1,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/ExpectationMessage.swift",
      "kind": "StringLiteral",
      "offset": 6172,
      "length": 1,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/ExpectationMessage.swift",
      "kind": "StringLiteral",
      "offset": 6238,
      "length": 79,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/ExpectationMessage.swift",
      "kind": "StringLiteral",
      "offset": 6306,
      "length": 1,
      "value": "\"\n\n\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/ExpectationMessage.swift",
      "kind": "StringLiteral",
      "offset": 6316,
      "length": 1,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/ExpectationMessage.swift",
      "kind": "StringLiteral",
      "offset": 7219,
      "length": 15,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/ExpectationMessage.swift",
      "kind": "StringLiteral",
      "offset": 7226,
      "length": 1,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/ExpectationMessage.swift",
      "kind": "StringLiteral",
      "offset": 7233,
      "length": 1,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/ExpectationMessage.swift",
      "kind": "StringLiteral",
      "offset": 7984,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/ExpectationMessage.swift",
      "kind": "StringLiteral",
      "offset": 8014,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/ExpectationMessage.swift",
      "kind": "StringLiteral",
      "offset": 8125,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/ExpectationMessage.swift",
      "kind": "StringLiteral",
      "offset": 8726,
      "length": 21,
      "value": "\"Nimble.NMBExpectationMessage\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeEmpty.swift",
      "kind": "StringLiteral",
      "offset": 265,
      "length": 10,
      "value": "\"be empty\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeEmpty.swift",
      "kind": "StringLiteral",
      "offset": 746,
      "length": 10,
      "value": "\"be empty\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeEmpty.swift",
      "kind": "StringLiteral",
      "offset": 1182,
      "length": 10,
      "value": "\"be empty\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeEmpty.swift",
      "kind": "StringLiteral",
      "offset": 1597,
      "length": 10,
      "value": "\"be empty\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeEmpty.swift",
      "kind": "StringLiteral",
      "offset": 2025,
      "length": 10,
      "value": "\"be empty\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeEmpty.swift",
      "kind": "IntegerLiteral",
      "offset": 2194,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeEmpty.swift",
      "kind": "StringLiteral",
      "offset": 2597,
      "length": 10,
      "value": "\"be empty\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeEmpty.swift",
      "kind": "IntegerLiteral",
      "offset": 2765,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeEmpty.swift",
      "kind": "StringLiteral",
      "offset": 3016,
      "length": 10,
      "value": "\"be empty\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeEmpty.swift",
      "kind": "IntegerLiteral",
      "offset": 3184,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeEmpty.swift",
      "kind": "StringLiteral",
      "offset": 3441,
      "length": 10,
      "value": "\"be empty\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeEmpty.swift",
      "kind": "IntegerLiteral",
      "offset": 3609,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeEmpty.swift",
      "kind": "StringLiteral",
      "offset": 4411,
      "length": 102,
      "value": "\"be empty (only works for NSArrays, NSSets, NSIndexSets, NSDictionaries, NSHashTables, and NSStrings)\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeEmpty.swift",
      "kind": "StringLiteral",
      "offset": 4769,
      "length": 51,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeEmpty.swift",
      "kind": "StringLiteral",
      "offset": 4814,
      "length": 4,
      "value": "\" type\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeEmpty.swift",
      "kind": "StringLiteral",
      "offset": 5033,
      "length": 10,
      "value": "\"be empty\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling.swift",
      "kind": "IntegerLiteral",
      "offset": 1408,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling.swift",
      "kind": "IntegerLiteral",
      "offset": 1482,
      "length": 2,
      "value": "10"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling.swift",
      "kind": "StringLiteral",
      "offset": 1956,
      "length": 28,
      "value": "\"expect(...).\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling.swift",
      "kind": "StringLiteral",
      "offset": 1978,
      "length": 1,
      "value": "\"(...)\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling.swift",
      "kind": "StringLiteral",
      "offset": 3064,
      "length": 46,
      "value": "\"matched the predicate when it shouldn't have\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling.swift",
      "kind": "StringLiteral",
      "offset": 3278,
      "length": 48,
      "value": "\"didn't match the predicate when it should have\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling.swift",
      "kind": "StringLiteral",
      "offset": 3490,
      "length": 36,
      "value": "\"timed out before returning a value\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling.swift",
      "kind": "StringLiteral",
      "offset": 3696,
      "length": 27,
      "value": "\"never match the predicate\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling.swift",
      "kind": "StringLiteral",
      "offset": 3822,
      "length": 28,
      "value": "\"always match the predicate\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling.swift",
      "kind": "StringLiteral",
      "offset": 3958,
      "length": 37,
      "value": "\"unexpected error thrown: <\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling.swift",
      "kind": "StringLiteral",
      "offset": 3993,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling.swift",
      "kind": "StringLiteral",
      "offset": 4101,
      "length": 43,
      "value": "\"unexpected exception raised: \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling.swift",
      "kind": "StringLiteral",
      "offset": 4143,
      "length": 3,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling.swift",
      "kind": "StringLiteral",
      "offset": 4242,
      "length": 51,
      "value": "\" (timed out, but main run loop was unresponsive).\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling.swift",
      "kind": "StringLiteral",
      "offset": 4316,
      "length": 32,
      "value": "\"main run loop was unresponsive\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling.swift",
      "kind": "StringLiteral",
      "offset": 4458,
      "length": 47,
      "value": "\"Reached .incomplete state for \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling.swift",
      "kind": "StringLiteral",
      "offset": 4498,
      "length": 1,
      "value": "\"(...).\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling.swift",
      "kind": "StringLiteral",
      "offset": 4597,
      "length": 221,
      "value": "\"expect(...).toEventually(...) requires an explicit closure (eg - expect { ... }.toEventually(...) )\nSwift 1.2 @autoclosure behavior has changed in an incompatible way for Nimble to function\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling.swift",
      "kind": "StringLiteral",
      "offset": 5860,
      "length": 21,
      "value": "\"NimbleInternalError\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling.swift",
      "kind": "StringLiteral",
      "offset": 6235,
      "length": 14,
      "value": "\"toEventually\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling.swift",
      "kind": "StringLiteral",
      "offset": 6281,
      "length": 15,
      "value": "\"to eventually\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling.swift",
      "kind": "BooleanLiteral",
      "offset": 6367,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling.swift",
      "kind": "StringLiteral",
      "offset": 7457,
      "length": 21,
      "value": "\"NimbleInternalError\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling.swift",
      "kind": "StringLiteral",
      "offset": 7838,
      "length": 17,
      "value": "\"toEventuallyNot\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling.swift",
      "kind": "StringLiteral",
      "offset": 7887,
      "length": 19,
      "value": "\"to eventually not\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling.swift",
      "kind": "BooleanLiteral",
      "offset": 7977,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling.swift",
      "kind": "StringLiteral",
      "offset": 10184,
      "length": 21,
      "value": "\"NimbleInternalError\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling.swift",
      "kind": "StringLiteral",
      "offset": 10555,
      "length": 9,
      "value": "\"toNever\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling.swift",
      "kind": "StringLiteral",
      "offset": 10596,
      "length": 10,
      "value": "\"to never\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling.swift",
      "kind": "BooleanLiteral",
      "offset": 10677,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling.swift",
      "kind": "StringLiteral",
      "offset": 12836,
      "length": 21,
      "value": "\"NimbleInternalError\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling.swift",
      "kind": "StringLiteral",
      "offset": 13208,
      "length": 10,
      "value": "\"toAlways\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling.swift",
      "kind": "StringLiteral",
      "offset": 13250,
      "length": 11,
      "value": "\"to always\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Polling.swift",
      "kind": "BooleanLiteral",
      "offset": 13332,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/SatisfyAllOf.swift",
      "kind": "StringLiteral",
      "offset": 994,
      "length": 37,
      "value": "\"{\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/SatisfyAllOf.swift",
      "kind": "StringLiteral",
      "offset": 1029,
      "length": 1,
      "value": "\"}\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/SatisfyAllOf.swift",
      "kind": "StringLiteral",
      "offset": 1201,
      "length": 16,
      "value": "\"match all of: \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/SatisfyAllOf.swift",
      "kind": "StringLiteral",
      "offset": 1254,
      "length": 8,
      "value": "\", and \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/SatisfyAllOf.swift",
      "kind": "StringLiteral",
      "offset": 1289,
      "length": 16,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/SatisfyAllOf.swift",
      "kind": "StringLiteral",
      "offset": 1304,
      "length": 1,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/SatisfyAllOf.swift",
      "kind": "StringLiteral",
      "offset": 1395,
      "length": 16,
      "value": "\"match all of: \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/SatisfyAllOf.swift",
      "kind": "StringLiteral",
      "offset": 1448,
      "length": 8,
      "value": "\", and \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/SatisfyAllOf.swift",
      "kind": "StringLiteral",
      "offset": 2112,
      "length": 55,
      "value": "\"satisfyAllOf must be called with at least one matcher\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/BeNil.swift",
      "kind": "StringLiteral",
      "offset": 353,
      "length": 8,
      "value": "\"be nil\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/PollAwait.swift",
      "kind": "IntegerLiteral",
      "offset": 132,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/PollAwait.swift",
      "kind": "IntegerLiteral",
      "offset": 192,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/PollAwait.swift",
      "kind": "StringLiteral",
      "offset": 415,
      "length": 34,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/PollAwait.swift",
      "kind": "StringLiteral",
      "offset": 423,
      "length": 2,
      "value": "\" at \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/PollAwait.swift",
      "kind": "StringLiteral",
      "offset": 434,
      "length": 1,
      "value": "\":\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/PollAwait.swift",
      "kind": "StringLiteral",
      "offset": 448,
      "length": 1,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/PollAwait.swift",
      "kind": "StringLiteral",
      "offset": 1050,
      "length": 32,
      "value": "\"quick.nimble.AssertionWaitLock\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/PollAwait.swift",
      "kind": "StringLiteral",
      "offset": 1328,
      "length": 23,
      "value": "\"InvalidNimbleAPIUsage\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/PollAwait.swift",
      "kind": "StringLiteral",
      "offset": 1365,
      "length": 281,
      "value": "\"Nested async expectations are not allowed to avoid creating flaky tests.\n\nThe call to\n\t\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/PollAwait.swift",
      "kind": "StringLiteral",
      "offset": 1500,
      "length": 9,
      "value": "\"\ntriggered this exception because\n\t\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/PollAwait.swift",
      "kind": "StringLiteral",
      "offset": 1577,
      "length": 2,
      "value": "\"\nis currently managing the main run loop.\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/PollAwait.swift",
      "kind": "BooleanLiteral",
      "offset": 2751,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/PollAwait.swift",
      "kind": "BooleanLiteral",
      "offset": 2780,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/PollAwait.swift",
      "kind": "BooleanLiteral",
      "offset": 2890,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/PollAwait.swift",
      "kind": "BooleanLiteral",
      "offset": 2919,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/PollAwait.swift",
      "kind": "IntegerLiteral",
      "offset": 3290,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/PollAwait.swift",
      "kind": "BooleanLiteral",
      "offset": 3830,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/PollAwait.swift",
      "kind": "BooleanLiteral",
      "offset": 3871,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/PollAwait.swift",
      "kind": "IntegerLiteral",
      "offset": 6636,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/PollAwait.swift",
      "kind": "IntegerLiteral",
      "offset": 6703,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/PollAwait.swift",
      "kind": "IntegerLiteral",
      "offset": 10778,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/PollAwait.swift",
      "kind": "IntegerLiteral",
      "offset": 10953,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/PollAwait.swift",
      "kind": "IntegerLiteral",
      "offset": 10996,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/PollAwait.swift",
      "kind": "StringLiteral",
      "offset": 11528,
      "length": 69,
      "value": "\"waitUntil(..) expects its completion closure to be only called once\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Utils\/PollAwait.swift",
      "kind": "BooleanLiteral",
      "offset": 13655,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/EndWith.swift",
      "kind": "StringLiteral",
      "offset": 264,
      "length": 29,
      "value": "\"end with <\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/EndWith.swift",
      "kind": "StringLiteral",
      "offset": 291,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/EndWith.swift",
      "kind": "StringLiteral",
      "offset": 934,
      "length": 29,
      "value": "\"end with <\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/EndWith.swift",
      "kind": "StringLiteral",
      "offset": 961,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/EndWith.swift",
      "kind": "IntegerLiteral",
      "offset": 1106,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/EndWith.swift",
      "kind": "BooleanLiteral",
      "offset": 1144,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/EndWith.swift",
      "kind": "IntegerLiteral",
      "offset": 1288,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/EndWith.swift",
      "kind": "StringLiteral",
      "offset": 1872,
      "length": 31,
      "value": "\"end with <\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/EndWith.swift",
      "kind": "StringLiteral",
      "offset": 1901,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/DSL.swift",
      "kind": "BooleanLiteral",
      "offset": 420,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/DSL.swift",
      "kind": "BooleanLiteral",
      "offset": 843,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/DSL.swift",
      "kind": "BooleanLiteral",
      "offset": 1267,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/DSL.swift",
      "kind": "BooleanLiteral",
      "offset": 1693,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/DSL.swift",
      "kind": "BooleanLiteral",
      "offset": 2235,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/DSL.swift",
      "kind": "BooleanLiteral",
      "offset": 2770,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/DSL.swift",
      "kind": "BooleanLiteral",
      "offset": 3306,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/DSL.swift",
      "kind": "BooleanLiteral",
      "offset": 3844,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/DSL.swift",
      "kind": "BooleanLiteral",
      "offset": 4072,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/DSL.swift",
      "kind": "StringLiteral",
      "offset": 4449,
      "length": 21,
      "value": "\"fail() always fails\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/DSL.swift",
      "kind": "StringLiteral",
      "offset": 5021,
      "length": 190,
      "value": "\"Nimble Bug Found: \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/DSL.swift",
      "kind": "StringLiteral",
      "offset": 5057,
      "length": 2,
      "value": "\" at \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/DSL.swift",
      "kind": "StringLiteral",
      "offset": 5068,
      "length": 1,
      "value": "\":\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/DSL.swift",
      "kind": "StringLiteral",
      "offset": 5076,
      "length": 1,
      "value": "\".\nPlease file a bug to Nimble: https:\/\/github.com\/Quick\/Nimble\/issues with the code snippet that caused this error.\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Carthage\/Checkouts\/CwlPreconditionTesting\/Sources\/CwlPreconditionTesting\/CwlBadInstructionException.swift",
      "kind": "StringLiteral",
      "offset": 1509,
      "length": 34,
      "value": "\"com.cocoawithlove.BadInstruction\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Carthage\/Checkouts\/CwlPreconditionTesting\/Sources\/CwlPreconditionTesting\/CwlBadInstructionException.swift",
      "kind": "IntegerLiteral",
      "offset": 2155,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Carthage\/Checkouts\/CwlPreconditionTesting\/Sources\/CwlPreconditionTesting\/CwlBadInstructionException.swift",
      "kind": "IntegerLiteral",
      "offset": 2331,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Carthage\/Checkouts\/CwlPreconditionTesting\/Sources\/CwlPreconditionTesting\/CwlBadInstructionException.swift",
      "kind": "StringLiteral",
      "offset": 1443,
      "length": 23,
      "value": "\"Nimble.BadInstructionException\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/SatisfyAnyOf.swift",
      "kind": "StringLiteral",
      "offset": 1037,
      "length": 37,
      "value": "\"{\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/SatisfyAnyOf.swift",
      "kind": "StringLiteral",
      "offset": 1072,
      "length": 1,
      "value": "\"}\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/SatisfyAnyOf.swift",
      "kind": "StringLiteral",
      "offset": 1264,
      "length": 16,
      "value": "\"match one of: \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/SatisfyAnyOf.swift",
      "kind": "StringLiteral",
      "offset": 1317,
      "length": 7,
      "value": "\", or \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/SatisfyAnyOf.swift",
      "kind": "StringLiteral",
      "offset": 1355,
      "length": 16,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/SatisfyAnyOf.swift",
      "kind": "StringLiteral",
      "offset": 1370,
      "length": 1,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/SatisfyAnyOf.swift",
      "kind": "StringLiteral",
      "offset": 1477,
      "length": 16,
      "value": "\"match one of: \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/SatisfyAnyOf.swift",
      "kind": "StringLiteral",
      "offset": 1530,
      "length": 7,
      "value": "\", or \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/SatisfyAnyOf.swift",
      "kind": "StringLiteral",
      "offset": 2209,
      "length": 55,
      "value": "\"satisfyAnyOf must be called with at least one matcher\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Expression.swift",
      "kind": "BooleanLiteral",
      "offset": 2024,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Expression.swift",
      "kind": "BooleanLiteral",
      "offset": 2151,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Expression.swift",
      "kind": "BooleanLiteral",
      "offset": 3315,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Expression.swift",
      "kind": "BooleanLiteral",
      "offset": 4436,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Expression.swift",
      "kind": "BooleanLiteral",
      "offset": 4710,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/FailureMessage.swift",
      "kind": "StringLiteral",
      "offset": 253,
      "length": 10,
      "value": "\"expected\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/FailureMessage.swift",
      "kind": "StringLiteral",
      "offset": 302,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/FailureMessage.swift",
      "kind": "StringLiteral",
      "offset": 380,
      "length": 4,
      "value": "\"to\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/FailureMessage.swift",
      "kind": "StringLiteral",
      "offset": 425,
      "length": 7,
      "value": "\"match\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/FailureMessage.swift",
      "kind": "StringLiteral",
      "offset": 472,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/FailureMessage.swift",
      "kind": "StringLiteral",
      "offset": 1580,
      "length": 4,
      "value": "\"\n\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/FailureMessage.swift",
      "kind": "StringLiteral",
      "offset": 1687,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/FailureMessage.swift",
      "kind": "StringLiteral",
      "offset": 1769,
      "length": 37,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/FailureMessage.swift",
      "kind": "StringLiteral",
      "offset": 1781,
      "length": 1,
      "value": "\" \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/FailureMessage.swift",
      "kind": "StringLiteral",
      "offset": 1787,
      "length": 1,
      "value": "\" \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/FailureMessage.swift",
      "kind": "StringLiteral",
      "offset": 1805,
      "length": 1,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/FailureMessage.swift",
      "kind": "StringLiteral",
      "offset": 1870,
      "length": 73,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/FailureMessage.swift",
      "kind": "StringLiteral",
      "offset": 1882,
      "length": 1,
      "value": "\" \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/FailureMessage.swift",
      "kind": "StringLiteral",
      "offset": 1888,
      "length": 1,
      "value": "\" \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/FailureMessage.swift",
      "kind": "StringLiteral",
      "offset": 1906,
      "length": 1,
      "value": "\", got \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/FailureMessage.swift",
      "kind": "StringLiteral",
      "offset": 1926,
      "length": 1,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/FailureMessage.swift",
      "kind": "StringLiteral",
      "offset": 1942,
      "length": 1,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/FailureMessage.swift",
      "kind": "StringLiteral",
      "offset": 2064,
      "length": 22,
      "value": "\"\n\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/FailureMessage.swift",
      "kind": "StringLiteral",
      "offset": 2085,
      "length": 1,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/FailureMessage.swift",
      "kind": "StringLiteral",
      "offset": 2168,
      "length": 30,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/FailureMessage.swift",
      "kind": "StringLiteral",
      "offset": 2187,
      "length": 1,
      "value": "\"\n\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/FailureMessage.swift",
      "kind": "StringLiteral",
      "offset": 2197,
      "length": 1,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/FailureMessage.swift",
      "kind": "StringLiteral",
      "offset": 2352,
      "length": 8,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/FailureMessage.swift",
      "kind": "StringLiteral",
      "offset": 2359,
      "length": 1,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/FailureMessage.swift",
      "kind": "StringLiteral",
      "offset": 2662,
      "length": 25,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/FailureMessage.swift",
      "kind": "StringLiteral",
      "offset": 2670,
      "length": 1,
      "value": "\"\n\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/FailureMessage.swift",
      "kind": "StringLiteral",
      "offset": 2686,
      "length": 1,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/FailureMessage.swift",
      "kind": "StringLiteral",
      "offset": 2729,
      "length": 10,
      "value": "\"\n\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/FailureMessage.swift",
      "kind": "StringLiteral",
      "offset": 2738,
      "length": 1,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/HaveCount.swift",
      "kind": "StringLiteral",
      "offset": 780,
      "length": 82,
      "value": "\"have \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/HaveCount.swift",
      "kind": "StringLiteral",
      "offset": 822,
      "length": 4,
      "value": "\" with count \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/HaveCount.swift",
      "kind": "StringLiteral",
      "offset": 861,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/HaveCount.swift",
      "kind": "StringLiteral",
      "offset": 892,
      "length": 22,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/HaveCount.swift",
      "kind": "StringLiteral",
      "offset": 913,
      "length": 1,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/HaveCount.swift",
      "kind": "StringLiteral",
      "offset": 968,
      "length": 41,
      "value": "\"Actual Value: \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/HaveCount.swift",
      "kind": "StringLiteral",
      "offset": 1008,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/HaveCount.swift",
      "kind": "StringLiteral",
      "offset": 1221,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/HaveCount.swift",
      "kind": "StringLiteral",
      "offset": 1630,
      "length": 82,
      "value": "\"have \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/HaveCount.swift",
      "kind": "StringLiteral",
      "offset": 1672,
      "length": 4,
      "value": "\" with count \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/HaveCount.swift",
      "kind": "StringLiteral",
      "offset": 1711,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/HaveCount.swift",
      "kind": "StringLiteral",
      "offset": 1742,
      "length": 63,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/HaveCount.swift",
      "kind": "StringLiteral",
      "offset": 1763,
      "length": 1,
      "value": "\". Actual Value: \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/HaveCount.swift",
      "kind": "StringLiteral",
      "offset": 1804,
      "length": 1,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/HaveCount.swift",
      "kind": "StringLiteral",
      "offset": 2034,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/HaveCount.swift",
      "kind": "StringLiteral",
      "offset": 2813,
      "length": 58,
      "value": "\"get type of NSArray, NSSet, NSDictionary, or NSHashTable\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/HaveCount.swift",
      "kind": "StringLiteral",
      "offset": 2901,
      "length": 46,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/HaveCount.swift",
      "kind": "StringLiteral",
      "offset": 2946,
      "length": 1,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/HaveCount.swift",
      "kind": "StringLiteral",
      "offset": 3075,
      "length": 62,
      "value": "\"have a collection with count \""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/HaveCount.swift",
      "kind": "StringLiteral",
      "offset": 3136,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/Predicate.swift",
      "kind": "StringLiteral",
      "offset": 1977,
      "length": 7,
      "value": "\"match\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/Predicate.swift",
      "kind": "StringLiteral",
      "offset": 2465,
      "length": 7,
      "value": "\"match\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/Predicate.swift",
      "kind": "StringLiteral",
      "offset": 2980,
      "length": 7,
      "value": "\"match\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/Predicate.swift",
      "kind": "StringLiteral",
      "offset": 3518,
      "length": 7,
      "value": "\"match\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/Predicate.swift",
      "kind": "BooleanLiteral",
      "offset": 6365,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/Predicate.swift",
      "kind": "BooleanLiteral",
      "offset": 6412,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/Predicate.swift",
      "kind": "BooleanLiteral",
      "offset": 6536,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/Predicate.swift",
      "kind": "BooleanLiteral",
      "offset": 6578,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/Predicate.swift",
      "kind": "StringLiteral",
      "offset": 8469,
      "length": 37,
      "value": "\"unexpected error thrown: <\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/Predicate.swift",
      "kind": "StringLiteral",
      "offset": 8504,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/Predicate.swift",
      "kind": "StringLiteral",
      "offset": 7963,
      "length": 12,
      "value": "\"Nimble.NMBPredicate\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/Predicate.swift",
      "kind": "StringLiteral",
      "offset": 8562,
      "length": 18,
      "value": "\"Nimble.NMBPredicateResult\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/Predicate.swift",
      "kind": "IntegerLiteral",
      "offset": 9583,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/Predicate.swift",
      "kind": "IntegerLiteral",
      "offset": 9670,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/Predicate.swift",
      "kind": "IntegerLiteral",
      "offset": 9749,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/Predicate.swift",
      "kind": "BooleanLiteral",
      "offset": 9971,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/Predicate.swift",
      "kind": "StringLiteral",
      "offset": 10751,
      "length": 40,
      "value": "\"Unhandle status for NMBPredicateStatus\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/Predicate.swift",
      "kind": "StringLiteral",
      "offset": 9377,
      "length": 18,
      "value": "\"Nimble.NMBPredicateStatus\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/ThrowAssertion.swift",
      "kind": "StringLiteral",
      "offset": 4136,
      "length": 20,
      "value": "\"throw an assertion\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/ThrowAssertion.swift",
      "kind": "BooleanLiteral",
      "offset": 6658,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/ThrowAssertion.swift",
      "kind": "StringLiteral",
      "offset": 6716,
      "length": 40,
      "value": "\"; threw error instead <\""
    },
    {
      "filePath": "\/Users\/ignacio\/dev\/other\/AsyncImageView\/Carthage\/Checkouts\/Nimble\/Sources\/Nimble\/Matchers\/ThrowAssertion.swift",
      "kind": "StringLiteral",
      "offset": 6754,
      "length": 1,
      "value": "\">\""
    }
  ]
}